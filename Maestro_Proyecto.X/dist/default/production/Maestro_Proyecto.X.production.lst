

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Sep 02 18:31:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	strings
   484  1000                     __pstrings:
   485  1000                     stringtab:
   486  1000                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489  1000  1BFF               	btfsc	btemp+1,7
   490  1001  280A               	ljmp	stringcode
   491  1002  1383               	bcf	3,7
   492  1003  187F               	btfsc	btemp+1,0
   493  1004  1783               	bsf	3,7
   494  1005  0800               	movf	0,w
   495  1006  0A84               	incf	4,f
   496  1007  1903               	skipnz
   497  1008  0AFF               	incf	btemp+1,f
   498  1009  0008               	return
   499  100A                     stringcode:
   500  100A                     stringdir:
   501  100A  3010               	movlw	high stringdir
   502  100B  008A               	movwf	10
   503  100C  0804               	movf	4,w
   504  100D  0A84               	incf	4,f
   505  100E  0782               	addwf	2,f
   506  100F                     __stringbase:
   507  100F  3400               	retlw	0
   508  1010                     __end_of__stringtab:
   509  1010                     __powers_:
   510  1010  3400               	retlw	0
   511  1011  3400               	retlw	0
   512  1012  3480               	retlw	128
   513  1013  343F               	retlw	63
   514  1014  3400               	retlw	0
   515  1015  3400               	retlw	0
   516  1016  3420               	retlw	32
   517  1017  3441               	retlw	65
   518  1018  3400               	retlw	0
   519  1019  3400               	retlw	0
   520  101A  34C8               	retlw	200
   521  101B  3442               	retlw	66
   522  101C  3400               	retlw	0
   523  101D  3400               	retlw	0
   524  101E  347A               	retlw	122
   525  101F  3444               	retlw	68
   526  1020  3400               	retlw	0
   527  1021  3440               	retlw	64
   528  1022  341C               	retlw	28
   529  1023  3446               	retlw	70
   530  1024  3400               	retlw	0
   531  1025  3450               	retlw	80
   532  1026  34C3               	retlw	195
   533  1027  3447               	retlw	71
   534  1028  3400               	retlw	0
   535  1029  3424               	retlw	36
   536  102A  3474               	retlw	116
   537  102B  3449               	retlw	73
   538  102C  3480               	retlw	128
   539  102D  3496               	retlw	150
   540  102E  3418               	retlw	24
   541  102F  344B               	retlw	75
   542  1030  3420               	retlw	32
   543  1031  34BC               	retlw	188
   544  1032  34BE               	retlw	190
   545  1033  344C               	retlw	76
   546  1034  3428               	retlw	40
   547  1035  346B               	retlw	107
   548  1036  346E               	retlw	110
   549  1037  344E               	retlw	78
   550  1038  34F9               	retlw	249
   551  1039  3402               	retlw	2
   552  103A  3415               	retlw	21
   553  103B  3450               	retlw	80
   554  103C  34EC               	retlw	236
   555  103D  3478               	retlw	120
   556  103E  34AD               	retlw	173
   557  103F  3460               	retlw	96
   558  1040  34CA               	retlw	202
   559  1041  34F2               	retlw	242
   560  1042  3449               	retlw	73
   561  1043  3471               	retlw	113
   562  1044                     __end_of__powers_:
   563  1044                     __npowers_:
   564  1044  3400               	retlw	0
   565  1045  3400               	retlw	0
   566  1046  3480               	retlw	128
   567  1047  343F               	retlw	63
   568  1048  34CD               	retlw	205
   569  1049  34CC               	retlw	204
   570  104A  34CC               	retlw	204
   571  104B  343D               	retlw	61
   572  104C  340A               	retlw	10
   573  104D  34D7               	retlw	215
   574  104E  3423               	retlw	35
   575  104F  343C               	retlw	60
   576  1050  346F               	retlw	111
   577  1051  3412               	retlw	18
   578  1052  3483               	retlw	131
   579  1053  343A               	retlw	58
   580  1054  3417               	retlw	23
   581  1055  34B7               	retlw	183
   582  1056  34D1               	retlw	209
   583  1057  3438               	retlw	56
   584  1058  34AC               	retlw	172
   585  1059  34C5               	retlw	197
   586  105A  3427               	retlw	39
   587  105B  3437               	retlw	55
   588  105C  34BD               	retlw	189
   589  105D  3437               	retlw	55
   590  105E  3486               	retlw	134
   591  105F  3435               	retlw	53
   592  1060  3495               	retlw	149
   593  1061  34BF               	retlw	191
   594  1062  34D6               	retlw	214
   595  1063  3433               	retlw	51
   596  1064  3477               	retlw	119
   597  1065  34CC               	retlw	204
   598  1066  342B               	retlw	43
   599  1067  3432               	retlw	50
   600  1068  345F               	retlw	95
   601  1069  3470               	retlw	112
   602  106A  3489               	retlw	137
   603  106B  3430               	retlw	48
   604  106C  34FF               	retlw	255
   605  106D  34E6               	retlw	230
   606  106E  34DB               	retlw	219
   607  106F  342E               	retlw	46
   608  1070  3408               	retlw	8
   609  1071  34E5               	retlw	229
   610  1072  343C               	retlw	60
   611  1073  341E               	retlw	30
   612  1074  3460               	retlw	96
   613  1075  3442               	retlw	66
   614  1076  34A2               	retlw	162
   615  1077  340D               	retlw	13
   616  1078                     __end_of__npowers_:
   617  1078                     _dpowers:
   618  1078  3401               	retlw	1
   619  1079  3400               	retlw	0
   620  107A  3400               	retlw	0
   621  107B  3400               	retlw	0
   622  107C  340A               	retlw	10
   623  107D  3400               	retlw	0
   624  107E  3400               	retlw	0
   625  107F  3400               	retlw	0
   626  1080  3464               	retlw	100
   627  1081  3400               	retlw	0
   628  1082  3400               	retlw	0
   629  1083  3400               	retlw	0
   630  1084  34E8               	retlw	232
   631  1085  3403               	retlw	3
   632  1086  3400               	retlw	0
   633  1087  3400               	retlw	0
   634  1088  3410               	retlw	16
   635  1089  3427               	retlw	39
   636  108A  3400               	retlw	0
   637  108B  3400               	retlw	0
   638  108C  34A0               	retlw	160
   639  108D  3486               	retlw	134
   640  108E  3401               	retlw	1
   641  108F  3400               	retlw	0
   642  1090  3440               	retlw	64
   643  1091  3442               	retlw	66
   644  1092  340F               	retlw	15
   645  1093  3400               	retlw	0
   646  1094  3480               	retlw	128
   647  1095  3496               	retlw	150
   648  1096  3498               	retlw	152
   649  1097  3400               	retlw	0
   650  1098  3400               	retlw	0
   651  1099  34E1               	retlw	225
   652  109A  34F5               	retlw	245
   653  109B  3405               	retlw	5
   654  109C  3400               	retlw	0
   655  109D  34CA               	retlw	202
   656  109E  349A               	retlw	154
   657  109F  343B               	retlw	59
   658  10A0                     __end_of_dpowers:
   659  0013                     _SSPBUF	set	19
   660  0014                     _SSPCON	set	20
   661  0018                     _RCSTAbits	set	24
   662  0009                     _PORTE	set	9
   663  0005                     _PORTA	set	5
   664  0009                     _PORTEbits	set	9
   665  000B                     _INTCONbits	set	11
   666  0005                     _PORTAbits	set	5
   667  0019                     _TXREG	set	25
   668  0008                     _PORTD	set	8
   669  0006                     _PORTBbits	set	6
   670  0063                     _SSPIF	set	99
   671  005E                     _PEIE	set	94
   672  005F                     _GIE	set	95
   673  0030                     _RB0	set	48
   674  0058                     _RBIF	set	88
   675  0064                     _TXIF	set	100
   676  0091                     _SSPCON2bits	set	145
   677  0087                     _TRISCbits	set	135
   678  0094                     _SSPSTAT	set	148
   679  0093                     _SSPADD	set	147
   680  0091                     _SSPCON2	set	145
   681  009A                     _SPBRGH	set	154
   682  0099                     _SPBRG	set	153
   683  0098                     _TXSTAbits	set	152
   684  0096                     _IOCBbits	set	150
   685  008F                     _OSCCONbits	set	143
   686  0095                     _WPUB	set	149
   687  0081                     _OPTION_REGbits	set	129
   688  0086                     _TRISBbits	set	134
   689  0089                     _TRISE	set	137
   690  0086                     _TRISB	set	134
   691  0085                     _TRISA	set	133
   692  0088                     _TRISD	set	136
   693  0463                     _SSPIE	set	1123
   694  043C                     _TRISC4	set	1084
   695  043B                     _TRISC3	set	1083
   696  0187                     _BAUDCTLbits	set	391
   697  0189                     _ANSELH	set	393
   698  0188                     _ANSEL	set	392
   699  10A0                     STR_1:
   700  10A0  340D               	retlw	13
   701  10A1  3420               	retlw	32	;' '
   702  10A2  3476               	retlw	118	;'v'
   703  10A3  3461               	retlw	97	;'a'
   704  10A4  346C               	retlw	108	;'l'
   705  10A5  346F               	retlw	111	;'o'
   706  10A6  3472               	retlw	114	;'r'
   707  10A7  3453               	retlw	83	;'S'
   708  10A8  3431               	retlw	49	;'1'
   709  10A9  343D               	retlw	61	;'='
   710  10AA  3425               	retlw	37	;'%'
   711  10AB  342E               	retlw	46	;'.'
   712  10AC  3432               	retlw	50	;'2'
   713  10AD  3466               	retlw	102	;'f'
   714  10AE  3420               	retlw	32	;' '
   715  10AF  340A               	retlw	10
   716  10B0  3400               	retlw	0
   717  10B1                     STR_2:
   718  10B1  340A               	retlw	10
   719  10B2  3420               	retlw	32	;' '
   720  10B3  3476               	retlw	118	;'v'
   721  10B4  3461               	retlw	97	;'a'
   722  10B5  346C               	retlw	108	;'l'
   723  10B6  346F               	retlw	111	;'o'
   724  10B7  3472               	retlw	114	;'r'
   725  10B8  3453               	retlw	83	;'S'
   726  10B9  3432               	retlw	50	;'2'
   727  10BA  343D               	retlw	61	;'='
   728  10BB  3425               	retlw	37	;'%'
   729  10BC  342E               	retlw	46	;'.'
   730  10BD  3432               	retlw	50	;'2'
   731  10BE  3466               	retlw	102	;'f'
   732  10BF  340A               	retlw	10
   733  10C0  3400               	retlw	0
   734  10C1                     STR_3:
   735  10C1  340A               	retlw	10
   736  10C2  3420               	retlw	32	;' '
   737  10C3  3463               	retlw	99	;'c'
   738  10C4  346F               	retlw	111	;'o'
   739  10C5  346E               	retlw	110	;'n'
   740  10C6  3474               	retlw	116	;'t'
   741  10C7  3461               	retlw	97	;'a'
   742  10C8  3464               	retlw	100	;'d'
   743  10C9  346F               	retlw	111	;'o'
   744  10CA  3472               	retlw	114	;'r'
   745  10CB  343D               	retlw	61	;'='
   746  10CC  3425               	retlw	37	;'%'
   747  10CD  3464               	retlw	100	;'d'
   748  10CE  3400               	retlw	0
   749  10CF                     STR_8:
   750  10CF  3425               	retlw	37	;'%'
   751  10D0  342E               	retlw	46	;'.'
   752  10D1  3432               	retlw	50	;'2'
   753  10D2  3464               	retlw	100	;'d'
   754  10D3  3455               	retlw	85	;'U'
   755  10D4  346E               	retlw	110	;'n'
   756  10D5  3469               	retlw	105	;'i'
   757  10D6  3400               	retlw	0
   758  10D7                     STR_4:
   759  10D7  3425               	retlw	37	;'%'
   760  10D8  342E               	retlw	46	;'.'
   761  10D9  3433               	retlw	51	;'3'
   762  10DA  3464               	retlw	100	;'d'
   763  10DB  3463               	retlw	99	;'c'
   764  10DC  346D               	retlw	109	;'m'
   765  10DD  3400               	retlw	0
   766  10DE                     STR_9:
   767  10DE  3425               	retlw	37	;'%'
   768  10DF  342E               	retlw	46	;'.'
   769  10E0  3433               	retlw	51	;'3'
   770  10E1  3464               	retlw	100	;'d'
   771  10E2  3400               	retlw	0
   772  10E3                     STR_5:
   773  10E3  3453               	retlw	83	;'S'
   774  10E4  3431               	retlw	49	;'1'
   775  10E5  3400               	retlw	0
   776  10E6                     STR_6:
   777  10E6  3453               	retlw	83	;'S'
   778  10E7  3432               	retlw	50	;'2'
   779  10E8  3400               	retlw	0
   780  10E9                     STR_7:
   781  10E9  3453               	retlw	83	;'S'
   782  10EA  3433               	retlw	51	;'3'
   783  10EB  3400               	retlw	0
   784                           
   785                           	psect	cinit
   786  000F                     start_initialization:	
   787                           ; #config settings
   788                           
   789  000F                     __initialization:
   790                           
   791                           ; Clear objects allocated to COMMON
   792  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   793                           
   794                           ; Clear objects allocated to BANK1
   795  0010  1383               	bcf	3,7	;select IRP bank0
   796  0011  30C8               	movlw	low __pbssBANK1
   797  0012  0084               	movwf	4
   798  0013  30DF               	movlw	low (__pbssBANK1+23)
   799  0014  160A  158A  214A  120A  118A  	fcall	clear_ram0
   800                           
   801                           ; Clear objects allocated to BANK3
   802  0019  1783               	bsf	3,7	;select IRP bank2
   803  001A  3090               	movlw	low __pbssBANK3
   804  001B  0084               	movwf	4
   805  001C  30A4               	movlw	low (__pbssBANK3+20)
   806  001D  160A  158A  214A  120A  118A  	fcall	clear_ram0
   807  0022                     end_of_initialization:	
   808                           ;End of C runtime variable initialization code
   809                           
   810  0022                     __end_of__initialization:
   811  0022  0183               	clrf	3
   812  0023  160A  118A  2A67   	ljmp	_main	;jump to C main() function
   813                           
   814                           	psect	bssCOMMON
   815  007B                     __pbssCOMMON:
   816  007B                     _BanStart:
   817  007B                     	ds	1
   818                           
   819                           	psect	bssBANK1
   820  00C8                     __pbssBANK1:
   821  00C8                     _v3:
   822  00C8                     	ds	4
   823  00CC                     _v2:
   824  00CC                     	ds	4
   825  00D0                     _v1:
   826  00D0                     	ds	4
   827  00D4                     _datUltrasonico:
   828  00D4                     	ds	2
   829  00D6                     _contRecipiente:
   830  00D6                     	ds	2
   831  00D8                     _POT:
   832  00D8                     	ds	2
   833  00DA                     _var2:
   834  00DA                     	ds	2
   835  00DC                     _var1:
   836  00DC                     	ds	2
   837  00DE                     _contador:
   838  00DE                     	ds	1
   839                           
   840                           	psect	bssBANK3
   841  0190                     __pbssBANK3:
   842  0190                     _s:
   843  0190                     	ds	20
   844                           
   845                           	psect	clrtext
   846  194A                     clear_ram0:	
   847                           ;	Called with FSR containing the base address, and
   848                           ;	W with the last address+1
   849                           
   850  194A  0064               	clrwdt	;clear the watchdog before getting into this loop
   851  194B                     clrloop0:
   852  194B  0180               	clrf	0	;clear RAM location pointed to by FSR
   853  194C  0A84               	incf	4,f	;increment pointer
   854  194D  0604               	xorwf	4,w	;XOR with final address
   855  194E  1903               	btfsc	3,2	;have we reached the end yet?
   856  194F  3400               	retlw	0	;all done for this memory range, return
   857  1950  0604               	xorwf	4,w	;XOR again to restore value
   858  1951  294B               	goto	clrloop0	;do the next byte
   859                           
   860                           	psect	cstackBANK1
   861  00A0                     __pcstackBANK1:
   862  00A0                     ?___flsub:
   863  00A0                     ___flsub@a:	
   864                           ; 4 bytes @ 0x0
   865                           
   866                           
   867                           ; 4 bytes @ 0x0
   868  00A0                     	ds	4
   869  00A4                     ___flsub@b:
   870                           
   871                           ; 4 bytes @ 0x4
   872  00A4                     	ds	4
   873  00A8                     ??_sprintf:
   874                           
   875                           ; 1 bytes @ 0x8
   876  00A8                     	ds	5
   877  00AD                     _sprintf$1310:
   878                           
   879                           ; 4 bytes @ 0xD
   880  00AD                     	ds	4
   881  00B1                     sprintf@ap:
   882                           
   883                           ; 1 bytes @ 0x11
   884  00B1                     	ds	1
   885  00B2                     sprintf@flag:
   886                           
   887                           ; 2 bytes @ 0x12
   888  00B2                     	ds	2
   889  00B4                     sprintf@eexp:
   890                           
   891                           ; 2 bytes @ 0x14
   892  00B4                     	ds	2
   893  00B6                     sprintf@tmpval:
   894                           
   895                           ; 4 bytes @ 0x16
   896  00B6                     	ds	4
   897  00BA                     sprintf@val:
   898                           
   899                           ; 4 bytes @ 0x1A
   900  00BA                     	ds	4
   901  00BE                     sprintf@fval:
   902                           
   903                           ; 4 bytes @ 0x1E
   904  00BE                     	ds	4
   905  00C2                     sprintf@prec:
   906                           
   907                           ; 2 bytes @ 0x22
   908  00C2                     	ds	2
   909  00C4                     sprintf@sp:
   910                           
   911                           ; 1 bytes @ 0x24
   912  00C4                     	ds	1
   913  00C5                     sprintf@c:
   914                           
   915                           ; 1 bytes @ 0x25
   916  00C5                     	ds	1
   917  00C6                     ??_main:
   918                           
   919                           ; 1 bytes @ 0x26
   920  00C6                     	ds	2
   921                           
   922                           	psect	cstackCOMMON
   923  0070                     __pcstackCOMMON:
   924  0070                     ?_isdigit:
   925  0070                     ?_setup:	
   926                           ; 1 bit 
   927                           
   928  0070                     ?_com_master:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ?_configuracionUART:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ?_I2C_Master_Start:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     ?_I2C_Master_Stop:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_Lcd_Cmd:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_Lcd_Write_Char:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_Lcd_Init:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_Envio_caracter:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_cadena_caracteres:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_valorsensores:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_isr:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ??_isr:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_main:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_I2C_Master_Wait:	
   968                           ; 1 bytes @ 0x0
   969                           
   970                           
   971                           ; 1 bytes @ 0x0
   972  0070                     	ds	2
   973  0072                     ?___fleq:
   974  0072                     ?___flge:	
   975                           ; 1 bit 
   976                           
   977  0072                     ??_configuracionUART:	
   978                           ; 1 bit 
   979                           
   980  0072                     ??_I2C_Master_Start:	
   981                           ; 1 bytes @ 0x2
   982                           
   983  0072                     ?_I2C_Master_Write:	
   984                           ; 1 bytes @ 0x2
   985                           
   986  0072                     ??_I2C_Master_Stop:	
   987                           ; 1 bytes @ 0x2
   988                           
   989  0072                     ??_isdigit:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  0072                     ??_Lcd_Cmd:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  0072                     ??_Lcd_Write_Char:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  0072                     ??_Envio_caracter:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  0072                     ??_I2C_Master_Wait:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004  0072                     ?_I2C_Master_Read:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007  0072                     ?__Umul8_16:	
  1008                           ; 2 bytes @ 0x2
  1009                           
  1010  0072                     ?___wmul:	
  1011                           ; 2 bytes @ 0x2
  1012                           
  1013  0072                     ?___awmod:	
  1014                           ; 2 bytes @ 0x2
  1015                           
  1016  0072                     ?___lwmod:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019  0072                     ?__tdiv_to_l_:	
  1020                           ; 2 bytes @ 0x2
  1021                           
  1022  0072                     ?__div_to_l_:	
  1023                           ; 4 bytes @ 0x2
  1024                           
  1025  0072                     ?___lldiv:	
  1026                           ; 4 bytes @ 0x2
  1027                           
  1028  0072                     ?___flneg:	
  1029                           ; 4 bytes @ 0x2
  1030                           
  1031  0072                     ?___xxtofl:	
  1032                           ; 4 bytes @ 0x2
  1033                           
  1034  0072                     Envio_caracter@caracter:	
  1035                           ; 4 bytes @ 0x2
  1036                           
  1037  0072                     __Umul8_16@multiplicand:	
  1038                           ; 1 bytes @ 0x2
  1039                           
  1040  0072                     _isdigit$1105:	
  1041                           ; 1 bytes @ 0x2
  1042                           
  1043  0072                     I2C_Master_Write@d:	
  1044                           ; 1 bytes @ 0x2
  1045                           
  1046  0072                     I2C_Master_Read@a:	
  1047                           ; 2 bytes @ 0x2
  1048                           
  1049  0072                     ___wmul@multiplier:	
  1050                           ; 2 bytes @ 0x2
  1051                           
  1052  0072                     ___awmod@divisor:	
  1053                           ; 2 bytes @ 0x2
  1054                           
  1055  0072                     ___lwmod@divisor:	
  1056                           ; 2 bytes @ 0x2
  1057                           
  1058  0072                     ___lldiv@divisor:	
  1059                           ; 2 bytes @ 0x2
  1060                           
  1061  0072                     __div_to_l_@f1:	
  1062                           ; 4 bytes @ 0x2
  1063                           
  1064  0072                     ___fleq@ff1:	
  1065                           ; 4 bytes @ 0x2
  1066                           
  1067  0072                     ___flge@ff1:	
  1068                           ; 4 bytes @ 0x2
  1069                           
  1070  0072                     ___flneg@f1:	
  1071                           ; 4 bytes @ 0x2
  1072                           
  1073  0072                     __tdiv_to_l_@f1:	
  1074                           ; 4 bytes @ 0x2
  1075                           
  1076  0072                     ___xxtofl@val:	
  1077                           ; 4 bytes @ 0x2
  1078                           
  1079                           
  1080                           ; 4 bytes @ 0x2
  1081  0072                     	ds	1
  1082  0073                     ??_cadena_caracteres:
  1083  0073                     Lcd_Write_Char@a:	
  1084                           ; 1 bytes @ 0x3
  1085                           
  1086  0073                     isdigit@c:	
  1087                           ; 1 bytes @ 0x3
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x3
  1091  0073                     	ds	1
  1092  0074                     ??_I2C_Master_Write:
  1093  0074                     ??_I2C_Master_Read:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     ??__Umul8_16:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0074                     ?_Lcd_Write_String:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0074                     Lcd_Cmd@a:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     Lcd_Write_String@a:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0074                     cadena_caracteres@i:	
  1109                           ; 2 bytes @ 0x4
  1110                           
  1111  0074                     ___wmul@multiplicand:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114  0074                     ___awmod@dividend:	
  1115                           ; 2 bytes @ 0x4
  1116                           
  1117  0074                     ___lwmod@dividend:	
  1118                           ; 2 bytes @ 0x4
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x4
  1122  0074                     	ds	1
  1123  0075                     ?_Lcd_Set_Cursor:
  1124  0075                     ??_Lcd_Init:	
  1125                           ; 1 bytes @ 0x5
  1126                           
  1127  0075                     Lcd_Set_Cursor@b:	
  1128                           ; 1 bytes @ 0x5
  1129                           
  1130                           
  1131                           ; 1 bytes @ 0x5
  1132  0075                     	ds	1
  1133  0076                     ??_Lcd_Set_Cursor:
  1134  0076                     ??_Lcd_Write_String:	
  1135                           ; 1 bytes @ 0x6
  1136                           
  1137  0076                     ??___wmul:	
  1138                           ; 1 bytes @ 0x6
  1139                           
  1140  0076                     ??___awmod:	
  1141                           ; 1 bytes @ 0x6
  1142                           
  1143  0076                     ??___flneg:	
  1144                           ; 1 bytes @ 0x6
  1145                           
  1146  0076                     ??___lwmod:	
  1147                           ; 1 bytes @ 0x6
  1148                           
  1149  0076                     ??___xxtofl:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0076                     cadena_caracteres@st:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0076                     I2C_Master_Read@temp:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158  0076                     ___wmul@product:	
  1159                           ; 2 bytes @ 0x6
  1160                           
  1161  0076                     __Umul8_16@product:	
  1162                           ; 2 bytes @ 0x6
  1163                           
  1164  0076                     ___lldiv@dividend:	
  1165                           ; 2 bytes @ 0x6
  1166                           
  1167  0076                     __div_to_l_@f2:	
  1168                           ; 4 bytes @ 0x6
  1169                           
  1170  0076                     ___fleq@ff2:	
  1171                           ; 4 bytes @ 0x6
  1172                           
  1173  0076                     ___flge@ff2:	
  1174                           ; 4 bytes @ 0x6
  1175                           
  1176  0076                     __tdiv_to_l_@f2:	
  1177                           ; 4 bytes @ 0x6
  1178                           
  1179                           
  1180                           ; 4 bytes @ 0x6
  1181  0076                     	ds	1
  1182  0077                     Lcd_Set_Cursor@a:
  1183  0077                     ___awmod@counter:	
  1184                           ; 1 bytes @ 0x7
  1185                           
  1186  0077                     ___lwmod@counter:	
  1187                           ; 1 bytes @ 0x7
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0x7
  1191  0077                     	ds	1
  1192  0078                     ??_com_master:
  1193  0078                     ??___lwdiv:	
  1194                           ; 1 bytes @ 0x8
  1195                           
  1196  0078                     Lcd_Set_Cursor@temp:	
  1197                           ; 1 bytes @ 0x8
  1198                           
  1199  0078                     ___awmod@sign:	
  1200                           ; 1 bytes @ 0x8
  1201                           
  1202  0078                     __Umul8_16@word_mpld:	
  1203                           ; 1 bytes @ 0x8
  1204                           
  1205                           
  1206                           ; 2 bytes @ 0x8
  1207  0078                     	ds	1
  1208  0079                     ??___awdiv:
  1209  0079                     Lcd_Write_String@i:	
  1210                           ; 1 bytes @ 0x9
  1211                           
  1212                           
  1213                           ; 2 bytes @ 0x9
  1214  0079                     	ds	1
  1215  007A                     ??__div_to_l_:
  1216  007A                     ??___lldiv:	
  1217                           ; 1 bytes @ 0xA
  1218                           
  1219  007A                     __Umul8_16@multiplier:	
  1220                           ; 1 bytes @ 0xA
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0xA
  1224  007A                     	ds	1
  1225  007B                     ??_setup:
  1226  007B                     ??___flsub:	
  1227                           ; 1 bytes @ 0xB
  1228                           
  1229                           
  1230                           	psect	cstackBANK0
  1231  0020                     __pcstackBANK0:	
  1232                           ; 1 bytes @ 0xB
  1233                           
  1234  0020                     ??__tdiv_to_l_:
  1235  0020                     ??___fleq:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0020                     ??___flge:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0020                     ?___awdiv:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0020                     ?___lwdiv:	
  1245                           ; 2 bytes @ 0x0
  1246                           
  1247  0020                     ___xxtofl@sign:	
  1248                           ; 2 bytes @ 0x0
  1249                           
  1250  0020                     ___awdiv@divisor:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0020                     ___lwdiv@divisor:	
  1254                           ; 2 bytes @ 0x0
  1255                           
  1256  0020                     ___lldiv@quotient:	
  1257                           ; 2 bytes @ 0x0
  1258                           
  1259  0020                     __div_to_l_@quot:	
  1260                           ; 4 bytes @ 0x0
  1261                           
  1262                           
  1263                           ; 4 bytes @ 0x0
  1264  0020                     	ds	1
  1265  0021                     ___xxtofl@exp:
  1266                           
  1267                           ; 1 bytes @ 0x1
  1268  0021                     	ds	1
  1269  0022                     ___awdiv@dividend:
  1270  0022                     ___lwdiv@dividend:	
  1271                           ; 2 bytes @ 0x2
  1272                           
  1273  0022                     ___xxtofl@arg:	
  1274                           ; 2 bytes @ 0x2
  1275                           
  1276                           
  1277                           ; 4 bytes @ 0x2
  1278  0022                     	ds	2
  1279  0024                     ___lldiv@counter:
  1280  0024                     ___awdiv@counter:	
  1281                           ; 1 bytes @ 0x4
  1282                           
  1283  0024                     __div_to_l_@cntr:	
  1284                           ; 1 bytes @ 0x4
  1285                           
  1286  0024                     ___lwdiv@counter:	
  1287                           ; 1 bytes @ 0x4
  1288                           
  1289  0024                     __tdiv_to_l_@quot:	
  1290                           ; 1 bytes @ 0x4
  1291                           
  1292                           
  1293                           ; 4 bytes @ 0x4
  1294  0024                     	ds	1
  1295  0025                     ?_I2C_Master_Init:
  1296  0025                     ?___llmod:	
  1297                           ; 1 bytes @ 0x5
  1298                           
  1299  0025                     ___awdiv@sign:	
  1300                           ; 4 bytes @ 0x5
  1301                           
  1302  0025                     __div_to_l_@exp1:	
  1303                           ; 1 bytes @ 0x5
  1304                           
  1305  0025                     ___lwdiv@quotient:	
  1306                           ; 1 bytes @ 0x5
  1307                           
  1308  0025                     I2C_Master_Init@c:	
  1309                           ; 2 bytes @ 0x5
  1310                           
  1311  0025                     ___llmod@divisor:	
  1312                           ; 4 bytes @ 0x5
  1313                           
  1314                           
  1315                           ; 4 bytes @ 0x5
  1316  0025                     	ds	1
  1317  0026                     ___awdiv@quotient:
  1318                           
  1319                           ; 2 bytes @ 0x6
  1320  0026                     	ds	2
  1321  0028                     ?___flmul:
  1322  0028                     __tdiv_to_l_@cntr:	
  1323                           ; 4 bytes @ 0x8
  1324                           
  1325  0028                     ___flmul@b:	
  1326                           ; 1 bytes @ 0x8
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x8
  1330  0028                     	ds	1
  1331  0029                     ??_I2C_Master_Init:
  1332  0029                     __tdiv_to_l_@exp1:	
  1333                           ; 1 bytes @ 0x9
  1334                           
  1335  0029                     ___llmod@dividend:	
  1336                           ; 1 bytes @ 0x9
  1337                           
  1338                           
  1339                           ; 4 bytes @ 0x9
  1340  0029                     	ds	3
  1341  002C                     ___flmul@a:
  1342                           
  1343                           ; 4 bytes @ 0xC
  1344  002C                     	ds	1
  1345  002D                     ??___llmod:
  1346                           
  1347                           ; 1 bytes @ 0xD
  1348  002D                     	ds	1
  1349  002E                     ___llmod@counter:
  1350                           
  1351                           ; 1 bytes @ 0xE
  1352  002E                     	ds	2
  1353  0030                     ??___flmul:
  1354                           
  1355                           ; 1 bytes @ 0x10
  1356  0030                     	ds	5
  1357  0035                     ___flmul@sign:
  1358                           
  1359                           ; 1 bytes @ 0x15
  1360  0035                     	ds	1
  1361  0036                     ___flmul@grs:
  1362                           
  1363                           ; 4 bytes @ 0x16
  1364  0036                     	ds	4
  1365  003A                     ___flmul@aexp:
  1366                           
  1367                           ; 1 bytes @ 0x1A
  1368  003A                     	ds	1
  1369  003B                     ___flmul@bexp:
  1370                           
  1371                           ; 1 bytes @ 0x1B
  1372  003B                     	ds	1
  1373  003C                     ___flmul@prod:
  1374                           
  1375                           ; 4 bytes @ 0x1C
  1376  003C                     	ds	4
  1377  0040                     ___flmul@temp:
  1378                           
  1379                           ; 2 bytes @ 0x20
  1380  0040                     	ds	2
  1381  0042                     ?_fround:
  1382  0042                     ?_scale:	
  1383                           ; 4 bytes @ 0x22
  1384                           
  1385                           
  1386                           ; 4 bytes @ 0x22
  1387  0042                     	ds	4
  1388  0046                     ??_fround:
  1389  0046                     ??_scale:	
  1390                           ; 1 bytes @ 0x26
  1391                           
  1392                           
  1393                           ; 1 bytes @ 0x26
  1394  0046                     	ds	7
  1395  004D                     _fround$1308:
  1396                           
  1397                           ; 4 bytes @ 0x2D
  1398  004D                     	ds	3
  1399  0050                     _scale$1309:
  1400                           
  1401                           ; 4 bytes @ 0x30
  1402  0050                     	ds	1
  1403  0051                     _fround$1307:
  1404                           
  1405                           ; 4 bytes @ 0x31
  1406  0051                     	ds	3
  1407  0054                     scale@scl:
  1408                           
  1409                           ; 1 bytes @ 0x34
  1410  0054                     	ds	1
  1411  0055                     ?___fltol:
  1412  0055                     fround@prec:	
  1413                           ; 4 bytes @ 0x35
  1414                           
  1415  0055                     ___fltol@f1:	
  1416                           ; 1 bytes @ 0x35
  1417                           
  1418                           
  1419                           ; 4 bytes @ 0x35
  1420  0055                     	ds	1
  1421  0056                     ?___fladd:
  1422  0056                     ___fladd@b:	
  1423                           ; 4 bytes @ 0x36
  1424                           
  1425                           
  1426                           ; 4 bytes @ 0x36
  1427  0056                     	ds	3
  1428  0059                     ??___fltol:
  1429                           
  1430                           ; 1 bytes @ 0x39
  1431  0059                     	ds	1
  1432  005A                     ___fladd@a:
  1433                           
  1434                           ; 4 bytes @ 0x3A
  1435  005A                     	ds	4
  1436  005E                     ??___fladd:
  1437  005E                     ___fltol@sign1:	
  1438                           ; 1 bytes @ 0x3E
  1439                           
  1440                           
  1441                           ; 1 bytes @ 0x3E
  1442  005E                     	ds	1
  1443  005F                     ___fltol@exp1:
  1444                           
  1445                           ; 1 bytes @ 0x3F
  1446  005F                     	ds	7
  1447  0066                     ___fladd@signs:
  1448                           
  1449                           ; 1 bytes @ 0x46
  1450  0066                     	ds	1
  1451  0067                     ___fladd@aexp:
  1452                           
  1453                           ; 1 bytes @ 0x47
  1454  0067                     	ds	1
  1455  0068                     ___fladd@bexp:
  1456                           
  1457                           ; 1 bytes @ 0x48
  1458  0068                     	ds	1
  1459  0069                     ___fladd@grs:
  1460                           
  1461                           ; 1 bytes @ 0x49
  1462  0069                     	ds	1
  1463  006A                     ?_sprintf:
  1464  006A                     sprintf@f:	
  1465                           ; 2 bytes @ 0x4A
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x4A
  1469  006A                     	ds	5
  1470  006F                     ??_valorsensores:
  1471                           
  1472                           ; 1 bytes @ 0x4F
  1473  006F                     	ds	1
  1474                           
  1475                           	psect	maintext
  1476  1267                     __pmaintext:	
  1477 ;;
  1478 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1479 ;;
  1480 ;; *************** function _main *****************
  1481 ;; Defined at:
  1482 ;;		line 63 in file "main_proyectoMaster.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  a               2    0        unsigned int 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : B00/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1496 ;;      Params:         0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0
  1498 ;;      Temps:          0       0       2       0       0
  1499 ;;      Totals:         0       0       2       0       0
  1500 ;;Total ram usage:        2 bytes
  1501 ;; Hardware stack levels required when called:    6
  1502 ;; This function calls:
  1503 ;;		_Lcd_Init
  1504 ;;		_Lcd_Set_Cursor
  1505 ;;		_Lcd_Write_String
  1506 ;;		_com_master
  1507 ;;		_setup
  1508 ;;		_sprintf
  1509 ;;		_valorsensores
  1510 ;; This function is called by:
  1511 ;;		Startup code after reset
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _main
  1517  1267                     _main:
  1518  1267                     l4067:	
  1519                           ;incstack = 0
  1520                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1521                           
  1522                           
  1523                           ;main_proyectoMaster.c: 64:     setup();
  1524  1267  160A  158A  2259  160A  118A  	fcall	_setup
  1525  126C                     l4069:
  1526                           
  1527                           ;main_proyectoMaster.c: 65:     unsigned int a;;main_proyectoMaster.c: 66:     TRISD = 0
      +                          x00;
  1528  126C  1683               	bsf	3,5	;RP0=1, select bank1
  1529  126D  1303               	bcf	3,6	;RP1=0, select bank1
  1530  126E  0188               	clrf	8	;volatile
  1531  126F                     l4071:
  1532                           
  1533                           ;main_proyectoMaster.c: 67:     Lcd_Init();
  1534  126F  160A  158A  228B  160A  118A  	fcall	_Lcd_Init
  1535  1274                     l4073:
  1536                           
  1537                           ;main_proyectoMaster.c: 70:     {;main_proyectoMaster.c: 71:         com_master();
  1538  1274  120A  158A  202D  160A  118A  	fcall	_com_master
  1539  1279                     l4075:
  1540                           
  1541                           ;main_proyectoMaster.c: 72:         if (datUltrasonico < 5)
  1542  1279  1683               	bsf	3,5	;RP0=1, select bank1
  1543  127A  1303               	bcf	3,6	;RP1=0, select bank1
  1544  127B  0855               	movf	(_datUltrasonico+1)^(0+128),w
  1545  127C  3A80               	xorlw	128
  1546  127D  00FF               	movwf	btemp+1
  1547  127E  3080               	movlw	128
  1548  127F  027F               	subwf	btemp+1,w
  1549  1280  1D03               	skipz
  1550  1281  2A84               	goto	u6175
  1551  1282  3005               	movlw	5
  1552  1283  0254               	subwf	_datUltrasonico^(0+128),w
  1553  1284                     u6175:
  1554  1284  1803               	skipnc
  1555  1285  2A87               	goto	u6171
  1556  1286  2A88               	goto	u6170
  1557  1287                     u6171:
  1558  1287  2A8C               	goto	l178
  1559  1288                     u6170:
  1560  1288                     l4077:
  1561                           
  1562                           ;main_proyectoMaster.c: 73:         {;main_proyectoMaster.c: 74:             PORTEbits.R
      +                          E0 = 1;
  1563  1288  1283               	bcf	3,5	;RP0=0, select bank0
  1564  1289  1303               	bcf	3,6	;RP1=0, select bank0
  1565  128A  1409               	bsf	9,0	;volatile
  1566                           
  1567                           ;main_proyectoMaster.c: 75:         }
  1568  128B  2A8F               	goto	l4079
  1569  128C                     l178:	
  1570                           ;main_proyectoMaster.c: 76:         else
  1571                           
  1572                           
  1573                           ;main_proyectoMaster.c: 77:         {;main_proyectoMaster.c: 78:             PORTEbits.R
      +                          E0 = 0;
  1574  128C  1283               	bcf	3,5	;RP0=0, select bank0
  1575  128D  1303               	bcf	3,6	;RP1=0, select bank0
  1576  128E  1009               	bcf	9,0	;volatile
  1577  128F                     l4079:
  1578                           
  1579                           ;main_proyectoMaster.c: 81:         sprintf(s, "%.3dcm", datUltrasonico);
  1580  128F  30C8               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1581  1290  1683               	bsf	3,5	;RP0=1, select bank1
  1582  1291  1303               	bcf	3,6	;RP1=0, select bank1
  1583  1292  00C6               	movwf	??_main^(0+128)
  1584  1293  0846               	movf	??_main^(0+128),w
  1585  1294  1283               	bcf	3,5	;RP0=0, select bank0
  1586  1295  1303               	bcf	3,6	;RP1=0, select bank0
  1587  1296  00EA               	movwf	sprintf@f
  1588  1297  1683               	bsf	3,5	;RP0=1, select bank1
  1589  1298  1303               	bcf	3,6	;RP1=0, select bank1
  1590  1299  0855               	movf	(_datUltrasonico+1)^(0+128),w
  1591  129A  1283               	bcf	3,5	;RP0=0, select bank0
  1592  129B  1303               	bcf	3,6	;RP1=0, select bank0
  1593  129C  00EC               	movwf	?_sprintf+2
  1594  129D  1683               	bsf	3,5	;RP0=1, select bank1
  1595  129E  1303               	bcf	3,6	;RP1=0, select bank1
  1596  129F  0854               	movf	_datUltrasonico^(0+128),w
  1597  12A0  1283               	bcf	3,5	;RP0=0, select bank0
  1598  12A1  1303               	bcf	3,6	;RP1=0, select bank0
  1599  12A2  00EB               	movwf	?_sprintf+1
  1600  12A3  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1601  12A4  120A  118A  2026  160A  118A  	fcall	_sprintf
  1602  12A9                     l4081:
  1603                           
  1604                           ;main_proyectoMaster.c: 82:         Lcd_Set_Cursor(2,1);
  1605  12A9  01F5               	clrf	Lcd_Set_Cursor@b
  1606  12AA  0AF5               	incf	Lcd_Set_Cursor@b,f
  1607  12AB  3002               	movlw	2
  1608  12AC  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1609  12B1                     l4083:
  1610                           
  1611                           ;main_proyectoMaster.c: 83:         Lcd_Write_String(s);
  1612  12B1  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1613  12B2  00F4               	movwf	Lcd_Write_String@a
  1614  12B3  3001               	movlw	1
  1615  12B4  00F5               	movwf	Lcd_Write_String@a+1
  1616  12B5  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1617                           
  1618                           ;main_proyectoMaster.c: 85:         Lcd_Set_Cursor(1,2);
  1619  12BA  3002               	movlw	2
  1620  12BB  1683               	bsf	3,5	;RP0=1, select bank1
  1621  12BC  1303               	bcf	3,6	;RP1=0, select bank1
  1622  12BD  00C6               	movwf	??_main^(0+128)
  1623  12BE  0846               	movf	??_main^(0+128),w
  1624  12BF  00F5               	movwf	Lcd_Set_Cursor@b
  1625  12C0  3001               	movlw	1
  1626  12C1  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1627  12C6                     l4085:
  1628                           
  1629                           ;main_proyectoMaster.c: 86:         Lcd_Write_String("S1");
  1630  12C6  30D4               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1631  12C7  00F4               	movwf	Lcd_Write_String@a
  1632  12C8  3080               	movlw	128
  1633  12C9  00F5               	movwf	Lcd_Write_String@a+1
  1634  12CA  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1635  12CF                     l4087:
  1636                           
  1637                           ;main_proyectoMaster.c: 87:         Lcd_Set_Cursor(1,8);
  1638  12CF  3008               	movlw	8
  1639  12D0  1683               	bsf	3,5	;RP0=1, select bank1
  1640  12D1  1303               	bcf	3,6	;RP1=0, select bank1
  1641  12D2  00C6               	movwf	??_main^(0+128)
  1642  12D3  0846               	movf	??_main^(0+128),w
  1643  12D4  00F5               	movwf	Lcd_Set_Cursor@b
  1644  12D5  3001               	movlw	1
  1645  12D6  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1646                           
  1647                           ;main_proyectoMaster.c: 88:         Lcd_Write_String("S2");
  1648  12DB  30D7               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1649  12DC  00F4               	movwf	Lcd_Write_String@a
  1650  12DD  3080               	movlw	128
  1651  12DE  00F5               	movwf	Lcd_Write_String@a+1
  1652  12DF  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1653  12E4                     l4089:
  1654                           
  1655                           ;main_proyectoMaster.c: 89:         Lcd_Set_Cursor(1,14);
  1656  12E4  300E               	movlw	14
  1657  12E5  1683               	bsf	3,5	;RP0=1, select bank1
  1658  12E6  1303               	bcf	3,6	;RP1=0, select bank1
  1659  12E7  00C6               	movwf	??_main^(0+128)
  1660  12E8  0846               	movf	??_main^(0+128),w
  1661  12E9  00F5               	movwf	Lcd_Set_Cursor@b
  1662  12EA  3001               	movlw	1
  1663  12EB  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1664  12F0                     l4091:
  1665                           
  1666                           ;main_proyectoMaster.c: 90:         Lcd_Write_String("S3");
  1667  12F0  30DA               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1668  12F1  00F4               	movwf	Lcd_Write_String@a
  1669  12F2  3080               	movlw	128
  1670  12F3  00F5               	movwf	Lcd_Write_String@a+1
  1671  12F4  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1672  12F9                     l4093:
  1673                           
  1674                           ;main_proyectoMaster.c: 92:         sprintf(s, "%.2dUni", contRecipiente);
  1675  12F9  30C0               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1676  12FA  1683               	bsf	3,5	;RP0=1, select bank1
  1677  12FB  1303               	bcf	3,6	;RP1=0, select bank1
  1678  12FC  00C6               	movwf	??_main^(0+128)
  1679  12FD  0846               	movf	??_main^(0+128),w
  1680  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  1681  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  1682  1300  00EA               	movwf	sprintf@f
  1683  1301  1683               	bsf	3,5	;RP0=1, select bank1
  1684  1302  1303               	bcf	3,6	;RP1=0, select bank1
  1685  1303  0857               	movf	(_contRecipiente+1)^(0+128),w
  1686  1304  1283               	bcf	3,5	;RP0=0, select bank0
  1687  1305  1303               	bcf	3,6	;RP1=0, select bank0
  1688  1306  00EC               	movwf	?_sprintf+2
  1689  1307  1683               	bsf	3,5	;RP0=1, select bank1
  1690  1308  1303               	bcf	3,6	;RP1=0, select bank1
  1691  1309  0856               	movf	_contRecipiente^(0+128),w
  1692  130A  1283               	bcf	3,5	;RP0=0, select bank0
  1693  130B  1303               	bcf	3,6	;RP1=0, select bank0
  1694  130C  00EB               	movwf	?_sprintf+1
  1695  130D  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1696  130E  120A  118A  2026  160A  118A  	fcall	_sprintf
  1697  1313                     l4095:
  1698                           
  1699                           ;main_proyectoMaster.c: 93:         Lcd_Set_Cursor(2,7);
  1700  1313  3007               	movlw	7
  1701  1314  1683               	bsf	3,5	;RP0=1, select bank1
  1702  1315  1303               	bcf	3,6	;RP1=0, select bank1
  1703  1316  00C6               	movwf	??_main^(0+128)
  1704  1317  0846               	movf	??_main^(0+128),w
  1705  1318  00F5               	movwf	Lcd_Set_Cursor@b
  1706  1319  3002               	movlw	2
  1707  131A  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1708                           
  1709                           ;main_proyectoMaster.c: 94:         Lcd_Write_String(s);
  1710  131F  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1711  1320  00F4               	movwf	Lcd_Write_String@a
  1712  1321  3001               	movlw	1
  1713  1322  00F5               	movwf	Lcd_Write_String@a+1
  1714  1323  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1715                           
  1716                           ;main_proyectoMaster.c: 96:         sprintf(s, "%.3d", POT);
  1717  1328  30CF               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1718  1329  1683               	bsf	3,5	;RP0=1, select bank1
  1719  132A  1303               	bcf	3,6	;RP1=0, select bank1
  1720  132B  00C6               	movwf	??_main^(0+128)
  1721  132C  0846               	movf	??_main^(0+128),w
  1722  132D  1283               	bcf	3,5	;RP0=0, select bank0
  1723  132E  1303               	bcf	3,6	;RP1=0, select bank0
  1724  132F  00EA               	movwf	sprintf@f
  1725  1330  1683               	bsf	3,5	;RP0=1, select bank1
  1726  1331  1303               	bcf	3,6	;RP1=0, select bank1
  1727  1332  0859               	movf	(_POT+1)^(0+128),w
  1728  1333  1283               	bcf	3,5	;RP0=0, select bank0
  1729  1334  1303               	bcf	3,6	;RP1=0, select bank0
  1730  1335  00EC               	movwf	?_sprintf+2
  1731  1336  1683               	bsf	3,5	;RP0=1, select bank1
  1732  1337  1303               	bcf	3,6	;RP1=0, select bank1
  1733  1338  0858               	movf	_POT^(0+128),w
  1734  1339  1283               	bcf	3,5	;RP0=0, select bank0
  1735  133A  1303               	bcf	3,6	;RP1=0, select bank0
  1736  133B  00EB               	movwf	?_sprintf+1
  1737  133C  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1738  133D  120A  118A  2026  160A  118A  	fcall	_sprintf
  1739  1342                     l4097:
  1740                           
  1741                           ;main_proyectoMaster.c: 97:         Lcd_Set_Cursor(2,14);
  1742  1342  300E               	movlw	14
  1743  1343  1683               	bsf	3,5	;RP0=1, select bank1
  1744  1344  1303               	bcf	3,6	;RP1=0, select bank1
  1745  1345  00C6               	movwf	??_main^(0+128)
  1746  1346  0846               	movf	??_main^(0+128),w
  1747  1347  00F5               	movwf	Lcd_Set_Cursor@b
  1748  1348  3002               	movlw	2
  1749  1349  160A  158A  2210  160A  118A  	fcall	_Lcd_Set_Cursor
  1750  134E                     l4099:
  1751                           
  1752                           ;main_proyectoMaster.c: 98:         Lcd_Write_String(s);
  1753  134E  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1754  134F  00F4               	movwf	Lcd_Write_String@a
  1755  1350  3001               	movlw	1
  1756  1351  00F5               	movwf	Lcd_Write_String@a+1
  1757  1352  160A  158A  2332  160A  118A  	fcall	_Lcd_Write_String
  1758  1357                     l4101:
  1759                           
  1760                           ;main_proyectoMaster.c: 99:         _delay((unsigned long)((80)*(4000000/4000.0)));
  1761  1357  3068               	movlw	104
  1762  1358  1683               	bsf	3,5	;RP0=1, select bank1
  1763  1359  1303               	bcf	3,6	;RP1=0, select bank1
  1764  135A  00C7               	movwf	(??_main^(0+128)+1)
  1765  135B  30E3               	movlw	227
  1766  135C  00C6               	movwf	??_main^(0+128)
  1767  135D                     u6187:
  1768  135D  0BC6               	decfsz	??_main^(0+128),f
  1769  135E  2B5D               	goto	u6187
  1770  135F  0BC7               	decfsz	(??_main^(0+128)+1),f
  1771  1360  2B5D               	goto	u6187
  1772  1361  2B62               	nop2
  1773  1362                     l4103:
  1774                           
  1775                           ;main_proyectoMaster.c: 100:         valorsensores();
  1776  1362  160A  158A  23BA  160A  118A  	fcall	_valorsensores
  1777  1367  2A74               	goto	l4073
  1778  1368  120A  118A  280C   	ljmp	start
  1779  136B                     __end_of_main:
  1780                           
  1781                           	psect	text1
  1782  1BBA                     __ptext1:	
  1783 ;; *************** function _valorsensores *****************
  1784 ;; Defined at:
  1785 ;;		line 38 in file "UARTP_Master.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1799 ;;      Params:         0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0
  1801 ;;      Temps:          0       1       0       0       0
  1802 ;;      Totals:         0       1       0       0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:    5
  1806 ;; This function calls:
  1807 ;;		_cadena_caracteres
  1808 ;;		_sprintf
  1809 ;; This function is called by:
  1810 ;;		_main
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _valorsensores
  1816  1BBA                     _valorsensores:
  1817  1BBA                     l4057:	
  1818                           ;incstack = 0
  1819                           ; Regs used in _valorsensores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1820                           
  1821                           
  1822                           ;UARTP_Master.c: 40:     sprintf(s, "\r valorS1=%.2f \n", v1);
  1823  1BBA  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1824  1BBB  1283               	bcf	3,5	;RP0=0, select bank0
  1825  1BBC  1303               	bcf	3,6	;RP1=0, select bank0
  1826  1BBD  00EF               	movwf	??_valorsensores
  1827  1BBE  086F               	movf	??_valorsensores,w
  1828  1BBF  00EA               	movwf	sprintf@f
  1829  1BC0  3000               	movlw	0
  1830  1BC1  00EE               	movwf	?_sprintf+4
  1831  1BC2  3000               	movlw	0
  1832  1BC3  00ED               	movwf	?_sprintf+3
  1833  1BC4  3000               	movlw	0
  1834  1BC5  00EC               	movwf	?_sprintf+2
  1835  1BC6  3000               	movlw	0
  1836  1BC7  00EB               	movwf	?_sprintf+1
  1837  1BC8  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1838  1BC9  120A  118A  2026  160A  158A  	fcall	_sprintf
  1839  1BCE                     l4059:
  1840                           
  1841                           ;UARTP_Master.c: 41:     cadena_caracteres(s);
  1842  1BCE  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1843  1BCF  160A  158A  21EF  160A  158A  	fcall	_cadena_caracteres
  1844  1BD4                     l4061:
  1845                           
  1846                           ;UARTP_Master.c: 43:     sprintf(s, "\n valorS2=%.2f\n", v2);
  1847  1BD4  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1848  1BD5  1283               	bcf	3,5	;RP0=0, select bank0
  1849  1BD6  1303               	bcf	3,6	;RP1=0, select bank0
  1850  1BD7  00EF               	movwf	??_valorsensores
  1851  1BD8  086F               	movf	??_valorsensores,w
  1852  1BD9  00EA               	movwf	sprintf@f
  1853  1BDA  3000               	movlw	0
  1854  1BDB  00EE               	movwf	?_sprintf+4
  1855  1BDC  3000               	movlw	0
  1856  1BDD  00ED               	movwf	?_sprintf+3
  1857  1BDE  3000               	movlw	0
  1858  1BDF  00EC               	movwf	?_sprintf+2
  1859  1BE0  3000               	movlw	0
  1860  1BE1  00EB               	movwf	?_sprintf+1
  1861  1BE2  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1862  1BE3  120A  118A  2026  160A  158A  	fcall	_sprintf
  1863                           
  1864                           ;UARTP_Master.c: 44:     cadena_caracteres(s);
  1865  1BE8  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1866  1BE9  160A  158A  21EF  160A  158A  	fcall	_cadena_caracteres
  1867  1BEE                     l4063:
  1868                           
  1869                           ;UARTP_Master.c: 46:     sprintf(s, "\n contador=%d", contador);
  1870  1BEE  30B2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1871  1BEF  1283               	bcf	3,5	;RP0=0, select bank0
  1872  1BF0  1303               	bcf	3,6	;RP1=0, select bank0
  1873  1BF1  00EF               	movwf	??_valorsensores
  1874  1BF2  086F               	movf	??_valorsensores,w
  1875  1BF3  00EA               	movwf	sprintf@f
  1876  1BF4  3000               	movlw	0
  1877  1BF5  00EB               	movwf	?_sprintf+1
  1878  1BF6  00EC               	movwf	?_sprintf+2
  1879  1BF7  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1880  1BF8  120A  118A  2026  160A  158A  	fcall	_sprintf
  1881  1BFD                     l4065:
  1882                           
  1883                           ;UARTP_Master.c: 47:     cadena_caracteres(s);
  1884  1BFD  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1885  1BFE  160A  158A  21EF  160A  158A  	fcall	_cadena_caracteres
  1886  1C03                     l67:
  1887  1C03  0008               	return
  1888  1C04                     __end_of_valorsensores:
  1889                           
  1890                           	psect	text2
  1891  0026                     __ptext2:	
  1892 ;; *************** function _sprintf *****************
  1893 ;; Defined at:
  1894 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;  sp              1    wreg     PTR unsigned char 
  1897 ;;		 -> s(20), 
  1898 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1899 ;;		 -> STR_9(5), STR_8(8), STR_4(7), STR_3(14), 
  1900 ;;		 -> STR_2(16), STR_1(17), 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1903 ;;		 -> s(20), 
  1904 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1905 ;;  val             4   26[BANK1 ] unsigned long 
  1906 ;;  tmpval          4   22[BANK1 ] struct .
  1907 ;;  prec            2   34[BANK1 ] int 
  1908 ;;  eexp            2   20[BANK1 ] int 
  1909 ;;  flag            2   18[BANK1 ] unsigned short 
  1910 ;;  cp              2    0        PTR const unsigned char 
  1911 ;;  len             2    0        unsigned int 
  1912 ;;  width           2    0        int 
  1913 ;;  c               1   37[BANK1 ] unsigned char 
  1914 ;;  ap              1   17[BANK1 ] PTR void [1]
  1915 ;;		 -> ?_sprintf(2), 
  1916 ;;  d               1    0        unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2   74[BANK0 ] int 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1926 ;;      Params:         0       5       0       0       0
  1927 ;;      Locals:         0       0      25       0       0
  1928 ;;      Temps:          0       0       5       0       0
  1929 ;;      Totals:         0       5      30       0       0
  1930 ;;Total ram usage:       35 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    4
  1933 ;; This function calls:
  1934 ;;		___awdiv
  1935 ;;		___fladd
  1936 ;;		___fleq
  1937 ;;		___flge
  1938 ;;		___flmul
  1939 ;;		___flneg
  1940 ;;		___flsub
  1941 ;;		___fltol
  1942 ;;		___lldiv
  1943 ;;		___llmod
  1944 ;;		___wmul
  1945 ;;		___xxtofl
  1946 ;;		__div_to_l_
  1947 ;;		__tdiv_to_l_
  1948 ;;		_fround
  1949 ;;		_isdigit
  1950 ;;		_scale
  1951 ;; This function is called by:
  1952 ;;		_valorsensores
  1953 ;;		_main
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           
  1958                           ;psect for function _sprintf
  1959  0026                     _sprintf:
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1963                           ;sprintf@sp stored from wreg
  1964  0026  1683               	bsf	3,5	;RP0=1, select bank1
  1965  0027  1303               	bcf	3,6	;RP1=0, select bank1
  1966  0028  00C4               	movwf	sprintf@sp^(0+128)
  1967  0029                     l3819:
  1968                           
  1969                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1970  0029  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1971  002A  00A8               	movwf	??_sprintf^(0+128)
  1972  002B  0828               	movf	??_sprintf^(0+128),w
  1973  002C  00B1               	movwf	sprintf@ap^(0+128)
  1974                           
  1975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1976  002D  2FB5               	goto	l4045
  1977  002E                     l3821:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1980  002E  3025               	movlw	37
  1981  002F  0645               	xorwf	sprintf@c^(0+128),w
  1982  0030  1903               	btfsc	3,2
  1983  0031  2833               	goto	u5761
  1984  0032  2834               	goto	u5760
  1985  0033                     u5761:
  1986  0033  2840               	goto	l3827
  1987  0034                     u5760:
  1988  0034                     l3823:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1991  0034  0845               	movf	sprintf@c^(0+128),w
  1992  0035  00A8               	movwf	??_sprintf^(0+128)
  1993  0036  0844               	movf	sprintf@sp^(0+128),w
  1994  0037  0084               	movwf	4
  1995  0038  0828               	movf	??_sprintf^(0+128),w
  1996  0039  1783               	bsf	3,7	;select IRP bank2
  1997  003A  0080               	movwf	0
  1998  003B                     l3825:
  1999  003B  3001               	movlw	1
  2000  003C  00A8               	movwf	??_sprintf^(0+128)
  2001  003D  0828               	movf	??_sprintf^(0+128),w
  2002  003E  07C4               	addwf	sprintf@sp^(0+128),f
  2003                           
  2004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2005  003F  2FB5               	goto	l4045
  2006  0040                     l3827:
  2007                           
  2008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2009  0040  01B2               	clrf	sprintf@flag^(0+128)
  2010  0041  01B3               	clrf	(sprintf@flag+1)^(0+128)
  2011  0042                     l3829:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2014  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0044  086A               	movf	sprintf@f,w
  2017  0045  0084               	movwf	4
  2018  0046  160A  118A  200A  120A  118A  	fcall	stringdir
  2019  004B  3A2E               	xorlw	46
  2020  004C  1D03               	skipz
  2021  004D  284F               	goto	u5771
  2022  004E  2850               	goto	u5770
  2023  004F                     u5771:
  2024  004F  28A2               	goto	l3845
  2025  0050                     u5770:
  2026  0050                     l3831:
  2027                           
  2028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2029  0050  1683               	bsf	3,5	;RP0=1, select bank1
  2030  0051  1303               	bcf	3,6	;RP1=0, select bank1
  2031  0052  1733               	bsf	(sprintf@flag^(0+128)+1),6
  2032  0053                     l3833:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2035  0053  3001               	movlw	1
  2036  0054  00A8               	movwf	??_sprintf^(0+128)
  2037  0055  0828               	movf	??_sprintf^(0+128),w
  2038  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0058  07EA               	addwf	sprintf@f,f
  2041  0059                     l3835:
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2044  0059  1683               	bsf	3,5	;RP0=1, select bank1
  2045  005A  1303               	bcf	3,6	;RP1=0, select bank1
  2046  005B  01C2               	clrf	sprintf@prec^(0+128)
  2047  005C  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2050  005D  2890               	goto	l3843
  2051  005E                     l3837:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2054  005E  300A               	movlw	10
  2055  005F  00F2               	movwf	___wmul@multiplier
  2056  0060  3000               	movlw	0
  2057  0061  00F3               	movwf	___wmul@multiplier+1
  2058  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2059  0063  1303               	bcf	3,6	;RP1=0, select bank1
  2060  0064  0843               	movf	(sprintf@prec+1)^(0+128),w
  2061  0065  00F5               	movwf	___wmul@multiplicand+1
  2062  0066  0842               	movf	sprintf@prec^(0+128),w
  2063  0067  00F4               	movwf	___wmul@multiplicand
  2064  0068  160A  158A  2234  120A  118A  	fcall	___wmul
  2065  006D  0873               	movf	?___wmul+1,w
  2066  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2067  006F  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0070  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2069  0071  0872               	movf	?___wmul,w
  2070  0072  00C2               	movwf	sprintf@prec^(0+128)
  2071  0073                     l3839:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2074  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0075  086A               	movf	sprintf@f,w
  2077  0076  0084               	movwf	4
  2078  0077  160A  118A  200A  120A  118A  	fcall	stringdir
  2079  007C  3ED0               	addlw	208
  2080  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2081  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2082  007F  00A8               	movwf	??_sprintf^(0+128)
  2083  0080  30FF               	movlw	255
  2084  0081  1803               	skipnc
  2085  0082  3000               	movlw	0
  2086  0083  00A9               	movwf	(??_sprintf^(0+128)+1)
  2087  0084  0828               	movf	??_sprintf^(0+128),w
  2088  0085  07C2               	addwf	sprintf@prec^(0+128),f
  2089  0086  1803               	skipnc
  2090  0087  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2091  0088  0829               	movf	(??_sprintf+1)^(0+128),w
  2092  0089  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2093  008A                     l3841:
  2094  008A  3001               	movlw	1
  2095  008B  00A8               	movwf	??_sprintf^(0+128)
  2096  008C  0828               	movf	??_sprintf^(0+128),w
  2097  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2098  008E  1303               	bcf	3,6	;RP1=0, select bank0
  2099  008F  07EA               	addwf	sprintf@f,f
  2100  0090                     l3843:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2103  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0091  086A               	movf	sprintf@f,w
  2105  0092  0084               	movwf	4
  2106  0093  160A  118A  200A  120A  118A  	fcall	stringdir
  2107  0098  160A  158A  219F  120A  118A  	fcall	_isdigit
  2108  009D  1803               	btfsc	3,0
  2109  009E  28A0               	goto	u5781
  2110  009F  28A1               	goto	u5780
  2111  00A0                     u5781:
  2112  00A0  285E               	goto	l3837
  2113  00A1                     u5780:
  2114  00A1  28AA               	goto	l3851
  2115  00A2                     l3845:
  2116                           
  2117                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2118  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  2119  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  2120  00A4  01C2               	clrf	sprintf@prec^(0+128)
  2121  00A5  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2122  00A6                     l3847:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2125  00A6  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2126  00A7  28AA               	goto	l3851
  2127  00A8                     l374:	
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2129                           
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2132  00A8  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2135  00A9  28CE               	goto	l3853
  2136  00AA                     l3851:
  2137  00AA  3001               	movlw	1
  2138  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2139  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  2140  00AD  07EA               	addwf	sprintf@f,f
  2141  00AE  30FF               	movlw	-1
  2142  00AF  076A               	addwf	sprintf@f,w
  2143  00B0  0084               	movwf	4
  2144  00B1  160A  118A  200A  120A  118A  	fcall	stringdir
  2145  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  2146  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  2147  00B8  00C5               	movwf	sprintf@c^(0+128)
  2148  00B9  00A8               	movwf	??_sprintf^(0+128)
  2149  00BA  01A9               	clrf	(??_sprintf^(0+128)+1)
  2150                           
  2151                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2152                           ; Switch size 1, requested type "simple"
  2153                           ; Number of cases is 1, Range of values is 0 to 0
  2154                           ; switch strategies available:
  2155                           ; Name         Instructions Cycles
  2156                           ; simple_byte            4     3 (average)
  2157                           ; direct_byte           11     8 (fixed)
  2158                           ; jumptable            260     6 (fixed)
  2159                           ;	Chosen strategy is simple_byte
  2160  00BB  0829               	movf	(??_sprintf+1)^(0+128),w
  2161  00BC  3A00               	xorlw	0	; case 0
  2162  00BD  1903               	skipnz
  2163  00BE  28C0               	goto	l4135
  2164  00BF  2FB5               	goto	l4045
  2165  00C0                     l4135:
  2166                           
  2167                           ; Switch size 1, requested type "simple"
  2168                           ; Number of cases is 4, Range of values is 0 to 105
  2169                           ; switch strategies available:
  2170                           ; Name         Instructions Cycles
  2171                           ; simple_byte           13     7 (average)
  2172                           ; jumptable            260     6 (fixed)
  2173                           ;	Chosen strategy is simple_byte
  2174  00C0  0828               	movf	??_sprintf^(0+128),w
  2175  00C1  3A00               	xorlw	0	; case 0
  2176  00C2  1903               	skipnz
  2177  00C3  2FCB               	goto	l4047
  2178  00C4  3A64               	xorlw	100	; case 100
  2179  00C5  1903               	skipnz
  2180  00C6  28CE               	goto	l3853
  2181  00C7  3A02               	xorlw	2	; case 102
  2182  00C8  1903               	skipnz
  2183  00C9  28A8               	goto	l374
  2184  00CA  3A0F               	xorlw	15	; case 105
  2185  00CB  1903               	skipnz
  2186  00CC  28CE               	goto	l3853
  2187  00CD  2FB5               	goto	l4045
  2188  00CE                     l3853:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2191  00CE  3000               	movlw	0
  2192  00CF  0532               	andwf	sprintf@flag^(0+128),w
  2193  00D0  00A8               	movwf	??_sprintf^(0+128)
  2194  00D1  3007               	movlw	7
  2195  00D2  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2196  00D3  00A9               	movwf	(??_sprintf+1)^(0+128)
  2197  00D4  0828               	movf	??_sprintf^(0+128),w
  2198  00D5  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2199  00D6  1903               	btfsc	3,2
  2200  00D7  28D9               	goto	u5791
  2201  00D8  28DA               	goto	u5790
  2202  00D9                     u5791:
  2203  00D9  2E8D               	goto	l3995
  2204  00DA                     u5790:
  2205  00DA                     l3855:
  2206                           
  2207                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2208  00DA  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2209  00DB  28DD               	goto	u5801
  2210  00DC  28DE               	goto	u5800
  2211  00DD                     u5801:
  2212  00DD  28E2               	goto	l3859
  2213  00DE                     u5800:
  2214  00DE                     l3857:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2217  00DE  3006               	movlw	6
  2218  00DF  00C2               	movwf	sprintf@prec^(0+128)
  2219  00E0  3000               	movlw	0
  2220  00E1  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2221  00E2                     l3859:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2224  00E2  0831               	movf	sprintf@ap^(0+128),w
  2225  00E3  0084               	movwf	4
  2226  00E4  1383               	bcf	3,7	;select IRP bank0
  2227  00E5  0800               	movf	0,w
  2228  00E6  00BE               	movwf	sprintf@fval^(0+128)
  2229  00E7  0A84               	incf	4,f
  2230  00E8  0800               	movf	0,w
  2231  00E9  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2232  00EA  0A84               	incf	4,f
  2233  00EB  0800               	movf	0,w
  2234  00EC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2235  00ED  0A84               	incf	4,f
  2236  00EE  0800               	movf	0,w
  2237  00EF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2238  00F0                     l3861:
  2239  00F0  3004               	movlw	4
  2240  00F1  00A8               	movwf	??_sprintf^(0+128)
  2241  00F2  0828               	movf	??_sprintf^(0+128),w
  2242  00F3  07B1               	addwf	sprintf@ap^(0+128),f
  2243  00F4                     l3863:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2246  00F4  0841               	movf	(sprintf@fval+3)^(0+128),w
  2247  00F5  00F5               	movwf	___flge@ff1+3
  2248  00F6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2249  00F7  00F4               	movwf	___flge@ff1+2
  2250  00F8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2251  00F9  00F3               	movwf	___flge@ff1+1
  2252  00FA  083E               	movf	sprintf@fval^(0+128),w
  2253  00FB  00F2               	movwf	___flge@ff1
  2254  00FC  3000               	movlw	0
  2255  00FD  00F9               	movwf	___flge@ff2+3
  2256  00FE  3000               	movlw	0
  2257  00FF  00F8               	movwf	___flge@ff2+2
  2258  0100  3000               	movlw	0
  2259  0101  00F7               	movwf	___flge@ff2+1
  2260  0102  3000               	movlw	0
  2261  0103  00F6               	movwf	___flge@ff2
  2262  0104  160A  158A  26A0  120A  118A  	fcall	___flge
  2263  0109  1803               	btfsc	3,0
  2264  010A  290C               	goto	u5811
  2265  010B  290D               	goto	u5810
  2266  010C                     u5811:
  2267  010C  292A               	goto	l3869
  2268  010D                     u5810:
  2269  010D                     l3865:
  2270                           
  2271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2272  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2273  010E  1303               	bcf	3,6	;RP1=0, select bank1
  2274  010F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2275  0110  00F5               	movwf	___flneg@f1+3
  2276  0111  0840               	movf	(sprintf@fval+2)^(0+128),w
  2277  0112  00F4               	movwf	___flneg@f1+2
  2278  0113  083F               	movf	(sprintf@fval+1)^(0+128),w
  2279  0114  00F3               	movwf	___flneg@f1+1
  2280  0115  083E               	movf	sprintf@fval^(0+128),w
  2281  0116  00F2               	movwf	___flneg@f1
  2282  0117  160A  158A  2178  120A  118A  	fcall	___flneg
  2283  011C  0875               	movf	?___flneg+3,w
  2284  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2285  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2286  011F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2287  0120  0874               	movf	?___flneg+2,w
  2288  0121  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2289  0122  0873               	movf	?___flneg+1,w
  2290  0123  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2291  0124  0872               	movf	?___flneg,w
  2292  0125  00BE               	movwf	sprintf@fval^(0+128)
  2293  0126                     l3867:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2296  0126  3003               	movlw	3
  2297  0127  04B2               	iorwf	sprintf@flag^(0+128),f
  2298  0128  3000               	movlw	0
  2299  0129  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2300  012A                     l3869:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2303  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2304  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2305  012C  01B4               	clrf	sprintf@eexp^(0+128)
  2306  012D  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  2307  012E                     l3871:
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2310  012E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2311  012F  00F5               	movwf	___fleq@ff1+3
  2312  0130  0840               	movf	(sprintf@fval+2)^(0+128),w
  2313  0131  00F4               	movwf	___fleq@ff1+2
  2314  0132  083F               	movf	(sprintf@fval+1)^(0+128),w
  2315  0133  00F3               	movwf	___fleq@ff1+1
  2316  0134  083E               	movf	sprintf@fval^(0+128),w
  2317  0135  00F2               	movwf	___fleq@ff1
  2318  0136  3000               	movlw	0
  2319  0137  00F9               	movwf	___fleq@ff2+3
  2320  0138  3000               	movlw	0
  2321  0139  00F8               	movwf	___fleq@ff2+2
  2322  013A  3000               	movlw	0
  2323  013B  00F7               	movwf	___fleq@ff2+1
  2324  013C  3000               	movlw	0
  2325  013D  00F6               	movwf	___fleq@ff2
  2326  013E  160A  158A  2404  120A  118A  	fcall	___fleq
  2327  0143  1803               	btfsc	3,0
  2328  0144  2946               	goto	u5821
  2329  0145  2947               	goto	u5820
  2330  0146                     u5821:
  2331  0146  2A47               	goto	l3897
  2332  0147                     u5820:
  2333  0147                     l3873:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2336  0147  1003               	clrc
  2337  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2339  014A  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2340  014B  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2341  014C  3E82               	addlw	130
  2342  014D  00B4               	movwf	sprintf@eexp^(0+128)
  2343  014E  30FF               	movlw	255
  2344  014F  1803               	skipnc
  2345  0150  3000               	movlw	0
  2346  0151  00B5               	movwf	(sprintf@eexp^(0+128)+1)
  2347  0152                     l3875:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2350  0152  30FF               	movlw	255
  2351  0153  07B4               	addwf	sprintf@eexp^(0+128),f
  2352  0154  1803               	skipnc
  2353  0155  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2354  0156  30FF               	movlw	255
  2355  0157  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2356  0158                     l3877:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2359  0158  3003               	movlw	3
  2360  0159  00F2               	movwf	___wmul@multiplier
  2361  015A  3000               	movlw	0
  2362  015B  00F3               	movwf	___wmul@multiplier+1
  2363  015C  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2364  015D  00F5               	movwf	___wmul@multiplicand+1
  2365  015E  0834               	movf	sprintf@eexp^(0+128),w
  2366  015F  00F4               	movwf	___wmul@multiplicand
  2367  0160  160A  158A  2234  120A  118A  	fcall	___wmul
  2368  0165  0873               	movf	?___wmul+1,w
  2369  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2370  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2371  0168  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2372  0169  0872               	movf	?___wmul,w
  2373  016A  00B4               	movwf	sprintf@eexp^(0+128)
  2374  016B                     l3879:
  2375                           
  2376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2377  016B  300A               	movlw	10
  2378  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2379  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2380  016E  00A0               	movwf	___awdiv@divisor
  2381  016F  3000               	movlw	0
  2382  0170  00A1               	movwf	___awdiv@divisor+1
  2383  0171  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0172  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0173  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2386  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2387  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2388  0176  00A3               	movwf	___awdiv@dividend+1
  2389  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2391  0179  0834               	movf	sprintf@eexp^(0+128),w
  2392  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2393  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2394  017C  00A2               	movwf	___awdiv@dividend
  2395  017D  160A  158A  25BB  120A  118A  	fcall	___awdiv
  2396  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0184  0821               	movf	?___awdiv+1,w
  2399  0185  1683               	bsf	3,5	;RP0=1, select bank1
  2400  0186  1303               	bcf	3,6	;RP1=0, select bank1
  2401  0187  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2402  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2404  018A  0820               	movf	?___awdiv,w
  2405  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2406  018C  1303               	bcf	3,6	;RP1=0, select bank1
  2407  018D  00B4               	movwf	sprintf@eexp^(0+128)
  2408  018E                     l3881:
  2409                           
  2410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2411  018E  1FB5               	btfss	(sprintf@eexp+1)^(0+128),7
  2412  018F  2991               	goto	u5831
  2413  0190  2992               	goto	u5830
  2414  0191                     u5831:
  2415  0191  2998               	goto	l3885
  2416  0192                     u5830:
  2417  0192                     l3883:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2420  0192  30FF               	movlw	255
  2421  0193  07B4               	addwf	sprintf@eexp^(0+128),f
  2422  0194  1803               	skipnc
  2423  0195  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2424  0196  30FF               	movlw	255
  2425  0197  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2426  0198                     l3885:
  2427                           
  2428                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2429  0198  0334               	decf	sprintf@eexp^(0+128),w
  2430  0199  3AFF               	xorlw	255
  2431  019A  120A  158A  249D  120A  118A  	fcall	_scale
  2432  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2433  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2434  01A1  0845               	movf	?_scale+3,w
  2435  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  2436  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  2437  01A4  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2438  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2439  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2440  01A7  0844               	movf	?_scale+2,w
  2441  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2442  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2443  01AA  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2444  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2445  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2446  01AD  0843               	movf	?_scale+1,w
  2447  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2448  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2449  01B0  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2450  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2451  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2452  01B3  0842               	movf	?_scale,w
  2453  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2454  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2455  01B6  00B6               	movwf	sprintf@tmpval^(0+128)
  2456  01B7                     l3887:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2459  01B7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2460  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2461  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2462  01BA  00AB               	movwf	___flmul@b+3
  2463  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2464  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2465  01BD  0840               	movf	(sprintf@fval+2)^(0+128),w
  2466  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2467  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2468  01C0  00AA               	movwf	___flmul@b+2
  2469  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2470  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2471  01C3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2472  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2473  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2474  01C6  00A9               	movwf	___flmul@b+1
  2475  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2476  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2477  01C9  083E               	movf	sprintf@fval^(0+128),w
  2478  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2479  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2480  01CC  00A8               	movwf	___flmul@b
  2481  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2482  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2483  01CF  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2484  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2485  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2486  01D2  00AF               	movwf	___flmul@a+3
  2487  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2488  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2489  01D5  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2490  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2491  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2492  01D8  00AE               	movwf	___flmul@a+2
  2493  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2494  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2495  01DB  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2496  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2497  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2498  01DE  00AD               	movwf	___flmul@a+1
  2499  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2500  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2501  01E1  0836               	movf	sprintf@tmpval^(0+128),w
  2502  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2503  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2504  01E4  00AC               	movwf	___flmul@a
  2505  01E5  120A  158A  213C  120A  118A  	fcall	___flmul
  2506  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2507  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2508  01EC  082B               	movf	?___flmul+3,w
  2509  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2510  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2511  01EF  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2512  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2513  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2514  01F2  082A               	movf	?___flmul+2,w
  2515  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2516  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2517  01F5  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2518  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2519  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2520  01F8  0829               	movf	?___flmul+1,w
  2521  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2522  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2523  01FB  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2524  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2525  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2526  01FE  0828               	movf	?___flmul,w
  2527  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0201  00B6               	movwf	sprintf@tmpval^(0+128)
  2530  0202                     l3889:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2533  0202  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2534  0203  00F5               	movwf	___flge@ff1+3
  2535  0204  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2536  0205  00F4               	movwf	___flge@ff1+2
  2537  0206  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2538  0207  00F3               	movwf	___flge@ff1+1
  2539  0208  0836               	movf	sprintf@tmpval^(0+128),w
  2540  0209  00F2               	movwf	___flge@ff1
  2541  020A  303F               	movlw	63
  2542  020B  00F9               	movwf	___flge@ff2+3
  2543  020C  3080               	movlw	128
  2544  020D  00F8               	movwf	___flge@ff2+2
  2545  020E  3000               	movlw	0
  2546  020F  00F7               	movwf	___flge@ff2+1
  2547  0210  3000               	movlw	0
  2548  0211  00F6               	movwf	___flge@ff2
  2549  0212  160A  158A  26A0  120A  118A  	fcall	___flge
  2550  0217  1803               	btfsc	3,0
  2551  0218  2A1A               	goto	u5841
  2552  0219  2A1B               	goto	u5840
  2553  021A                     u5841:
  2554  021A  2A24               	goto	l3893
  2555  021B                     u5840:
  2556  021B                     l3891:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2559  021B  30FF               	movlw	255
  2560  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2561  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2562  021E  07B4               	addwf	sprintf@eexp^(0+128),f
  2563  021F  1803               	skipnc
  2564  0220  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2565  0221  30FF               	movlw	255
  2566  0222  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2567  0223  2A47               	goto	l3897
  2568  0224                     l3893:
  2569  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2570  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2571  0226  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2572  0227  00F5               	movwf	___flge@ff1+3
  2573  0228  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2574  0229  00F4               	movwf	___flge@ff1+2
  2575  022A  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2576  022B  00F3               	movwf	___flge@ff1+1
  2577  022C  0836               	movf	sprintf@tmpval^(0+128),w
  2578  022D  00F2               	movwf	___flge@ff1
  2579  022E  3041               	movlw	65
  2580  022F  00F9               	movwf	___flge@ff2+3
  2581  0230  3020               	movlw	32
  2582  0231  00F8               	movwf	___flge@ff2+2
  2583  0232  3000               	movlw	0
  2584  0233  00F7               	movwf	___flge@ff2+1
  2585  0234  3000               	movlw	0
  2586  0235  00F6               	movwf	___flge@ff2
  2587  0236  160A  158A  26A0  120A  118A  	fcall	___flge
  2588  023B  1C03               	btfss	3,0
  2589  023C  2A3E               	goto	u5851
  2590  023D  2A3F               	goto	u5850
  2591  023E                     u5851:
  2592  023E  2A47               	goto	l3897
  2593  023F                     u5850:
  2594  023F                     l3895:
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2597  023F  3001               	movlw	1
  2598  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2599  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2600  0242  07B4               	addwf	sprintf@eexp^(0+128),f
  2601  0243  1803               	skipnc
  2602  0244  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2603  0245  3000               	movlw	0
  2604  0246  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2605  0247                     l3897:
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2608  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2609  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2610  0249  0843               	movf	(sprintf@prec+1)^(0+128),w
  2611  024A  3A80               	xorlw	128
  2612  024B  00FF               	movwf	btemp+1
  2613  024C  3080               	movlw	128
  2614  024D  027F               	subwf	btemp+1,w
  2615  024E  1D03               	skipz
  2616  024F  2A52               	goto	u5865
  2617  0250  300D               	movlw	13
  2618  0251  0242               	subwf	sprintf@prec^(0+128),w
  2619  0252                     u5865:
  2620  0252  1803               	skipnc
  2621  0253  2A55               	goto	u5861
  2622  0254  2A56               	goto	u5860
  2623  0255                     u5861:
  2624  0255  2A9D               	goto	l3901
  2625  0256                     u5860:
  2626  0256                     l3899:
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2629  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2630  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2631  0258  0842               	movf	sprintf@prec^(0+128),w
  2632  0259  160A  118A  236B  120A  118A  	fcall	_fround
  2633  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2634  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2635  0260  0845               	movf	?_fround+3,w
  2636  0261  00D9               	movwf	___fladd@b+3
  2637  0262  0844               	movf	?_fround+2,w
  2638  0263  00D8               	movwf	___fladd@b+2
  2639  0264  0843               	movf	?_fround+1,w
  2640  0265  00D7               	movwf	___fladd@b+1
  2641  0266  0842               	movf	?_fround,w
  2642  0267  00D6               	movwf	___fladd@b
  2643  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2644  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2645  026A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2646  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2647  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2648  026D  00DD               	movwf	___fladd@a+3
  2649  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2650  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2651  0270  0840               	movf	(sprintf@fval+2)^(0+128),w
  2652  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0273  00DC               	movwf	___fladd@a+2
  2655  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2656  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2657  0276  083F               	movf	(sprintf@fval+1)^(0+128),w
  2658  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0279  00DB               	movwf	___fladd@a+1
  2661  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2662  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2663  027C  083E               	movf	sprintf@fval^(0+128),w
  2664  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2665  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2666  027F  00DA               	movwf	___fladd@a
  2667  0280  160A  118A  2578  120A  118A  	fcall	___fladd
  2668  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2669  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2670  0287  0859               	movf	?___fladd+3,w
  2671  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2672  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2673  028A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2674  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2675  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2676  028D  0858               	movf	?___fladd+2,w
  2677  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2678  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0290  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2680  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0293  0857               	movf	?___fladd+1,w
  2683  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0296  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2686  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2688  0299  0856               	movf	?___fladd,w
  2689  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2690  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2691  029C  00BE               	movwf	sprintf@fval^(0+128)
  2692  029D                     l3901:
  2693                           
  2694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2695  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2696  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2697  029F  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2698  02A0  3A80               	xorlw	128
  2699  02A1  00FF               	movwf	btemp+1
  2700  02A2  3080               	movlw	128
  2701  02A3  027F               	subwf	btemp+1,w
  2702  02A4  1D03               	skipz
  2703  02A5  2AA8               	goto	u5875
  2704  02A6  300A               	movlw	10
  2705  02A7  0234               	subwf	sprintf@eexp^(0+128),w
  2706  02A8                     u5875:
  2707  02A8  1803               	skipnc
  2708  02A9  2AAB               	goto	u5871
  2709  02AA  2AAC               	goto	u5870
  2710  02AB                     u5871:
  2711  02AB  2AFD               	goto	l3909
  2712  02AC                     u5870:
  2713  02AC                     l3903:
  2714  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2715  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2716  02AE  0841               	movf	(sprintf@fval+3)^(0+128),w
  2717  02AF  00F5               	movwf	___fleq@ff1+3
  2718  02B0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2719  02B1  00F4               	movwf	___fleq@ff1+2
  2720  02B2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2721  02B3  00F3               	movwf	___fleq@ff1+1
  2722  02B4  083E               	movf	sprintf@fval^(0+128),w
  2723  02B5  00F2               	movwf	___fleq@ff1
  2724  02B6  3000               	movlw	0
  2725  02B7  00F9               	movwf	___fleq@ff2+3
  2726  02B8  3000               	movlw	0
  2727  02B9  00F8               	movwf	___fleq@ff2+2
  2728  02BA  3000               	movlw	0
  2729  02BB  00F7               	movwf	___fleq@ff2+1
  2730  02BC  3000               	movlw	0
  2731  02BD  00F6               	movwf	___fleq@ff2
  2732  02BE  160A  158A  2404  120A  118A  	fcall	___fleq
  2733  02C3  1803               	btfsc	3,0
  2734  02C4  2AC6               	goto	u5881
  2735  02C5  2AC7               	goto	u5880
  2736  02C6                     u5881:
  2737  02C6  2B6F               	goto	l3923
  2738  02C7                     u5880:
  2739  02C7                     l3905:
  2740  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2741  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2742  02C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2743  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2744  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2745  02CC  00D8               	movwf	___fltol@f1+3
  2746  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2747  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2748  02CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2749  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2750  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2751  02D2  00D7               	movwf	___fltol@f1+2
  2752  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2753  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2754  02D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2755  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2756  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2757  02D8  00D6               	movwf	___fltol@f1+1
  2758  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2759  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2760  02DB  083E               	movf	sprintf@fval^(0+128),w
  2761  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2762  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2763  02DE  00D5               	movwf	___fltol@f1
  2764  02DF  160A  158A  2624  120A  118A  	fcall	___fltol
  2765  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2766  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2767  02E6  0858               	movf	?___fltol+3,w
  2768  02E7  0457               	iorwf	?___fltol+2,w
  2769  02E8  0456               	iorwf	?___fltol+1,w
  2770  02E9  0455               	iorwf	?___fltol,w
  2771  02EA  1D03               	skipz
  2772  02EB  2AED               	goto	u5891
  2773  02EC  2AEE               	goto	u5890
  2774  02ED                     u5891:
  2775  02ED  2B6F               	goto	l3923
  2776  02EE                     u5890:
  2777  02EE                     l3907:
  2778  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2779  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2780  02F0  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2781  02F1  3A80               	xorlw	128
  2782  02F2  00FF               	movwf	btemp+1
  2783  02F3  3080               	movlw	128
  2784  02F4  027F               	subwf	btemp+1,w
  2785  02F5  1D03               	skipz
  2786  02F6  2AF9               	goto	u5905
  2787  02F7  3002               	movlw	2
  2788  02F8  0234               	subwf	sprintf@eexp^(0+128),w
  2789  02F9                     u5905:
  2790  02F9  1C03               	skipc
  2791  02FA  2AFC               	goto	u5901
  2792  02FB  2AFD               	goto	u5900
  2793  02FC                     u5901:
  2794  02FC  2B6F               	goto	l3923
  2795  02FD                     u5900:
  2796  02FD                     l3909:
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2799  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2800  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2801  02FF  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2802  0300  00F5               	movwf	___flge@ff1+3
  2803  0301  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2804  0302  00F4               	movwf	___flge@ff1+2
  2805  0303  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2806  0304  00F3               	movwf	___flge@ff1+1
  2807  0305  0836               	movf	sprintf@tmpval^(0+128),w
  2808  0306  00F2               	movwf	___flge@ff1
  2809  0307  3040               	movlw	64
  2810  0308  00F9               	movwf	___flge@ff2+3
  2811  0309  3089               	movlw	137
  2812  030A  00F8               	movwf	___flge@ff2+2
  2813  030B  3070               	movlw	112
  2814  030C  00F7               	movwf	___flge@ff2+1
  2815  030D  305F               	movlw	95
  2816  030E  00F6               	movwf	___flge@ff2
  2817  030F  160A  158A  26A0  120A  118A  	fcall	___flge
  2818  0314  1803               	btfsc	3,0
  2819  0315  2B17               	goto	u5911
  2820  0316  2B18               	goto	u5910
  2821  0317                     u5911:
  2822  0317  2B21               	goto	l3913
  2823  0318                     u5910:
  2824  0318                     l3911:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2827  0318  30F7               	movlw	247
  2828  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2829  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2830  031B  07B4               	addwf	sprintf@eexp^(0+128),f
  2831  031C  1803               	skipnc
  2832  031D  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2833  031E  30FF               	movlw	255
  2834  031F  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2837  0320  2B29               	goto	l3915
  2838  0321                     l3913:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2841  0321  30F8               	movlw	248
  2842  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2843  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0324  07B4               	addwf	sprintf@eexp^(0+128),f
  2845  0325  1803               	skipnc
  2846  0326  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2847  0327  30FF               	movlw	255
  2848  0328  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2849  0329                     l3915:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2852  0329  0834               	movf	sprintf@eexp^(0+128),w
  2853  032A  120A  158A  249D  120A  118A  	fcall	_scale
  2854  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2855  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0331  0845               	movf	?_scale+3,w
  2857  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2858  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2859  0334  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2860  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0337  0844               	movf	?_scale+2,w
  2863  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2864  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2865  033A  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2866  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2867  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2868  033D  0843               	movf	?_scale+1,w
  2869  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2870  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2871  0340  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2872  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0343  0842               	movf	?_scale,w
  2875  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0346  00B6               	movwf	sprintf@tmpval^(0+128)
  2878  0347                     l3917:
  2879  0347  0841               	movf	(sprintf@fval+3)^(0+128),w
  2880  0348  00F5               	movwf	__div_to_l_@f1+3
  2881  0349  0840               	movf	(sprintf@fval+2)^(0+128),w
  2882  034A  00F4               	movwf	__div_to_l_@f1+2
  2883  034B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2884  034C  00F3               	movwf	__div_to_l_@f1+1
  2885  034D  083E               	movf	sprintf@fval^(0+128),w
  2886  034E  00F2               	movwf	__div_to_l_@f1
  2887  034F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2888  0350  00F9               	movwf	__div_to_l_@f2+3
  2889  0351  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2890  0352  00F8               	movwf	__div_to_l_@f2+2
  2891  0353  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2892  0354  00F7               	movwf	__div_to_l_@f2+1
  2893  0355  0836               	movf	sprintf@tmpval^(0+128),w
  2894  0356  00F6               	movwf	__div_to_l_@f2
  2895  0357  160A  118A  21A9  120A  118A  	fcall	__div_to_l_
  2896  035C  0875               	movf	?__div_to_l_+3,w
  2897  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2898  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2899  035F  00BD               	movwf	(sprintf@val+3)^(0+128)
  2900  0360  0874               	movf	?__div_to_l_+2,w
  2901  0361  00BC               	movwf	(sprintf@val+2)^(0+128)
  2902  0362  0873               	movf	?__div_to_l_+1,w
  2903  0363  00BB               	movwf	(sprintf@val+1)^(0+128)
  2904  0364  0872               	movf	?__div_to_l_,w
  2905  0365  00BA               	movwf	sprintf@val^(0+128)
  2906  0366                     l3921:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2909  0366  3000               	movlw	0
  2910  0367  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2911  0368  3000               	movlw	0
  2912  0369  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2913  036A  3000               	movlw	0
  2914  036B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2915  036C  3000               	movlw	0
  2916  036D  00BE               	movwf	sprintf@fval^(0+128)
  2917                           
  2918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2919  036E  2BD5               	goto	l3929
  2920  036F                     l3923:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2923  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2924  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2925  0371  0841               	movf	(sprintf@fval+3)^(0+128),w
  2926  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0374  00D8               	movwf	___fltol@f1+3
  2929  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2931  0377  0840               	movf	(sprintf@fval+2)^(0+128),w
  2932  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2934  037A  00D7               	movwf	___fltol@f1+2
  2935  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2936  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2937  037D  083F               	movf	(sprintf@fval+1)^(0+128),w
  2938  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2939  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0380  00D6               	movwf	___fltol@f1+1
  2941  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0383  083E               	movf	sprintf@fval^(0+128),w
  2944  0384  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0385  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0386  00D5               	movwf	___fltol@f1
  2947  0387  160A  158A  2624  120A  118A  	fcall	___fltol
  2948  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2949  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2950  038E  0858               	movf	?___fltol+3,w
  2951  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0391  00BD               	movwf	(sprintf@val+3)^(0+128)
  2954  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0394  0857               	movf	?___fltol+2,w
  2957  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2958  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2959  0397  00BC               	movwf	(sprintf@val+2)^(0+128)
  2960  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2961  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2962  039A  0856               	movf	?___fltol+1,w
  2963  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2964  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2965  039D  00BB               	movwf	(sprintf@val+1)^(0+128)
  2966  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2967  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2968  03A0  0855               	movf	?___fltol,w
  2969  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  2970  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  2971  03A3  00BA               	movwf	sprintf@val^(0+128)
  2972  03A4                     l3925:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2975  03A4  083D               	movf	(sprintf@val+3)^(0+128),w
  2976  03A5  00F5               	movwf	___xxtofl@val+3
  2977  03A6  083C               	movf	(sprintf@val+2)^(0+128),w
  2978  03A7  00F4               	movwf	___xxtofl@val+2
  2979  03A8  083B               	movf	(sprintf@val+1)^(0+128),w
  2980  03A9  00F3               	movwf	___xxtofl@val+1
  2981  03AA  083A               	movf	sprintf@val^(0+128),w
  2982  03AB  00F2               	movwf	___xxtofl@val
  2983  03AC  3000               	movlw	0
  2984  03AD  160A  158A  2744  120A  118A  	fcall	___xxtofl
  2985  03B2  0875               	movf	?___xxtofl+3,w
  2986  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2987  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2988  03B5  00A3               	movwf	(___flsub@a+3)^(0+128)
  2989  03B6  0874               	movf	?___xxtofl+2,w
  2990  03B7  00A2               	movwf	(___flsub@a+2)^(0+128)
  2991  03B8  0873               	movf	?___xxtofl+1,w
  2992  03B9  00A1               	movwf	(___flsub@a+1)^(0+128)
  2993  03BA  0872               	movf	?___xxtofl,w
  2994  03BB  00A0               	movwf	___flsub@a^(0+128)
  2995  03BC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2996  03BD  00A7               	movwf	(___flsub@b+3)^(0+128)
  2997  03BE  0840               	movf	(sprintf@fval+2)^(0+128),w
  2998  03BF  00A6               	movwf	(___flsub@b+2)^(0+128)
  2999  03C0  083F               	movf	(sprintf@fval+1)^(0+128),w
  3000  03C1  00A5               	movwf	(___flsub@b+1)^(0+128)
  3001  03C2  083E               	movf	sprintf@fval^(0+128),w
  3002  03C3  00A4               	movwf	___flsub@b^(0+128)
  3003  03C4  160A  158A  2454  120A  118A  	fcall	___flsub
  3004  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3005  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  3006  03CB  0823               	movf	(?___flsub+3)^(0+128),w
  3007  03CC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3008  03CD  0822               	movf	(?___flsub+2)^(0+128),w
  3009  03CE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3010  03CF  0821               	movf	(?___flsub+1)^(0+128),w
  3011  03D0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3012  03D1  0820               	movf	?___flsub^(0+128),w
  3013  03D2  00BE               	movwf	sprintf@fval^(0+128)
  3014  03D3                     l3927:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3017  03D3  01B4               	clrf	sprintf@eexp^(0+128)
  3018  03D4  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  3019  03D5                     l3929:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3022  03D5  01C5               	clrf	sprintf@c^(0+128)
  3023  03D6  0AC5               	incf	sprintf@c^(0+128),f
  3024  03D7                     l3935:
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3027  03D7  0845               	movf	sprintf@c^(0+128),w
  3028  03D8  00A8               	movwf	??_sprintf^(0+128)
  3029  03D9  3001               	movlw	1
  3030  03DA                     u5925:
  3031  03DA  1003               	clrc
  3032  03DB  0DA8               	rlf	??_sprintf^(0+128),f
  3033  03DC  3EFF               	addlw	-1
  3034  03DD  1D03               	skipz
  3035  03DE  2BDA               	goto	u5925
  3036  03DF  1003               	clrc
  3037  03E0  0D28               	rlf	??_sprintf^(0+128),w
  3038  03E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3039  03E2  0084               	movwf	4
  3040  03E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3041  03E8  00A9               	movwf	(??_sprintf+1)^(0+128)
  3042  03E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3043  03EE  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3044  03EF  160A  118A  200A  120A  118A  	fcall	stringdir
  3045  03F4  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3046  03F5  160A  118A  200A  120A  118A  	fcall	stringdir
  3047  03FA  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3048  03FB  082C               	movf	(??_sprintf+4)^(0+128),w
  3049  03FC  023D               	subwf	(sprintf@val+3)^(0+128),w
  3050  03FD  1D03               	skipz
  3051  03FE  2C09               	goto	u5935
  3052  03FF  082B               	movf	(??_sprintf+3)^(0+128),w
  3053  0400  023C               	subwf	(sprintf@val+2)^(0+128),w
  3054  0401  1D03               	skipz
  3055  0402  2C09               	goto	u5935
  3056  0403  082A               	movf	(??_sprintf+2)^(0+128),w
  3057  0404  023B               	subwf	(sprintf@val+1)^(0+128),w
  3058  0405  1D03               	skipz
  3059  0406  2C09               	goto	u5935
  3060  0407  0829               	movf	(??_sprintf+1)^(0+128),w
  3061  0408  023A               	subwf	sprintf@val^(0+128),w
  3062  0409                     u5935:
  3063  0409  1803               	skipnc
  3064  040A  2C0C               	goto	u5931
  3065  040B  2C0D               	goto	u5930
  3066  040C                     u5931:
  3067  040C  2C0E               	goto	l3939
  3068  040D                     u5930:
  3069  040D  2C18               	goto	l3941
  3070  040E                     l3939:
  3071  040E  3001               	movlw	1
  3072  040F  00A8               	movwf	??_sprintf^(0+128)
  3073  0410  0828               	movf	??_sprintf^(0+128),w
  3074  0411  07C5               	addwf	sprintf@c^(0+128),f
  3075  0412  300A               	movlw	10
  3076  0413  0645               	xorwf	sprintf@c^(0+128),w
  3077  0414  1D03               	btfss	3,2
  3078  0415  2C17               	goto	u5941
  3079  0416  2C18               	goto	u5940
  3080  0417                     u5941:
  3081  0417  2BD7               	goto	l3935
  3082  0418                     u5940:
  3083  0418                     l3941:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3086  0418  3003               	movlw	3
  3087  0419  0532               	andwf	sprintf@flag^(0+128),w
  3088  041A  00A8               	movwf	??_sprintf^(0+128)
  3089  041B  3000               	movlw	0
  3090  041C  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3091  041D  00A9               	movwf	(??_sprintf+1)^(0+128)
  3092  041E  0828               	movf	??_sprintf^(0+128),w
  3093  041F  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3094  0420  1903               	btfsc	3,2
  3095  0421  2C23               	goto	u5951
  3096  0422  2C24               	goto	u5950
  3097  0423                     u5951:
  3098  0423  2CB6               	goto	l402
  3099  0424                     u5950:
  3100  0424                     l3943:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3103  0424  302D               	movlw	45
  3104  0425  00A8               	movwf	??_sprintf^(0+128)
  3105  0426  0844               	movf	sprintf@sp^(0+128),w
  3106  0427  0084               	movwf	4
  3107  0428  0828               	movf	??_sprintf^(0+128),w
  3108  0429  1783               	bsf	3,7	;select IRP bank2
  3109  042A  0080               	movwf	0
  3110  042B                     l3945:
  3111  042B  3001               	movlw	1
  3112  042C  00A8               	movwf	??_sprintf^(0+128)
  3113  042D  0828               	movf	??_sprintf^(0+128),w
  3114  042E  07C4               	addwf	sprintf@sp^(0+128),f
  3115  042F  2CB6               	goto	l402
  3116  0430                     l3947:
  3117                           
  3118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3119  0430  0845               	movf	sprintf@c^(0+128),w
  3120  0431  00A8               	movwf	??_sprintf^(0+128)
  3121  0432  3001               	movlw	1
  3122  0433                     u5965:
  3123  0433  1003               	clrc
  3124  0434  0DA8               	rlf	??_sprintf^(0+128),f
  3125  0435  3EFF               	addlw	-1
  3126  0436  1D03               	skipz
  3127  0437  2C33               	goto	u5965
  3128  0438  1003               	clrc
  3129  0439  0D28               	rlf	??_sprintf^(0+128),w
  3130  043A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3131  043B  0084               	movwf	4
  3132  043C  160A  118A  200A  120A  118A  	fcall	stringdir
  3133  0441  00F2               	movwf	___lldiv@divisor
  3134  0442  160A  118A  200A  120A  118A  	fcall	stringdir
  3135  0447  00F3               	movwf	___lldiv@divisor+1
  3136  0448  160A  118A  200A  120A  118A  	fcall	stringdir
  3137  044D  00F4               	movwf	___lldiv@divisor+2
  3138  044E  160A  118A  200A  120A  118A  	fcall	stringdir
  3139  0453  00F5               	movwf	___lldiv@divisor+3
  3140  0454  083D               	movf	(sprintf@val+3)^(0+128),w
  3141  0455  00F9               	movwf	___lldiv@dividend+3
  3142  0456  083C               	movf	(sprintf@val+2)^(0+128),w
  3143  0457  00F8               	movwf	___lldiv@dividend+2
  3144  0458  083B               	movf	(sprintf@val+1)^(0+128),w
  3145  0459  00F7               	movwf	___lldiv@dividend+1
  3146  045A  083A               	movf	sprintf@val^(0+128),w
  3147  045B  00F6               	movwf	___lldiv@dividend
  3148  045C  160A  158A  2553  120A  118A  	fcall	___lldiv
  3149  0461  0875               	movf	?___lldiv+3,w
  3150  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3151  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3152  0464  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3153  0465  0874               	movf	?___lldiv+2,w
  3154  0466  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3155  0467  0873               	movf	?___lldiv+1,w
  3156  0468  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3157  0469  0872               	movf	?___lldiv,w
  3158  046A  00B6               	movwf	sprintf@tmpval^(0+128)
  3159  046B                     l3949:
  3160                           
  3161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3162  046B  3000               	movlw	0
  3163  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3164  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3165  046E  00A8               	movwf	___llmod@divisor+3
  3166  046F  3000               	movlw	0
  3167  0470  00A7               	movwf	___llmod@divisor+2
  3168  0471  3000               	movlw	0
  3169  0472  00A6               	movwf	___llmod@divisor+1
  3170  0473  300A               	movlw	10
  3171  0474  00A5               	movwf	___llmod@divisor
  3172  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3173  0476  1303               	bcf	3,6	;RP1=0, select bank1
  3174  0477  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  3175  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3177  047A  00AC               	movwf	___llmod@dividend+3
  3178  047B  1683               	bsf	3,5	;RP0=1, select bank1
  3179  047C  1303               	bcf	3,6	;RP1=0, select bank1
  3180  047D  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  3181  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3182  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0480  00AB               	movwf	___llmod@dividend+2
  3184  0481  1683               	bsf	3,5	;RP0=1, select bank1
  3185  0482  1303               	bcf	3,6	;RP1=0, select bank1
  3186  0483  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  3187  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0486  00AA               	movwf	___llmod@dividend+1
  3190  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3192  0489  0836               	movf	sprintf@tmpval^(0+128),w
  3193  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3194  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3195  048C  00A9               	movwf	___llmod@dividend
  3196  048D  160A  158A  24A4  120A  118A  	fcall	___llmod
  3197  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0494  0828               	movf	?___llmod+3,w
  3200  0495  1683               	bsf	3,5	;RP0=1, select bank1
  3201  0496  1303               	bcf	3,6	;RP1=0, select bank1
  3202  0497  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3203  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3205  049A  0827               	movf	?___llmod+2,w
  3206  049B  1683               	bsf	3,5	;RP0=1, select bank1
  3207  049C  1303               	bcf	3,6	;RP1=0, select bank1
  3208  049D  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3209  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3210  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3211  04A0  0826               	movf	?___llmod+1,w
  3212  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3213  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3214  04A3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3215  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3216  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3217  04A6  0825               	movf	?___llmod,w
  3218  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  3219  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  3220  04A9  00B6               	movwf	sprintf@tmpval^(0+128)
  3221  04AA                     l3951:
  3222                           
  3223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3224  04AA  0836               	movf	sprintf@tmpval^(0+128),w
  3225  04AB  3E30               	addlw	48
  3226  04AC  00A8               	movwf	??_sprintf^(0+128)
  3227  04AD  0844               	movf	sprintf@sp^(0+128),w
  3228  04AE  0084               	movwf	4
  3229  04AF  0828               	movf	??_sprintf^(0+128),w
  3230  04B0  1783               	bsf	3,7	;select IRP bank2
  3231  04B1  0080               	movwf	0
  3232  04B2  3001               	movlw	1
  3233  04B3  00A8               	movwf	??_sprintf^(0+128)
  3234  04B4  0828               	movf	??_sprintf^(0+128),w
  3235  04B5  07C4               	addwf	sprintf@sp^(0+128),f
  3236  04B6                     l402:	
  3237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3238                           
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3241  04B6  3001               	movlw	1
  3242  04B7  02C5               	subwf	sprintf@c^(0+128),f
  3243  04B8  0A45               	incf	sprintf@c^(0+128),w
  3244  04B9  1D03               	btfss	3,2
  3245  04BA  2CBC               	goto	u5971
  3246  04BB  2CBD               	goto	u5970
  3247  04BC                     u5971:
  3248  04BC  2C30               	goto	l3947
  3249  04BD                     u5970:
  3250  04BD  2CD1               	goto	l3959
  3251  04BE                     l3953:
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3254  04BE  3030               	movlw	48
  3255  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3256  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3257  04C1  00A8               	movwf	??_sprintf^(0+128)
  3258  04C2  0844               	movf	sprintf@sp^(0+128),w
  3259  04C3  0084               	movwf	4
  3260  04C4  0828               	movf	??_sprintf^(0+128),w
  3261  04C5  1783               	bsf	3,7	;select IRP bank2
  3262  04C6  0080               	movwf	0
  3263  04C7                     l3955:
  3264  04C7  3001               	movlw	1
  3265  04C8  00A8               	movwf	??_sprintf^(0+128)
  3266  04C9  0828               	movf	??_sprintf^(0+128),w
  3267  04CA  07C4               	addwf	sprintf@sp^(0+128),f
  3268  04CB                     l3957:
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3271  04CB  30FF               	movlw	255
  3272  04CC  07B4               	addwf	sprintf@eexp^(0+128),f
  3273  04CD  1803               	skipnc
  3274  04CE  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  3275  04CF  30FF               	movlw	255
  3276  04D0  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  3277  04D1                     l3959:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3280  04D1  0835               	movf	(sprintf@eexp+1)^(0+128),w
  3281  04D2  3A80               	xorlw	128
  3282  04D3  00FF               	movwf	btemp+1
  3283  04D4  3080               	movlw	128
  3284  04D5  027F               	subwf	btemp+1,w
  3285  04D6  1D03               	skipz
  3286  04D7  2CDA               	goto	u5985
  3287  04D8  3001               	movlw	1
  3288  04D9  0234               	subwf	sprintf@eexp^(0+128),w
  3289  04DA                     u5985:
  3290  04DA  1803               	skipnc
  3291  04DB  2CDD               	goto	u5981
  3292  04DC  2CDE               	goto	u5980
  3293  04DD                     u5981:
  3294  04DD  2CBE               	goto	l3953
  3295  04DE                     u5980:
  3296  04DE                     l3961:
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3299  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3300  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  3301  04E0  0843               	movf	(sprintf@prec+1)^(0+128),w
  3302  04E1  3A80               	xorlw	128
  3303  04E2  00FF               	movwf	btemp+1
  3304  04E3  3080               	movlw	128
  3305  04E4  027F               	subwf	btemp+1,w
  3306  04E5  1D03               	skipz
  3307  04E6  2CE9               	goto	u5995
  3308  04E7  3009               	movlw	9
  3309  04E8  0242               	subwf	sprintf@prec^(0+128),w
  3310  04E9                     u5995:
  3311  04E9  1C03               	skipc
  3312  04EA  2CEC               	goto	u5991
  3313  04EB  2CED               	goto	u5990
  3314  04EC                     u5991:
  3315  04EC  2CF4               	goto	l3965
  3316  04ED                     u5990:
  3317  04ED                     l3963:
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3320  04ED  3008               	movlw	8
  3321  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3322  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3323  04F0  00A8               	movwf	??_sprintf^(0+128)
  3324  04F1  0828               	movf	??_sprintf^(0+128),w
  3325  04F2  00C5               	movwf	sprintf@c^(0+128)
  3326  04F3  2CFA               	goto	l409
  3327  04F4                     l3965:
  3328                           
  3329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3330  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  3331  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  3332  04F6  0842               	movf	sprintf@prec^(0+128),w
  3333  04F7  00A8               	movwf	??_sprintf^(0+128)
  3334  04F8  0828               	movf	??_sprintf^(0+128),w
  3335  04F9  00C5               	movwf	sprintf@c^(0+128)
  3336  04FA                     l409:
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3339  04FA  0845               	movf	sprintf@c^(0+128),w
  3340  04FB  00A8               	movwf	??_sprintf^(0+128)
  3341  04FC  01A9               	clrf	(??_sprintf^(0+128)+1)
  3342  04FD  0828               	movf	??_sprintf^(0+128),w
  3343  04FE  02C2               	subwf	sprintf@prec^(0+128),f
  3344  04FF  0829               	movf	(??_sprintf+1)^(0+128),w
  3345  0500  1C03               	skipc
  3346  0501  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3347  0502  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3348  0503                     l3967:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3351  0503  0845               	movf	sprintf@c^(0+128),w
  3352  0504  1903               	btfsc	3,2
  3353  0505  2D07               	goto	u6001
  3354  0506  2D08               	goto	u6000
  3355  0507                     u6001:
  3356  0507  2D13               	goto	l3973
  3357  0508                     u6000:
  3358  0508                     l3969:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3361  0508  302E               	movlw	46
  3362  0509  00A8               	movwf	??_sprintf^(0+128)
  3363  050A  0844               	movf	sprintf@sp^(0+128),w
  3364  050B  0084               	movwf	4
  3365  050C  0828               	movf	??_sprintf^(0+128),w
  3366  050D  1783               	bsf	3,7	;select IRP bank2
  3367  050E  0080               	movwf	0
  3368  050F                     l3971:
  3369  050F  3001               	movlw	1
  3370  0510  00A8               	movwf	??_sprintf^(0+128)
  3371  0511  0828               	movf	??_sprintf^(0+128),w
  3372  0512  07C4               	addwf	sprintf@sp^(0+128),f
  3373  0513                     l3973:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3376  0513  0845               	movf	sprintf@c^(0+128),w
  3377  0514  120A  158A  249D  120A  118A  	fcall	_scale
  3378  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3379  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3380  051B  0845               	movf	?_scale+3,w
  3381  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3382  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3383  051E  00B0               	movwf	(_sprintf$1310+3)^(0+128)
  3384  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0521  0844               	movf	?_scale+2,w
  3387  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0524  00AF               	movwf	(_sprintf$1310+2)^(0+128)
  3390  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0527  0843               	movf	?_scale+1,w
  3393  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3394  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3395  052A  00AE               	movwf	(_sprintf$1310+1)^(0+128)
  3396  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3397  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3398  052D  0842               	movf	?_scale,w
  3399  052E  1683               	bsf	3,5	;RP0=1, select bank1
  3400  052F  1303               	bcf	3,6	;RP1=0, select bank1
  3401  0530  00AD               	movwf	_sprintf$1310^(0+128)
  3402  0531                     l3975:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3405  0531  0830               	movf	(_sprintf$1310+3)^(0+128),w
  3406  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0534  00AF               	movwf	___flmul@a+3
  3409  0535  1683               	bsf	3,5	;RP0=1, select bank1
  3410  0536  1303               	bcf	3,6	;RP1=0, select bank1
  3411  0537  082F               	movf	(_sprintf$1310+2)^(0+128),w
  3412  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3414  053A  00AE               	movwf	___flmul@a+2
  3415  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3416  053C  1303               	bcf	3,6	;RP1=0, select bank1
  3417  053D  082E               	movf	(_sprintf$1310+1)^(0+128),w
  3418  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3419  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0540  00AD               	movwf	___flmul@a+1
  3421  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3423  0543  082D               	movf	_sprintf$1310^(0+128),w
  3424  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0546  00AC               	movwf	___flmul@a
  3427  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0549  0841               	movf	(sprintf@fval+3)^(0+128),w
  3430  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3431  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3432  054C  00AB               	movwf	___flmul@b+3
  3433  054D  1683               	bsf	3,5	;RP0=1, select bank1
  3434  054E  1303               	bcf	3,6	;RP1=0, select bank1
  3435  054F  0840               	movf	(sprintf@fval+2)^(0+128),w
  3436  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0552  00AA               	movwf	___flmul@b+2
  3439  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3441  0555  083F               	movf	(sprintf@fval+1)^(0+128),w
  3442  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3444  0558  00A9               	movwf	___flmul@b+1
  3445  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3446  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3447  055B  083E               	movf	sprintf@fval^(0+128),w
  3448  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3449  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3450  055E  00A8               	movwf	___flmul@b
  3451  055F  120A  158A  213C  120A  118A  	fcall	___flmul
  3452  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0566  082B               	movf	?___flmul+3,w
  3455  0567  00D8               	movwf	___fltol@f1+3
  3456  0568  082A               	movf	?___flmul+2,w
  3457  0569  00D7               	movwf	___fltol@f1+2
  3458  056A  0829               	movf	?___flmul+1,w
  3459  056B  00D6               	movwf	___fltol@f1+1
  3460  056C  0828               	movf	?___flmul,w
  3461  056D  00D5               	movwf	___fltol@f1
  3462  056E  160A  158A  2624  120A  118A  	fcall	___fltol
  3463  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0575  0858               	movf	?___fltol+3,w
  3466  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3467  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3468  0578  00BD               	movwf	(sprintf@val+3)^(0+128)
  3469  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3470  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3471  057B  0857               	movf	?___fltol+2,w
  3472  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3473  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3474  057E  00BC               	movwf	(sprintf@val+2)^(0+128)
  3475  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0581  0856               	movf	?___fltol+1,w
  3478  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3479  0583  1303               	bcf	3,6	;RP1=0, select bank1
  3480  0584  00BB               	movwf	(sprintf@val+1)^(0+128)
  3481  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0587  0855               	movf	?___fltol,w
  3484  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3485  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3486  058A  00BA               	movwf	sprintf@val^(0+128)
  3487                           
  3488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3489  058B  2E6D               	goto	l3985
  3490  058C                     l3977:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3493  058C  0845               	movf	sprintf@c^(0+128),w
  3494  058D  00A8               	movwf	??_sprintf^(0+128)
  3495  058E  3001               	movlw	1
  3496  058F                     u6015:
  3497  058F  1003               	clrc
  3498  0590  0DA8               	rlf	??_sprintf^(0+128),f
  3499  0591  3EFF               	addlw	-1
  3500  0592  1D03               	skipz
  3501  0593  2D8F               	goto	u6015
  3502  0594  1003               	clrc
  3503  0595  0D28               	rlf	??_sprintf^(0+128),w
  3504  0596  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3505  0597  0084               	movwf	4
  3506  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  3507  059D  00F2               	movwf	___lldiv@divisor
  3508  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  3509  05A3  00F3               	movwf	___lldiv@divisor+1
  3510  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  3511  05A9  00F4               	movwf	___lldiv@divisor+2
  3512  05AA  160A  118A  200A  120A  118A  	fcall	stringdir
  3513  05AF  00F5               	movwf	___lldiv@divisor+3
  3514  05B0  083D               	movf	(sprintf@val+3)^(0+128),w
  3515  05B1  00F9               	movwf	___lldiv@dividend+3
  3516  05B2  083C               	movf	(sprintf@val+2)^(0+128),w
  3517  05B3  00F8               	movwf	___lldiv@dividend+2
  3518  05B4  083B               	movf	(sprintf@val+1)^(0+128),w
  3519  05B5  00F7               	movwf	___lldiv@dividend+1
  3520  05B6  083A               	movf	sprintf@val^(0+128),w
  3521  05B7  00F6               	movwf	___lldiv@dividend
  3522  05B8  160A  158A  2553  120A  118A  	fcall	___lldiv
  3523  05BD  0875               	movf	?___lldiv+3,w
  3524  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3525  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3526  05C0  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3527  05C1  0874               	movf	?___lldiv+2,w
  3528  05C2  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3529  05C3  0873               	movf	?___lldiv+1,w
  3530  05C4  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3531  05C5  0872               	movf	?___lldiv,w
  3532  05C6  00B6               	movwf	sprintf@tmpval^(0+128)
  3533  05C7                     l3979:
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3536  05C7  3000               	movlw	0
  3537  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3538  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3539  05CA  00A8               	movwf	___llmod@divisor+3
  3540  05CB  3000               	movlw	0
  3541  05CC  00A7               	movwf	___llmod@divisor+2
  3542  05CD  3000               	movlw	0
  3543  05CE  00A6               	movwf	___llmod@divisor+1
  3544  05CF  300A               	movlw	10
  3545  05D0  00A5               	movwf	___llmod@divisor
  3546  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3547  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3548  05D3  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  3549  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3550  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3551  05D6  00AC               	movwf	___llmod@dividend+3
  3552  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3553  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3554  05D9  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  3555  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3556  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3557  05DC  00AB               	movwf	___llmod@dividend+2
  3558  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  3559  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  3560  05DF  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  3561  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3562  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3563  05E2  00AA               	movwf	___llmod@dividend+1
  3564  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3565  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3566  05E5  0836               	movf	sprintf@tmpval^(0+128),w
  3567  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3568  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3569  05E8  00A9               	movwf	___llmod@dividend
  3570  05E9  160A  158A  24A4  120A  118A  	fcall	___llmod
  3571  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3572  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3573  05F0  0828               	movf	?___llmod+3,w
  3574  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3575  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3576  05F3  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3577  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3578  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3579  05F6  0827               	movf	?___llmod+2,w
  3580  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3581  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3582  05F9  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3583  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3584  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3585  05FC  0826               	movf	?___llmod+1,w
  3586  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3587  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3588  05FF  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3589  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3590  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3591  0602  0825               	movf	?___llmod,w
  3592  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0605  00B6               	movwf	sprintf@tmpval^(0+128)
  3595  0606                     l3981:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3598  0606  0836               	movf	sprintf@tmpval^(0+128),w
  3599  0607  3E30               	addlw	48
  3600  0608  00A8               	movwf	??_sprintf^(0+128)
  3601  0609  0844               	movf	sprintf@sp^(0+128),w
  3602  060A  0084               	movwf	4
  3603  060B  0828               	movf	??_sprintf^(0+128),w
  3604  060C  1783               	bsf	3,7	;select IRP bank2
  3605  060D  0080               	movwf	0
  3606  060E  3001               	movlw	1
  3607  060F  00A8               	movwf	??_sprintf^(0+128)
  3608  0610  0828               	movf	??_sprintf^(0+128),w
  3609  0611  07C4               	addwf	sprintf@sp^(0+128),f
  3610  0612                     l3983:
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3613  0612  0845               	movf	sprintf@c^(0+128),w
  3614  0613  00A8               	movwf	??_sprintf^(0+128)
  3615  0614  3001               	movlw	1
  3616  0615                     u6025:
  3617  0615  1003               	clrc
  3618  0616  0DA8               	rlf	??_sprintf^(0+128),f
  3619  0617  3EFF               	addlw	-1
  3620  0618  1D03               	skipz
  3621  0619  2E15               	goto	u6025
  3622  061A  1003               	clrc
  3623  061B  0D28               	rlf	??_sprintf^(0+128),w
  3624  061C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3625  061D  0084               	movwf	4
  3626  061E  160A  118A  200A  120A  118A  	fcall	stringdir
  3627  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0625  00A5               	movwf	___llmod@divisor
  3630  0626  160A  118A  200A  120A  118A  	fcall	stringdir
  3631  062B  00A6               	movwf	___llmod@divisor+1
  3632  062C  160A  118A  200A  120A  118A  	fcall	stringdir
  3633  0631  00A7               	movwf	___llmod@divisor+2
  3634  0632  160A  118A  200A  120A  118A  	fcall	stringdir
  3635  0637  00A8               	movwf	___llmod@divisor+3
  3636  0638  1683               	bsf	3,5	;RP0=1, select bank1
  3637  0639  1303               	bcf	3,6	;RP1=0, select bank1
  3638  063A  083D               	movf	(sprintf@val+3)^(0+128),w
  3639  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3640  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3641  063D  00AC               	movwf	___llmod@dividend+3
  3642  063E  1683               	bsf	3,5	;RP0=1, select bank1
  3643  063F  1303               	bcf	3,6	;RP1=0, select bank1
  3644  0640  083C               	movf	(sprintf@val+2)^(0+128),w
  3645  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0643  00AB               	movwf	___llmod@dividend+2
  3648  0644  1683               	bsf	3,5	;RP0=1, select bank1
  3649  0645  1303               	bcf	3,6	;RP1=0, select bank1
  3650  0646  083B               	movf	(sprintf@val+1)^(0+128),w
  3651  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0649  00AA               	movwf	___llmod@dividend+1
  3654  064A  1683               	bsf	3,5	;RP0=1, select bank1
  3655  064B  1303               	bcf	3,6	;RP1=0, select bank1
  3656  064C  083A               	movf	sprintf@val^(0+128),w
  3657  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3658  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3659  064F  00A9               	movwf	___llmod@dividend
  3660  0650  160A  158A  24A4  120A  118A  	fcall	___llmod
  3661  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0657  0828               	movf	?___llmod+3,w
  3664  0658  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0659  1303               	bcf	3,6	;RP1=0, select bank1
  3666  065A  00BD               	movwf	(sprintf@val+3)^(0+128)
  3667  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3668  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3669  065D  0827               	movf	?___llmod+2,w
  3670  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3671  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3672  0660  00BC               	movwf	(sprintf@val+2)^(0+128)
  3673  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3674  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3675  0663  0826               	movf	?___llmod+1,w
  3676  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3677  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3678  0666  00BB               	movwf	(sprintf@val+1)^(0+128)
  3679  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0669  0825               	movf	?___llmod,w
  3682  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3683  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3684  066C  00BA               	movwf	sprintf@val^(0+128)
  3685  066D                     l3985:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3688  066D  3001               	movlw	1
  3689  066E  02C5               	subwf	sprintf@c^(0+128),f
  3690  066F  0A45               	incf	sprintf@c^(0+128),w
  3691  0670  1D03               	btfss	3,2
  3692  0671  2E73               	goto	u6031
  3693  0672  2E74               	goto	u6030
  3694  0673                     u6031:
  3695  0673  2D8C               	goto	l3977
  3696  0674                     u6030:
  3697  0674  2E86               	goto	l3993
  3698  0675                     l3987:
  3699                           
  3700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3701  0675  3030               	movlw	48
  3702  0676  00A8               	movwf	??_sprintf^(0+128)
  3703  0677  0844               	movf	sprintf@sp^(0+128),w
  3704  0678  0084               	movwf	4
  3705  0679  0828               	movf	??_sprintf^(0+128),w
  3706  067A  1783               	bsf	3,7	;select IRP bank2
  3707  067B  0080               	movwf	0
  3708  067C                     l3989:
  3709  067C  3001               	movlw	1
  3710  067D  00A8               	movwf	??_sprintf^(0+128)
  3711  067E  0828               	movf	??_sprintf^(0+128),w
  3712  067F  07C4               	addwf	sprintf@sp^(0+128),f
  3713  0680                     l3991:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3716  0680  30FF               	movlw	255
  3717  0681  07C2               	addwf	sprintf@prec^(0+128),f
  3718  0682  1803               	skipnc
  3719  0683  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3720  0684  30FF               	movlw	255
  3721  0685  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3722  0686                     l3993:
  3723                           
  3724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3725  0686  0842               	movf	sprintf@prec^(0+128),w
  3726  0687  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3727  0688  1D03               	btfss	3,2
  3728  0689  2E8B               	goto	u6041
  3729  068A  2E8C               	goto	u6040
  3730  068B                     u6041:
  3731  068B  2E75               	goto	l3987
  3732  068C                     u6040:
  3733  068C  2FB5               	goto	l4045
  3734  068D                     l3995:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3737  068D  0831               	movf	sprintf@ap^(0+128),w
  3738  068E  0084               	movwf	4
  3739  068F  1383               	bcf	3,7	;select IRP bank0
  3740  0690  0800               	movf	0,w
  3741  0691  00A8               	movwf	??_sprintf^(0+128)
  3742  0692  0A84               	incf	4,f
  3743  0693  0800               	movf	0,w
  3744  0694  00A9               	movwf	(??_sprintf^(0+128)+1)
  3745  0695  0828               	movf	??_sprintf^(0+128),w
  3746  0696  00BA               	movwf	sprintf@val^(0+128)
  3747  0697  0829               	movf	(??_sprintf+1)^(0+128),w
  3748  0698  00BB               	movwf	(sprintf@val+1)^(0+128)
  3749  0699  3000               	movlw	0
  3750  069A  1BBB               	btfsc	(sprintf@val+1)^(0+128),7
  3751  069B  30FF               	movlw	255
  3752  069C  00BC               	movwf	(sprintf@val+2)^(0+128)
  3753  069D  00BD               	movwf	(sprintf@val+3)^(0+128)
  3754  069E                     l3997:
  3755  069E  3002               	movlw	2
  3756  069F  00A8               	movwf	??_sprintf^(0+128)
  3757  06A0  0828               	movf	??_sprintf^(0+128),w
  3758  06A1  07B1               	addwf	sprintf@ap^(0+128),f
  3759  06A2                     l3999:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3762  06A2  1FBD               	btfss	(sprintf@val+3)^(0+128),7
  3763  06A3  2EA5               	goto	u6051
  3764  06A4  2EA6               	goto	u6050
  3765  06A5                     u6051:
  3766  06A5  2EB5               	goto	l4005
  3767  06A6                     u6050:
  3768  06A6                     l4001:
  3769                           
  3770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3771  06A6  3003               	movlw	3
  3772  06A7  04B2               	iorwf	sprintf@flag^(0+128),f
  3773  06A8  3000               	movlw	0
  3774  06A9  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  3775  06AA                     l4003:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3778  06AA  09BA               	comf	sprintf@val^(0+128),f
  3779  06AB  09BB               	comf	(sprintf@val+1)^(0+128),f
  3780  06AC  09BC               	comf	(sprintf@val+2)^(0+128),f
  3781  06AD  09BD               	comf	(sprintf@val+3)^(0+128),f
  3782  06AE  0ABA               	incf	sprintf@val^(0+128),f
  3783  06AF  1903               	skipnz
  3784  06B0  0ABB               	incf	(sprintf@val+1)^(0+128),f
  3785  06B1  1903               	skipnz
  3786  06B2  0ABC               	incf	(sprintf@val+2)^(0+128),f
  3787  06B3  1903               	skipnz
  3788  06B4  0ABD               	incf	(sprintf@val+3)^(0+128),f
  3789  06B5                     l4005:
  3790                           
  3791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3792  06B5  0842               	movf	sprintf@prec^(0+128),w
  3793  06B6  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3794  06B7  1D03               	btfss	3,2
  3795  06B8  2EBA               	goto	u6061
  3796  06B9  2EBB               	goto	u6060
  3797  06BA                     u6061:
  3798  06BA  2EC9               	goto	l4011
  3799  06BB                     u6060:
  3800  06BB                     l4007:
  3801  06BB  083D               	movf	(sprintf@val+3)^(0+128),w
  3802  06BC  043C               	iorwf	(sprintf@val+2)^(0+128),w
  3803  06BD  043B               	iorwf	(sprintf@val+1)^(0+128),w
  3804  06BE  043A               	iorwf	sprintf@val^(0+128),w
  3805  06BF  1D03               	skipz
  3806  06C0  2EC2               	goto	u6071
  3807  06C1  2EC3               	goto	u6070
  3808  06C2                     u6071:
  3809  06C2  2EC9               	goto	l4011
  3810  06C3                     u6070:
  3811  06C3                     l4009:
  3812                           
  3813                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3814  06C3  3001               	movlw	1
  3815  06C4  07C2               	addwf	sprintf@prec^(0+128),f
  3816  06C5  1803               	skipnc
  3817  06C6  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3818  06C7  3000               	movlw	0
  3819  06C8  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3820  06C9                     l4011:
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3823  06C9  01C5               	clrf	sprintf@c^(0+128)
  3824  06CA  0AC5               	incf	sprintf@c^(0+128),f
  3825  06CB                     l4017:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3828  06CB  0845               	movf	sprintf@c^(0+128),w
  3829  06CC  00A8               	movwf	??_sprintf^(0+128)
  3830  06CD  3001               	movlw	1
  3831  06CE                     u6085:
  3832  06CE  1003               	clrc
  3833  06CF  0DA8               	rlf	??_sprintf^(0+128),f
  3834  06D0  3EFF               	addlw	-1
  3835  06D1  1D03               	skipz
  3836  06D2  2ECE               	goto	u6085
  3837  06D3  1003               	clrc
  3838  06D4  0D28               	rlf	??_sprintf^(0+128),w
  3839  06D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3840  06D6  0084               	movwf	4
  3841  06D7  160A  118A  200A  120A  118A  	fcall	stringdir
  3842  06DC  00A9               	movwf	(??_sprintf+1)^(0+128)
  3843  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3844  06E2  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3845  06E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3846  06E8  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3847  06E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3848  06EE  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3849  06EF  082C               	movf	(??_sprintf+4)^(0+128),w
  3850  06F0  023D               	subwf	(sprintf@val+3)^(0+128),w
  3851  06F1  1D03               	skipz
  3852  06F2  2EFD               	goto	u6095
  3853  06F3  082B               	movf	(??_sprintf+3)^(0+128),w
  3854  06F4  023C               	subwf	(sprintf@val+2)^(0+128),w
  3855  06F5  1D03               	skipz
  3856  06F6  2EFD               	goto	u6095
  3857  06F7  082A               	movf	(??_sprintf+2)^(0+128),w
  3858  06F8  023B               	subwf	(sprintf@val+1)^(0+128),w
  3859  06F9  1D03               	skipz
  3860  06FA  2EFD               	goto	u6095
  3861  06FB  0829               	movf	(??_sprintf+1)^(0+128),w
  3862  06FC  023A               	subwf	sprintf@val^(0+128),w
  3863  06FD                     u6095:
  3864  06FD  1803               	skipnc
  3865  06FE  2F00               	goto	u6091
  3866  06FF  2F01               	goto	u6090
  3867  0700                     u6091:
  3868  0700  2F02               	goto	l4021
  3869  0701                     u6090:
  3870  0701  2F0C               	goto	l4023
  3871  0702                     l4021:
  3872  0702  3001               	movlw	1
  3873  0703  00A8               	movwf	??_sprintf^(0+128)
  3874  0704  0828               	movf	??_sprintf^(0+128),w
  3875  0705  07C5               	addwf	sprintf@c^(0+128),f
  3876  0706  300A               	movlw	10
  3877  0707  0645               	xorwf	sprintf@c^(0+128),w
  3878  0708  1D03               	btfss	3,2
  3879  0709  2F0B               	goto	u6101
  3880  070A  2F0C               	goto	u6100
  3881  070B                     u6101:
  3882  070B  2ECB               	goto	l4017
  3883  070C                     u6100:
  3884  070C                     l4023:
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3887  070C  0843               	movf	(sprintf@prec+1)^(0+128),w
  3888  070D  3A80               	xorlw	128
  3889  070E  3C80               	sublw	128
  3890  070F  1D03               	skipz
  3891  0710  2F13               	goto	u6115
  3892  0711  0842               	movf	sprintf@prec^(0+128),w
  3893  0712  0245               	subwf	sprintf@c^(0+128),w
  3894  0713                     u6115:
  3895  0713  1803               	skipnc
  3896  0714  2F16               	goto	u6111
  3897  0715  2F17               	goto	u6110
  3898  0716                     u6111:
  3899  0716  2F18               	goto	l4027
  3900  0717                     u6110:
  3901  0717                     l4025:
  3902  0717  2F30               	goto	l4031
  3903  0718                     l4027:
  3904  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3905  0719  1303               	bcf	3,6	;RP1=0, select bank1
  3906  071A  0843               	movf	(sprintf@prec+1)^(0+128),w
  3907  071B  3A80               	xorlw	128
  3908  071C  00A8               	movwf	??_sprintf^(0+128)
  3909  071D  3080               	movlw	128
  3910  071E  0228               	subwf	??_sprintf^(0+128),w
  3911  071F  1D03               	skipz
  3912  0720  2F23               	goto	u6125
  3913  0721  0845               	movf	sprintf@c^(0+128),w
  3914  0722  0242               	subwf	sprintf@prec^(0+128),w
  3915  0723                     u6125:
  3916  0723  1803               	skipnc
  3917  0724  2F26               	goto	u6121
  3918  0725  2F27               	goto	u6120
  3919  0726                     u6121:
  3920  0726  2F30               	goto	l4031
  3921  0727                     u6120:
  3922  0727                     l4029:
  3923                           
  3924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3925  0727  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0728  1303               	bcf	3,6	;RP1=0, select bank1
  3927  0729  0845               	movf	sprintf@c^(0+128),w
  3928  072A  00A8               	movwf	??_sprintf^(0+128)
  3929  072B  01A9               	clrf	(??_sprintf^(0+128)+1)
  3930  072C  0828               	movf	??_sprintf^(0+128),w
  3931  072D  00C2               	movwf	sprintf@prec^(0+128)
  3932  072E  0829               	movf	(??_sprintf+1)^(0+128),w
  3933  072F  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3934  0730                     l4031:
  3935                           
  3936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3937  0730  3003               	movlw	3
  3938  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3939  0732  1303               	bcf	3,6	;RP1=0, select bank1
  3940  0733  0532               	andwf	sprintf@flag^(0+128),w
  3941  0734  00A8               	movwf	??_sprintf^(0+128)
  3942  0735  3000               	movlw	0
  3943  0736  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3944  0737  00A9               	movwf	(??_sprintf+1)^(0+128)
  3945  0738  0828               	movf	??_sprintf^(0+128),w
  3946  0739  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3947  073A  1903               	btfsc	3,2
  3948  073B  2F3D               	goto	u6131
  3949  073C  2F3E               	goto	u6130
  3950  073D                     u6131:
  3951  073D  2FA7               	goto	l4043
  3952  073E                     u6130:
  3953  073E                     l4033:
  3954                           
  3955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3956  073E  302D               	movlw	45
  3957  073F  00A8               	movwf	??_sprintf^(0+128)
  3958  0740  0844               	movf	sprintf@sp^(0+128),w
  3959  0741  0084               	movwf	4
  3960  0742  0828               	movf	??_sprintf^(0+128),w
  3961  0743  1783               	bsf	3,7	;select IRP bank2
  3962  0744  0080               	movwf	0
  3963  0745                     l4035:
  3964  0745  3001               	movlw	1
  3965  0746  00A8               	movwf	??_sprintf^(0+128)
  3966  0747  0828               	movf	??_sprintf^(0+128),w
  3967  0748  07C4               	addwf	sprintf@sp^(0+128),f
  3968  0749  2FA7               	goto	l4043
  3969  074A                     l4037:
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3972  074A  3000               	movlw	0
  3973  074B  1283               	bcf	3,5	;RP0=0, select bank0
  3974  074C  1303               	bcf	3,6	;RP1=0, select bank0
  3975  074D  00A8               	movwf	___llmod@divisor+3
  3976  074E  3000               	movlw	0
  3977  074F  00A7               	movwf	___llmod@divisor+2
  3978  0750  3000               	movlw	0
  3979  0751  00A6               	movwf	___llmod@divisor+1
  3980  0752  300A               	movlw	10
  3981  0753  00A5               	movwf	___llmod@divisor
  3982  0754  1683               	bsf	3,5	;RP0=1, select bank1
  3983  0755  1303               	bcf	3,6	;RP1=0, select bank1
  3984  0756  0842               	movf	sprintf@prec^(0+128),w
  3985  0757  00A8               	movwf	??_sprintf^(0+128)
  3986  0758  3001               	movlw	1
  3987  0759                     u6145:
  3988  0759  1003               	clrc
  3989  075A  0DA8               	rlf	??_sprintf^(0+128),f
  3990  075B  3EFF               	addlw	-1
  3991  075C  1D03               	skipz
  3992  075D  2F59               	goto	u6145
  3993  075E  1003               	clrc
  3994  075F  0D28               	rlf	??_sprintf^(0+128),w
  3995  0760  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3996  0761  0084               	movwf	4
  3997  0762  160A  118A  200A  120A  118A  	fcall	stringdir
  3998  0767  00F2               	movwf	___lldiv@divisor
  3999  0768  160A  118A  200A  120A  118A  	fcall	stringdir
  4000  076D  00F3               	movwf	___lldiv@divisor+1
  4001  076E  160A  118A  200A  120A  118A  	fcall	stringdir
  4002  0773  00F4               	movwf	___lldiv@divisor+2
  4003  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  4004  0779  00F5               	movwf	___lldiv@divisor+3
  4005  077A  083D               	movf	(sprintf@val+3)^(0+128),w
  4006  077B  00F9               	movwf	___lldiv@dividend+3
  4007  077C  083C               	movf	(sprintf@val+2)^(0+128),w
  4008  077D  00F8               	movwf	___lldiv@dividend+2
  4009  077E  083B               	movf	(sprintf@val+1)^(0+128),w
  4010  077F  00F7               	movwf	___lldiv@dividend+1
  4011  0780  083A               	movf	sprintf@val^(0+128),w
  4012  0781  00F6               	movwf	___lldiv@dividend
  4013  0782  160A  158A  2553  120A  118A  	fcall	___lldiv
  4014  0787  0875               	movf	?___lldiv+3,w
  4015  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4017  078A  00AC               	movwf	___llmod@dividend+3
  4018  078B  0874               	movf	?___lldiv+2,w
  4019  078C  00AB               	movwf	___llmod@dividend+2
  4020  078D  0873               	movf	?___lldiv+1,w
  4021  078E  00AA               	movwf	___llmod@dividend+1
  4022  078F  0872               	movf	?___lldiv,w
  4023  0790  00A9               	movwf	___llmod@dividend
  4024  0791  160A  158A  24A4  120A  118A  	fcall	___llmod
  4025  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0798  0825               	movf	?___llmod,w
  4028  0799  3E30               	addlw	48
  4029  079A  1683               	bsf	3,5	;RP0=1, select bank1
  4030  079B  1303               	bcf	3,6	;RP1=0, select bank1
  4031  079C  00A9               	movwf	(??_sprintf+1)^(0+128)
  4032  079D  0829               	movf	(??_sprintf+1)^(0+128),w
  4033  079E  00C5               	movwf	sprintf@c^(0+128)
  4034  079F                     l4039:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4037  079F  0845               	movf	sprintf@c^(0+128),w
  4038  07A0  00A8               	movwf	??_sprintf^(0+128)
  4039  07A1  0844               	movf	sprintf@sp^(0+128),w
  4040  07A2  0084               	movwf	4
  4041  07A3  0828               	movf	??_sprintf^(0+128),w
  4042  07A4  1783               	bsf	3,7	;select IRP bank2
  4043  07A5  0080               	movwf	0
  4044  07A6  2F45               	goto	l4035
  4045  07A7                     l4043:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4048  07A7  30FF               	movlw	255
  4049  07A8  07C2               	addwf	sprintf@prec^(0+128),f
  4050  07A9  1803               	skipnc
  4051  07AA  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4052  07AB  30FF               	movlw	255
  4053  07AC  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4054  07AD  0A42               	incf	sprintf@prec^(0+128),w
  4055  07AE  1D03               	skipz
  4056  07AF  2FB4               	goto	u6151
  4057  07B0  0A43               	incf	(sprintf@prec+1)^(0+128),w
  4058  07B1  1D03               	btfss	3,2
  4059  07B2  2FB4               	goto	u6151
  4060  07B3  2FB5               	goto	u6150
  4061  07B4                     u6151:
  4062  07B4  2F4A               	goto	l4037
  4063  07B5                     u6150:
  4064  07B5                     l4045:
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4067  07B5  3001               	movlw	1
  4068  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4069  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4070  07B8  07EA               	addwf	sprintf@f,f
  4071  07B9  30FF               	movlw	-1
  4072  07BA  076A               	addwf	sprintf@f,w
  4073  07BB  0084               	movwf	4
  4074  07BC  160A  118A  200A  120A  118A  	fcall	stringdir
  4075  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  4076  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  4077  07C3  00A8               	movwf	??_sprintf^(0+128)
  4078  07C4  0828               	movf	??_sprintf^(0+128),w
  4079  07C5  00C5               	movwf	sprintf@c^(0+128)
  4080  07C6  0845               	movf	sprintf@c^(0+128),w
  4081  07C7  1D03               	btfss	3,2
  4082  07C8  2FCA               	goto	u6161
  4083  07C9  2FCB               	goto	u6160
  4084  07CA                     u6161:
  4085  07CA  282E               	goto	l3821
  4086  07CB                     u6160:
  4087  07CB                     l4047:
  4088                           
  4089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4090  07CB  0844               	movf	sprintf@sp^(0+128),w
  4091  07CC  0084               	movwf	4
  4092  07CD  1783               	bsf	3,7	;select IRP bank2
  4093  07CE  0180               	clrf	0
  4094  07CF                     l430:
  4095  07CF  0008               	return
  4096  07D0                     __end_of_sprintf:
  4097                           
  4098                           	psect	text3
  4099  0C9D                     __ptext3:	
  4100 ;; *************** function _scale *****************
  4101 ;; Defined at:
  4102 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  scl             1    wreg     char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  scl             1   52[BANK0 ] char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  4   34[BANK0 ] char 
  4109 ;; Registers used:
  4110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4116 ;;      Params:         0       4       0       0       0
  4117 ;;      Locals:         0       5       0       0       0
  4118 ;;      Temps:          0      10       0       0       0
  4119 ;;      Totals:         0      19       0       0       0
  4120 ;;Total ram usage:       19 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    3
  4123 ;; This function calls:
  4124 ;;		___awdiv
  4125 ;;		___awmod
  4126 ;;		___flmul
  4127 ;; This function is called by:
  4128 ;;		_sprintf
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           
  4133                           ;psect for function _scale
  4134  0C9D                     _scale:
  4135                           
  4136                           ;incstack = 0
  4137                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4138                           ;scale@scl stored from wreg
  4139  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4140  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4141  0C9F  00D4               	movwf	scale@scl
  4142  0CA0                     l2901:
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4145  0CA0  1FD4               	btfss	scale@scl,7
  4146  0CA1  2CA3               	goto	u4081
  4147  0CA2  2CA4               	goto	u4080
  4148  0CA3                     u4081:
  4149  0CA3  2E53               	goto	l2923
  4150  0CA4                     u4080:
  4151  0CA4                     l2903:
  4152                           
  4153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4154  0CA4  09D4               	comf	scale@scl,f
  4155  0CA5  0AD4               	incf	scale@scl,f
  4156  0CA6                     l2905:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4159  0CA6  0854               	movf	scale@scl,w
  4160  0CA7  3A80               	xorlw	128
  4161  0CA8  3E12               	addlw	-238
  4162  0CA9  1C03               	skipc
  4163  0CAA  2CAC               	goto	u4091
  4164  0CAB  2CAD               	goto	u4090
  4165  0CAC                     u4091:
  4166  0CAC  2D97               	goto	l2913
  4167  0CAD                     u4090:
  4168  0CAD                     l2907:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4171  0CAD  300A               	movlw	10
  4172  0CAE  00A0               	movwf	___awdiv@divisor
  4173  0CAF  3000               	movlw	0
  4174  0CB0  00A1               	movwf	___awdiv@divisor+1
  4175  0CB1  0854               	movf	scale@scl,w
  4176  0CB2  00F4               	movwf	___awmod@dividend
  4177  0CB3  01F5               	clrf	___awmod@dividend+1
  4178  0CB4  1BF4               	btfsc	___awmod@dividend,7
  4179  0CB5  03F5               	decf	___awmod@dividend+1,f
  4180  0CB6  3064               	movlw	100
  4181  0CB7  00F2               	movwf	___awmod@divisor
  4182  0CB8  3000               	movlw	0
  4183  0CB9  00F3               	movwf	___awmod@divisor+1
  4184  0CBA  160A  158A  24FA  120A  158A  	fcall	___awmod
  4185  0CBF  0873               	movf	?___awmod+1,w
  4186  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0CC2  00A3               	movwf	___awdiv@dividend+1
  4189  0CC3  0872               	movf	?___awmod,w
  4190  0CC4  00A2               	movwf	___awdiv@dividend
  4191  0CC5  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4192  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4193  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4194  0CCC  0820               	movf	?___awdiv,w
  4195  0CCD  00C6               	movwf	??_scale
  4196  0CCE  3001               	movlw	1
  4197  0CCF                     u4105:
  4198  0CCF  1003               	clrc
  4199  0CD0  0DC6               	rlf	??_scale,f
  4200  0CD1  3EFF               	addlw	-1
  4201  0CD2  1D03               	skipz
  4202  0CD3  2CCF               	goto	u4105
  4203  0CD4  1003               	clrc
  4204  0CD5  0D46               	rlf	??_scale,w
  4205  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4206  0CD7  0084               	movwf	4
  4207  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  4208  0CDD  00C7               	movwf	??_scale+1
  4209  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  4210  0CE3  00C8               	movwf	??_scale+2
  4211  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  4212  0CE9  00C9               	movwf	??_scale+3
  4213  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  4214  0CEF  00CA               	movwf	??_scale+4
  4215  0CF0  084A               	movf	??_scale+4,w
  4216  0CF1  00AB               	movwf	___flmul@b+3
  4217  0CF2  0849               	movf	??_scale+3,w
  4218  0CF3  00AA               	movwf	___flmul@b+2
  4219  0CF4  0848               	movf	??_scale+2,w
  4220  0CF5  00A9               	movwf	___flmul@b+1
  4221  0CF6  0847               	movf	??_scale+1,w
  4222  0CF7  00A8               	movwf	___flmul@b
  4223  0CF8  3064               	movlw	100
  4224  0CF9  00A0               	movwf	___awdiv@divisor
  4225  0CFA  3000               	movlw	0
  4226  0CFB  00A1               	movwf	___awdiv@divisor+1
  4227  0CFC  0854               	movf	scale@scl,w
  4228  0CFD  00A2               	movwf	___awdiv@dividend
  4229  0CFE  01A3               	clrf	___awdiv@dividend+1
  4230  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4231  0D00  03A3               	decf	___awdiv@dividend+1,f
  4232  0D01  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4233  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4235  0D08  0820               	movf	?___awdiv,w
  4236  0D09  00CB               	movwf	??_scale+5
  4237  0D0A  3001               	movlw	1
  4238  0D0B                     u4115:
  4239  0D0B  1003               	clrc
  4240  0D0C  0DCB               	rlf	??_scale+5,f
  4241  0D0D  3EFF               	addlw	-1
  4242  0D0E  1D03               	skipz
  4243  0D0F  2D0B               	goto	u4115
  4244  0D10  1003               	clrc
  4245  0D11  0D4B               	rlf	??_scale+5,w
  4246  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4247  0D13  0084               	movwf	4
  4248  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  4249  0D19  00CC               	movwf	??_scale+6
  4250  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4251  0D1F  00CD               	movwf	??_scale+7
  4252  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  4253  0D25  00CE               	movwf	??_scale+8
  4254  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  4255  0D2B  00CF               	movwf	??_scale+9
  4256  0D2C  084F               	movf	??_scale+9,w
  4257  0D2D  00AF               	movwf	___flmul@a+3
  4258  0D2E  084E               	movf	??_scale+8,w
  4259  0D2F  00AE               	movwf	___flmul@a+2
  4260  0D30  084D               	movf	??_scale+7,w
  4261  0D31  00AD               	movwf	___flmul@a+1
  4262  0D32  084C               	movf	??_scale+6,w
  4263  0D33  00AC               	movwf	___flmul@a
  4264  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4265  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0D3B  082B               	movf	?___flmul+3,w
  4268  0D3C  00D3               	movwf	_scale$1309+3
  4269  0D3D  082A               	movf	?___flmul+2,w
  4270  0D3E  00D2               	movwf	_scale$1309+2
  4271  0D3F  0829               	movf	?___flmul+1,w
  4272  0D40  00D1               	movwf	_scale$1309+1
  4273  0D41  0828               	movf	?___flmul,w
  4274  0D42  00D0               	movwf	_scale$1309
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4277  0D43  300A               	movlw	10
  4278  0D44  00F2               	movwf	___awmod@divisor
  4279  0D45  3000               	movlw	0
  4280  0D46  00F3               	movwf	___awmod@divisor+1
  4281  0D47  0854               	movf	scale@scl,w
  4282  0D48  00F4               	movwf	___awmod@dividend
  4283  0D49  01F5               	clrf	___awmod@dividend+1
  4284  0D4A  1BF4               	btfsc	___awmod@dividend,7
  4285  0D4B  03F5               	decf	___awmod@dividend+1,f
  4286  0D4C  160A  158A  24FA  120A  158A  	fcall	___awmod
  4287  0D51  0872               	movf	?___awmod,w
  4288  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0D54  00C6               	movwf	??_scale
  4291  0D55  3001               	movlw	1
  4292  0D56                     u4125:
  4293  0D56  1003               	clrc
  4294  0D57  0DC6               	rlf	??_scale,f
  4295  0D58  3EFF               	addlw	-1
  4296  0D59  1D03               	skipz
  4297  0D5A  2D56               	goto	u4125
  4298  0D5B  1003               	clrc
  4299  0D5C  0D46               	rlf	??_scale,w
  4300  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4301  0D5E  0084               	movwf	4
  4302  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4303  0D64  00C7               	movwf	??_scale+1
  4304  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  4305  0D6A  00C8               	movwf	??_scale+2
  4306  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4307  0D70  00C9               	movwf	??_scale+3
  4308  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  4309  0D76  00CA               	movwf	??_scale+4
  4310  0D77  084A               	movf	??_scale+4,w
  4311  0D78  00AB               	movwf	___flmul@b+3
  4312  0D79  0849               	movf	??_scale+3,w
  4313  0D7A  00AA               	movwf	___flmul@b+2
  4314  0D7B  0848               	movf	??_scale+2,w
  4315  0D7C  00A9               	movwf	___flmul@b+1
  4316  0D7D  0847               	movf	??_scale+1,w
  4317  0D7E  00A8               	movwf	___flmul@b
  4318  0D7F  0853               	movf	_scale$1309+3,w
  4319  0D80  00AF               	movwf	___flmul@a+3
  4320  0D81  0852               	movf	_scale$1309+2,w
  4321  0D82  00AE               	movwf	___flmul@a+2
  4322  0D83  0851               	movf	_scale$1309+1,w
  4323  0D84  00AD               	movwf	___flmul@a+1
  4324  0D85  0850               	movf	_scale$1309,w
  4325  0D86  00AC               	movwf	___flmul@a
  4326  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4327  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0D8E  082B               	movf	?___flmul+3,w
  4330  0D8F  00C5               	movwf	?_scale+3
  4331  0D90  082A               	movf	?___flmul+2,w
  4332  0D91  00C4               	movwf	?_scale+2
  4333  0D92  0829               	movf	?___flmul+1,w
  4334  0D93  00C3               	movwf	?_scale+1
  4335  0D94  0828               	movf	?___flmul,w
  4336  0D95  00C2               	movwf	?_scale
  4337  0D96  2FFF               	goto	l355
  4338  0D97                     l2913:
  4339  0D97  0854               	movf	scale@scl,w
  4340  0D98  3A80               	xorlw	128
  4341  0D99  3E75               	addlw	-139
  4342  0D9A  1C03               	skipc
  4343  0D9B  2D9D               	goto	u4131
  4344  0D9C  2D9E               	goto	u4130
  4345  0D9D                     u4131:
  4346  0D9D  2E26               	goto	l2919
  4347  0D9E                     u4130:
  4348  0D9E                     l2915:
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4351  0D9E  300A               	movlw	10
  4352  0D9F  00F2               	movwf	___awmod@divisor
  4353  0DA0  3000               	movlw	0
  4354  0DA1  00F3               	movwf	___awmod@divisor+1
  4355  0DA2  0854               	movf	scale@scl,w
  4356  0DA3  00F4               	movwf	___awmod@dividend
  4357  0DA4  01F5               	clrf	___awmod@dividend+1
  4358  0DA5  1BF4               	btfsc	___awmod@dividend,7
  4359  0DA6  03F5               	decf	___awmod@dividend+1,f
  4360  0DA7  160A  158A  24FA  120A  158A  	fcall	___awmod
  4361  0DAC  0872               	movf	?___awmod,w
  4362  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4363  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4364  0DAF  00C6               	movwf	??_scale
  4365  0DB0  3001               	movlw	1
  4366  0DB1                     u4145:
  4367  0DB1  1003               	clrc
  4368  0DB2  0DC6               	rlf	??_scale,f
  4369  0DB3  3EFF               	addlw	-1
  4370  0DB4  1D03               	skipz
  4371  0DB5  2DB1               	goto	u4145
  4372  0DB6  1003               	clrc
  4373  0DB7  0D46               	rlf	??_scale,w
  4374  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4375  0DB9  0084               	movwf	4
  4376  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4377  0DBF  00C7               	movwf	??_scale+1
  4378  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  4379  0DC5  00C8               	movwf	??_scale+2
  4380  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  4381  0DCB  00C9               	movwf	??_scale+3
  4382  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  4383  0DD1  00CA               	movwf	??_scale+4
  4384  0DD2  084A               	movf	??_scale+4,w
  4385  0DD3  00AB               	movwf	___flmul@b+3
  4386  0DD4  0849               	movf	??_scale+3,w
  4387  0DD5  00AA               	movwf	___flmul@b+2
  4388  0DD6  0848               	movf	??_scale+2,w
  4389  0DD7  00A9               	movwf	___flmul@b+1
  4390  0DD8  0847               	movf	??_scale+1,w
  4391  0DD9  00A8               	movwf	___flmul@b
  4392  0DDA  300A               	movlw	10
  4393  0DDB  00A0               	movwf	___awdiv@divisor
  4394  0DDC  3000               	movlw	0
  4395  0DDD  00A1               	movwf	___awdiv@divisor+1
  4396  0DDE  0854               	movf	scale@scl,w
  4397  0DDF  00A2               	movwf	___awdiv@dividend
  4398  0DE0  01A3               	clrf	___awdiv@dividend+1
  4399  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4400  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4401  0DE3  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4402  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4403  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4404  0DEA  0820               	movf	?___awdiv,w
  4405  0DEB  00CB               	movwf	??_scale+5
  4406  0DEC  3001               	movlw	1
  4407  0DED                     u4155:
  4408  0DED  1003               	clrc
  4409  0DEE  0DCB               	rlf	??_scale+5,f
  4410  0DEF  3EFF               	addlw	-1
  4411  0DF0  1D03               	skipz
  4412  0DF1  2DED               	goto	u4155
  4413  0DF2  1003               	clrc
  4414  0DF3  0D4B               	rlf	??_scale+5,w
  4415  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4416  0DF5  0084               	movwf	4
  4417  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4418  0DFB  00CC               	movwf	??_scale+6
  4419  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4420  0E01  00CD               	movwf	??_scale+7
  4421  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4422  0E07  00CE               	movwf	??_scale+8
  4423  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4424  0E0D  00CF               	movwf	??_scale+9
  4425  0E0E  084F               	movf	??_scale+9,w
  4426  0E0F  00AF               	movwf	___flmul@a+3
  4427  0E10  084E               	movf	??_scale+8,w
  4428  0E11  00AE               	movwf	___flmul@a+2
  4429  0E12  084D               	movf	??_scale+7,w
  4430  0E13  00AD               	movwf	___flmul@a+1
  4431  0E14  084C               	movf	??_scale+6,w
  4432  0E15  00AC               	movwf	___flmul@a
  4433  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4434  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4436  0E1D  082B               	movf	?___flmul+3,w
  4437  0E1E  00C5               	movwf	?_scale+3
  4438  0E1F  082A               	movf	?___flmul+2,w
  4439  0E20  00C4               	movwf	?_scale+2
  4440  0E21  0829               	movf	?___flmul+1,w
  4441  0E22  00C3               	movwf	?_scale+1
  4442  0E23  0828               	movf	?___flmul,w
  4443  0E24  00C2               	movwf	?_scale
  4444  0E25  2FFF               	goto	l355
  4445  0E26                     l2919:
  4446                           
  4447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4448  0E26  0854               	movf	scale@scl,w
  4449  0E27  00C6               	movwf	??_scale
  4450  0E28  3001               	movlw	1
  4451  0E29                     u4165:
  4452  0E29  1003               	clrc
  4453  0E2A  0DC6               	rlf	??_scale,f
  4454  0E2B  3EFF               	addlw	-1
  4455  0E2C  1D03               	skipz
  4456  0E2D  2E29               	goto	u4165
  4457  0E2E  1003               	clrc
  4458  0E2F  0D46               	rlf	??_scale,w
  4459  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4460  0E31  0084               	movwf	4
  4461  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4462  0E37  00C7               	movwf	??_scale+1
  4463  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4464  0E3D  00C8               	movwf	??_scale+2
  4465  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4466  0E43  00C9               	movwf	??_scale+3
  4467  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4468  0E49  00CA               	movwf	??_scale+4
  4469  0E4A  084A               	movf	??_scale+4,w
  4470  0E4B  00C5               	movwf	?_scale+3
  4471  0E4C  0849               	movf	??_scale+3,w
  4472  0E4D  00C4               	movwf	?_scale+2
  4473  0E4E  0848               	movf	??_scale+2,w
  4474  0E4F  00C3               	movwf	?_scale+1
  4475  0E50  0847               	movf	??_scale+1,w
  4476  0E51  00C2               	movwf	?_scale
  4477  0E52  2FFF               	goto	l355
  4478  0E53                     l2923:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4481  0E53  0854               	movf	scale@scl,w
  4482  0E54  3A80               	xorlw	128
  4483  0E55  3E12               	addlw	-238
  4484  0E56  1C03               	skipc
  4485  0E57  2E59               	goto	u4171
  4486  0E58  2E5A               	goto	u4170
  4487  0E59                     u4171:
  4488  0E59  2F44               	goto	l2931
  4489  0E5A                     u4170:
  4490  0E5A                     l2925:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4493  0E5A  300A               	movlw	10
  4494  0E5B  00A0               	movwf	___awdiv@divisor
  4495  0E5C  3000               	movlw	0
  4496  0E5D  00A1               	movwf	___awdiv@divisor+1
  4497  0E5E  0854               	movf	scale@scl,w
  4498  0E5F  00F4               	movwf	___awmod@dividend
  4499  0E60  01F5               	clrf	___awmod@dividend+1
  4500  0E61  1BF4               	btfsc	___awmod@dividend,7
  4501  0E62  03F5               	decf	___awmod@dividend+1,f
  4502  0E63  3064               	movlw	100
  4503  0E64  00F2               	movwf	___awmod@divisor
  4504  0E65  3000               	movlw	0
  4505  0E66  00F3               	movwf	___awmod@divisor+1
  4506  0E67  160A  158A  24FA  120A  158A  	fcall	___awmod
  4507  0E6C  0873               	movf	?___awmod+1,w
  4508  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4509  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4510  0E6F  00A3               	movwf	___awdiv@dividend+1
  4511  0E70  0872               	movf	?___awmod,w
  4512  0E71  00A2               	movwf	___awdiv@dividend
  4513  0E72  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4514  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4515  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4516  0E79  0820               	movf	?___awdiv,w
  4517  0E7A  00C6               	movwf	??_scale
  4518  0E7B  3001               	movlw	1
  4519  0E7C                     u4185:
  4520  0E7C  1003               	clrc
  4521  0E7D  0DC6               	rlf	??_scale,f
  4522  0E7E  3EFF               	addlw	-1
  4523  0E7F  1D03               	skipz
  4524  0E80  2E7C               	goto	u4185
  4525  0E81  1003               	clrc
  4526  0E82  0D46               	rlf	??_scale,w
  4527  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4528  0E84  0084               	movwf	4
  4529  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4530  0E8A  00C7               	movwf	??_scale+1
  4531  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4532  0E90  00C8               	movwf	??_scale+2
  4533  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4534  0E96  00C9               	movwf	??_scale+3
  4535  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4536  0E9C  00CA               	movwf	??_scale+4
  4537  0E9D  084A               	movf	??_scale+4,w
  4538  0E9E  00AB               	movwf	___flmul@b+3
  4539  0E9F  0849               	movf	??_scale+3,w
  4540  0EA0  00AA               	movwf	___flmul@b+2
  4541  0EA1  0848               	movf	??_scale+2,w
  4542  0EA2  00A9               	movwf	___flmul@b+1
  4543  0EA3  0847               	movf	??_scale+1,w
  4544  0EA4  00A8               	movwf	___flmul@b
  4545  0EA5  3064               	movlw	100
  4546  0EA6  00A0               	movwf	___awdiv@divisor
  4547  0EA7  3000               	movlw	0
  4548  0EA8  00A1               	movwf	___awdiv@divisor+1
  4549  0EA9  0854               	movf	scale@scl,w
  4550  0EAA  00A2               	movwf	___awdiv@dividend
  4551  0EAB  01A3               	clrf	___awdiv@dividend+1
  4552  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4553  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4554  0EAE  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4555  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0EB5  0820               	movf	?___awdiv,w
  4558  0EB6  00CB               	movwf	??_scale+5
  4559  0EB7  3001               	movlw	1
  4560  0EB8                     u4195:
  4561  0EB8  1003               	clrc
  4562  0EB9  0DCB               	rlf	??_scale+5,f
  4563  0EBA  3EFF               	addlw	-1
  4564  0EBB  1D03               	skipz
  4565  0EBC  2EB8               	goto	u4195
  4566  0EBD  1003               	clrc
  4567  0EBE  0D4B               	rlf	??_scale+5,w
  4568  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4569  0EC0  0084               	movwf	4
  4570  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4571  0EC6  00CC               	movwf	??_scale+6
  4572  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4573  0ECC  00CD               	movwf	??_scale+7
  4574  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4575  0ED2  00CE               	movwf	??_scale+8
  4576  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4577  0ED8  00CF               	movwf	??_scale+9
  4578  0ED9  084F               	movf	??_scale+9,w
  4579  0EDA  00AF               	movwf	___flmul@a+3
  4580  0EDB  084E               	movf	??_scale+8,w
  4581  0EDC  00AE               	movwf	___flmul@a+2
  4582  0EDD  084D               	movf	??_scale+7,w
  4583  0EDE  00AD               	movwf	___flmul@a+1
  4584  0EDF  084C               	movf	??_scale+6,w
  4585  0EE0  00AC               	movwf	___flmul@a
  4586  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4587  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4588  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4589  0EE8  082B               	movf	?___flmul+3,w
  4590  0EE9  00D3               	movwf	_scale$1309+3
  4591  0EEA  082A               	movf	?___flmul+2,w
  4592  0EEB  00D2               	movwf	_scale$1309+2
  4593  0EEC  0829               	movf	?___flmul+1,w
  4594  0EED  00D1               	movwf	_scale$1309+1
  4595  0EEE  0828               	movf	?___flmul,w
  4596  0EEF  00D0               	movwf	_scale$1309
  4597                           
  4598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4599  0EF0  300A               	movlw	10
  4600  0EF1  00F2               	movwf	___awmod@divisor
  4601  0EF2  3000               	movlw	0
  4602  0EF3  00F3               	movwf	___awmod@divisor+1
  4603  0EF4  0854               	movf	scale@scl,w
  4604  0EF5  00F4               	movwf	___awmod@dividend
  4605  0EF6  01F5               	clrf	___awmod@dividend+1
  4606  0EF7  1BF4               	btfsc	___awmod@dividend,7
  4607  0EF8  03F5               	decf	___awmod@dividend+1,f
  4608  0EF9  160A  158A  24FA  120A  158A  	fcall	___awmod
  4609  0EFE  0872               	movf	?___awmod,w
  4610  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0F01  00C6               	movwf	??_scale
  4613  0F02  3001               	movlw	1
  4614  0F03                     u4205:
  4615  0F03  1003               	clrc
  4616  0F04  0DC6               	rlf	??_scale,f
  4617  0F05  3EFF               	addlw	-1
  4618  0F06  1D03               	skipz
  4619  0F07  2F03               	goto	u4205
  4620  0F08  1003               	clrc
  4621  0F09  0D46               	rlf	??_scale,w
  4622  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4623  0F0B  0084               	movwf	4
  4624  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4625  0F11  00C7               	movwf	??_scale+1
  4626  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4627  0F17  00C8               	movwf	??_scale+2
  4628  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4629  0F1D  00C9               	movwf	??_scale+3
  4630  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4631  0F23  00CA               	movwf	??_scale+4
  4632  0F24  084A               	movf	??_scale+4,w
  4633  0F25  00AB               	movwf	___flmul@b+3
  4634  0F26  0849               	movf	??_scale+3,w
  4635  0F27  00AA               	movwf	___flmul@b+2
  4636  0F28  0848               	movf	??_scale+2,w
  4637  0F29  00A9               	movwf	___flmul@b+1
  4638  0F2A  0847               	movf	??_scale+1,w
  4639  0F2B  00A8               	movwf	___flmul@b
  4640  0F2C  0853               	movf	_scale$1309+3,w
  4641  0F2D  00AF               	movwf	___flmul@a+3
  4642  0F2E  0852               	movf	_scale$1309+2,w
  4643  0F2F  00AE               	movwf	___flmul@a+2
  4644  0F30  0851               	movf	_scale$1309+1,w
  4645  0F31  00AD               	movwf	___flmul@a+1
  4646  0F32  0850               	movf	_scale$1309,w
  4647  0F33  00AC               	movwf	___flmul@a
  4648  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4649  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0F3B  082B               	movf	?___flmul+3,w
  4652  0F3C  00C5               	movwf	?_scale+3
  4653  0F3D  082A               	movf	?___flmul+2,w
  4654  0F3E  00C4               	movwf	?_scale+2
  4655  0F3F  0829               	movf	?___flmul+1,w
  4656  0F40  00C3               	movwf	?_scale+1
  4657  0F41  0828               	movf	?___flmul,w
  4658  0F42  00C2               	movwf	?_scale
  4659  0F43  2FFF               	goto	l355
  4660  0F44                     l2931:
  4661  0F44  0854               	movf	scale@scl,w
  4662  0F45  3A80               	xorlw	128
  4663  0F46  3E75               	addlw	-139
  4664  0F47  1C03               	skipc
  4665  0F48  2F4A               	goto	u4211
  4666  0F49  2F4B               	goto	u4210
  4667  0F4A                     u4211:
  4668  0F4A  2FD3               	goto	l2937
  4669  0F4B                     u4210:
  4670  0F4B                     l2933:
  4671                           
  4672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4673  0F4B  300A               	movlw	10
  4674  0F4C  00F2               	movwf	___awmod@divisor
  4675  0F4D  3000               	movlw	0
  4676  0F4E  00F3               	movwf	___awmod@divisor+1
  4677  0F4F  0854               	movf	scale@scl,w
  4678  0F50  00F4               	movwf	___awmod@dividend
  4679  0F51  01F5               	clrf	___awmod@dividend+1
  4680  0F52  1BF4               	btfsc	___awmod@dividend,7
  4681  0F53  03F5               	decf	___awmod@dividend+1,f
  4682  0F54  160A  158A  24FA  120A  158A  	fcall	___awmod
  4683  0F59  0872               	movf	?___awmod,w
  4684  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0F5C  00C6               	movwf	??_scale
  4687  0F5D  3001               	movlw	1
  4688  0F5E                     u4225:
  4689  0F5E  1003               	clrc
  4690  0F5F  0DC6               	rlf	??_scale,f
  4691  0F60  3EFF               	addlw	-1
  4692  0F61  1D03               	skipz
  4693  0F62  2F5E               	goto	u4225
  4694  0F63  1003               	clrc
  4695  0F64  0D46               	rlf	??_scale,w
  4696  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4697  0F66  0084               	movwf	4
  4698  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4699  0F6C  00C7               	movwf	??_scale+1
  4700  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4701  0F72  00C8               	movwf	??_scale+2
  4702  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4703  0F78  00C9               	movwf	??_scale+3
  4704  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4705  0F7E  00CA               	movwf	??_scale+4
  4706  0F7F  084A               	movf	??_scale+4,w
  4707  0F80  00AB               	movwf	___flmul@b+3
  4708  0F81  0849               	movf	??_scale+3,w
  4709  0F82  00AA               	movwf	___flmul@b+2
  4710  0F83  0848               	movf	??_scale+2,w
  4711  0F84  00A9               	movwf	___flmul@b+1
  4712  0F85  0847               	movf	??_scale+1,w
  4713  0F86  00A8               	movwf	___flmul@b
  4714  0F87  300A               	movlw	10
  4715  0F88  00A0               	movwf	___awdiv@divisor
  4716  0F89  3000               	movlw	0
  4717  0F8A  00A1               	movwf	___awdiv@divisor+1
  4718  0F8B  0854               	movf	scale@scl,w
  4719  0F8C  00A2               	movwf	___awdiv@dividend
  4720  0F8D  01A3               	clrf	___awdiv@dividend+1
  4721  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4722  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4723  0F90  160A  158A  25BB  120A  158A  	fcall	___awdiv
  4724  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0F97  0820               	movf	?___awdiv,w
  4727  0F98  00CB               	movwf	??_scale+5
  4728  0F99  3001               	movlw	1
  4729  0F9A                     u4235:
  4730  0F9A  1003               	clrc
  4731  0F9B  0DCB               	rlf	??_scale+5,f
  4732  0F9C  3EFF               	addlw	-1
  4733  0F9D  1D03               	skipz
  4734  0F9E  2F9A               	goto	u4235
  4735  0F9F  1003               	clrc
  4736  0FA0  0D4B               	rlf	??_scale+5,w
  4737  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4738  0FA2  0084               	movwf	4
  4739  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4740  0FA8  00CC               	movwf	??_scale+6
  4741  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4742  0FAE  00CD               	movwf	??_scale+7
  4743  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4744  0FB4  00CE               	movwf	??_scale+8
  4745  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4746  0FBA  00CF               	movwf	??_scale+9
  4747  0FBB  084F               	movf	??_scale+9,w
  4748  0FBC  00AF               	movwf	___flmul@a+3
  4749  0FBD  084E               	movf	??_scale+8,w
  4750  0FBE  00AE               	movwf	___flmul@a+2
  4751  0FBF  084D               	movf	??_scale+7,w
  4752  0FC0  00AD               	movwf	___flmul@a+1
  4753  0FC1  084C               	movf	??_scale+6,w
  4754  0FC2  00AC               	movwf	___flmul@a
  4755  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4756  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0FCA  082B               	movf	?___flmul+3,w
  4759  0FCB  00C5               	movwf	?_scale+3
  4760  0FCC  082A               	movf	?___flmul+2,w
  4761  0FCD  00C4               	movwf	?_scale+2
  4762  0FCE  0829               	movf	?___flmul+1,w
  4763  0FCF  00C3               	movwf	?_scale+1
  4764  0FD0  0828               	movf	?___flmul,w
  4765  0FD1  00C2               	movwf	?_scale
  4766  0FD2  2FFF               	goto	l355
  4767  0FD3                     l2937:
  4768                           
  4769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4770  0FD3  0854               	movf	scale@scl,w
  4771  0FD4  00C6               	movwf	??_scale
  4772  0FD5  3001               	movlw	1
  4773  0FD6                     u4245:
  4774  0FD6  1003               	clrc
  4775  0FD7  0DC6               	rlf	??_scale,f
  4776  0FD8  3EFF               	addlw	-1
  4777  0FD9  1D03               	skipz
  4778  0FDA  2FD6               	goto	u4245
  4779  0FDB  1003               	clrc
  4780  0FDC  0D46               	rlf	??_scale,w
  4781  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4782  0FDE  0084               	movwf	4
  4783  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4784  0FE4  00C7               	movwf	??_scale+1
  4785  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4786  0FEA  00C8               	movwf	??_scale+2
  4787  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4788  0FF0  00C9               	movwf	??_scale+3
  4789  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4790  0FF6  00CA               	movwf	??_scale+4
  4791  0FF7  084A               	movf	??_scale+4,w
  4792  0FF8  00C5               	movwf	?_scale+3
  4793  0FF9  0849               	movf	??_scale+3,w
  4794  0FFA  00C4               	movwf	?_scale+2
  4795  0FFB  0848               	movf	??_scale+2,w
  4796  0FFC  00C3               	movwf	?_scale+1
  4797  0FFD  0847               	movf	??_scale+1,w
  4798  0FFE  00C2               	movwf	?_scale
  4799  0FFF                     l355:
  4800  0FFF  0008               	return
  4801  1000                     __end_of_scale:
  4802                           
  4803                           	psect	text4
  4804  1CFA                     __ptext4:	
  4805 ;; *************** function ___awmod *****************
  4806 ;; Defined at:
  4807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4808 ;; Parameters:    Size  Location     Type
  4809 ;;  divisor         2    2[COMMON] int 
  4810 ;;  dividend        2    4[COMMON] int 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  sign            1    8[COMMON] unsigned char 
  4813 ;;  counter         1    7[COMMON] unsigned char 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2    2[COMMON] int 
  4816 ;; Registers used:
  4817 ;;		wreg, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4823 ;;      Params:         4       0       0       0       0
  4824 ;;      Locals:         2       0       0       0       0
  4825 ;;      Temps:          1       0       0       0       0
  4826 ;;      Totals:         7       0       0       0       0
  4827 ;;Total ram usage:        7 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:    1
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_scale
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           
  4838                           ;psect for function ___awmod
  4839  1CFA                     ___awmod:
  4840  1CFA                     l2453:	
  4841                           ;incstack = 0
  4842                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4843                           
  4844  1CFA  01F8               	clrf	___awmod@sign
  4845  1CFB                     l2455:
  4846  1CFB  1FF5               	btfss	___awmod@dividend+1,7
  4847  1CFC  2CFE               	goto	u2921
  4848  1CFD  2CFF               	goto	u2920
  4849  1CFE                     u2921:
  4850  1CFE  2D06               	goto	l2461
  4851  1CFF                     u2920:
  4852  1CFF                     l2457:
  4853  1CFF  09F4               	comf	___awmod@dividend,f
  4854  1D00  09F5               	comf	___awmod@dividend+1,f
  4855  1D01  0AF4               	incf	___awmod@dividend,f
  4856  1D02  1903               	skipnz
  4857  1D03  0AF5               	incf	___awmod@dividend+1,f
  4858  1D04                     l2459:
  4859  1D04  01F8               	clrf	___awmod@sign
  4860  1D05  0AF8               	incf	___awmod@sign,f
  4861  1D06                     l2461:
  4862  1D06  1FF3               	btfss	___awmod@divisor+1,7
  4863  1D07  2D09               	goto	u2931
  4864  1D08  2D0A               	goto	u2930
  4865  1D09                     u2931:
  4866  1D09  2D0F               	goto	l2465
  4867  1D0A                     u2930:
  4868  1D0A                     l2463:
  4869  1D0A  09F2               	comf	___awmod@divisor,f
  4870  1D0B  09F3               	comf	___awmod@divisor+1,f
  4871  1D0C  0AF2               	incf	___awmod@divisor,f
  4872  1D0D  1903               	skipnz
  4873  1D0E  0AF3               	incf	___awmod@divisor+1,f
  4874  1D0F                     l2465:
  4875  1D0F  0872               	movf	___awmod@divisor,w
  4876  1D10  0473               	iorwf	___awmod@divisor+1,w
  4877  1D11  1903               	btfsc	3,2
  4878  1D12  2D14               	goto	u2941
  4879  1D13  2D15               	goto	u2940
  4880  1D14                     u2941:
  4881  1D14  2D44               	goto	l2483
  4882  1D15                     u2940:
  4883  1D15                     l2467:
  4884  1D15  01F7               	clrf	___awmod@counter
  4885  1D16  0AF7               	incf	___awmod@counter,f
  4886  1D17  2D23               	goto	l2473
  4887  1D18                     l2469:
  4888  1D18  3001               	movlw	1
  4889  1D19                     u2955:
  4890  1D19  1003               	clrc
  4891  1D1A  0DF2               	rlf	___awmod@divisor,f
  4892  1D1B  0DF3               	rlf	___awmod@divisor+1,f
  4893  1D1C  3EFF               	addlw	-1
  4894  1D1D  1D03               	skipz
  4895  1D1E  2D19               	goto	u2955
  4896  1D1F                     l2471:
  4897  1D1F  3001               	movlw	1
  4898  1D20  00F6               	movwf	??___awmod
  4899  1D21  0876               	movf	??___awmod,w
  4900  1D22  07F7               	addwf	___awmod@counter,f
  4901  1D23                     l2473:
  4902  1D23  1FF3               	btfss	___awmod@divisor+1,7
  4903  1D24  2D26               	goto	u2961
  4904  1D25  2D27               	goto	u2960
  4905  1D26                     u2961:
  4906  1D26  2D18               	goto	l2469
  4907  1D27                     u2960:
  4908  1D27                     l2475:
  4909  1D27  0873               	movf	___awmod@divisor+1,w
  4910  1D28  0275               	subwf	___awmod@dividend+1,w
  4911  1D29  1D03               	skipz
  4912  1D2A  2D2D               	goto	u2975
  4913  1D2B  0872               	movf	___awmod@divisor,w
  4914  1D2C  0274               	subwf	___awmod@dividend,w
  4915  1D2D                     u2975:
  4916  1D2D  1C03               	skipc
  4917  1D2E  2D30               	goto	u2971
  4918  1D2F  2D31               	goto	u2970
  4919  1D30                     u2971:
  4920  1D30  2D37               	goto	l2479
  4921  1D31                     u2970:
  4922  1D31                     l2477:
  4923  1D31  0872               	movf	___awmod@divisor,w
  4924  1D32  02F4               	subwf	___awmod@dividend,f
  4925  1D33  0873               	movf	___awmod@divisor+1,w
  4926  1D34  1C03               	skipc
  4927  1D35  03F5               	decf	___awmod@dividend+1,f
  4928  1D36  02F5               	subwf	___awmod@dividend+1,f
  4929  1D37                     l2479:
  4930  1D37  3001               	movlw	1
  4931  1D38                     u2985:
  4932  1D38  1003               	clrc
  4933  1D39  0CF3               	rrf	___awmod@divisor+1,f
  4934  1D3A  0CF2               	rrf	___awmod@divisor,f
  4935  1D3B  3EFF               	addlw	-1
  4936  1D3C  1D03               	skipz
  4937  1D3D  2D38               	goto	u2985
  4938  1D3E                     l2481:
  4939  1D3E  3001               	movlw	1
  4940  1D3F  02F7               	subwf	___awmod@counter,f
  4941  1D40  1D03               	btfss	3,2
  4942  1D41  2D43               	goto	u2991
  4943  1D42  2D44               	goto	u2990
  4944  1D43                     u2991:
  4945  1D43  2D27               	goto	l2475
  4946  1D44                     u2990:
  4947  1D44                     l2483:
  4948  1D44  0878               	movf	___awmod@sign,w
  4949  1D45  1903               	btfsc	3,2
  4950  1D46  2D48               	goto	u3001
  4951  1D47  2D49               	goto	u3000
  4952  1D48                     u3001:
  4953  1D48  2D4E               	goto	l2487
  4954  1D49                     u3000:
  4955  1D49                     l2485:
  4956  1D49  09F4               	comf	___awmod@dividend,f
  4957  1D4A  09F5               	comf	___awmod@dividend+1,f
  4958  1D4B  0AF4               	incf	___awmod@dividend,f
  4959  1D4C  1903               	skipnz
  4960  1D4D  0AF5               	incf	___awmod@dividend+1,f
  4961  1D4E                     l2487:
  4962  1D4E  0875               	movf	___awmod@dividend+1,w
  4963  1D4F  00F3               	movwf	?___awmod+1
  4964  1D50  0874               	movf	___awmod@dividend,w
  4965  1D51  00F2               	movwf	?___awmod
  4966  1D52                     l600:
  4967  1D52  0008               	return
  4968  1D53                     __end_of___awmod:
  4969                           
  4970                           	psect	text5
  4971  1DBB                     __ptext5:	
  4972 ;; *************** function ___awdiv *****************
  4973 ;; Defined at:
  4974 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4975 ;; Parameters:    Size  Location     Type
  4976 ;;  divisor         2    0[BANK0 ] int 
  4977 ;;  dividend        2    2[BANK0 ] int 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;  quotient        2    6[BANK0 ] int 
  4980 ;;  sign            1    5[BANK0 ] unsigned char 
  4981 ;;  counter         1    4[BANK0 ] unsigned char 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2    0[BANK0 ] int 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4991 ;;      Params:         0       4       0       0       0
  4992 ;;      Locals:         0       4       0       0       0
  4993 ;;      Temps:          1       0       0       0       0
  4994 ;;      Totals:         1       8       0       0       0
  4995 ;;Total ram usage:        9 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_scale
  5002 ;;		_sprintf
  5003 ;; This function uses a non-reentrant model
  5004 ;;
  5005                           
  5006                           
  5007                           ;psect for function ___awdiv
  5008  1DBB                     ___awdiv:
  5009  1DBB                     l2409:	
  5010                           ;incstack = 0
  5011                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5012                           
  5013  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  5014  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  5015  1DBD  01A5               	clrf	___awdiv@sign
  5016  1DBE                     l2411:
  5017  1DBE  1FA1               	btfss	___awdiv@divisor+1,7
  5018  1DBF  2DC1               	goto	u2821
  5019  1DC0  2DC2               	goto	u2820
  5020  1DC1                     u2821:
  5021  1DC1  2DC9               	goto	l2417
  5022  1DC2                     u2820:
  5023  1DC2                     l2413:
  5024  1DC2  09A0               	comf	___awdiv@divisor,f
  5025  1DC3  09A1               	comf	___awdiv@divisor+1,f
  5026  1DC4  0AA0               	incf	___awdiv@divisor,f
  5027  1DC5  1903               	skipnz
  5028  1DC6  0AA1               	incf	___awdiv@divisor+1,f
  5029  1DC7                     l2415:
  5030  1DC7  01A5               	clrf	___awdiv@sign
  5031  1DC8  0AA5               	incf	___awdiv@sign,f
  5032  1DC9                     l2417:
  5033  1DC9  1FA3               	btfss	___awdiv@dividend+1,7
  5034  1DCA  2DCC               	goto	u2831
  5035  1DCB  2DCD               	goto	u2830
  5036  1DCC                     u2831:
  5037  1DCC  2DD6               	goto	l2423
  5038  1DCD                     u2830:
  5039  1DCD                     l2419:
  5040  1DCD  09A2               	comf	___awdiv@dividend,f
  5041  1DCE  09A3               	comf	___awdiv@dividend+1,f
  5042  1DCF  0AA2               	incf	___awdiv@dividend,f
  5043  1DD0  1903               	skipnz
  5044  1DD1  0AA3               	incf	___awdiv@dividend+1,f
  5045  1DD2                     l2421:
  5046  1DD2  3001               	movlw	1
  5047  1DD3  00F9               	movwf	??___awdiv
  5048  1DD4  0879               	movf	??___awdiv,w
  5049  1DD5  06A5               	xorwf	___awdiv@sign,f
  5050  1DD6                     l2423:
  5051  1DD6  01A6               	clrf	___awdiv@quotient
  5052  1DD7  01A7               	clrf	___awdiv@quotient+1
  5053  1DD8                     l2425:
  5054  1DD8  0820               	movf	___awdiv@divisor,w
  5055  1DD9  0421               	iorwf	___awdiv@divisor+1,w
  5056  1DDA  1903               	btfsc	3,2
  5057  1DDB  2DDD               	goto	u2841
  5058  1DDC  2DDE               	goto	u2840
  5059  1DDD                     u2841:
  5060  1DDD  2E15               	goto	l2445
  5061  1DDE                     u2840:
  5062  1DDE                     l2427:
  5063  1DDE  01A4               	clrf	___awdiv@counter
  5064  1DDF  0AA4               	incf	___awdiv@counter,f
  5065  1DE0  2DEC               	goto	l2433
  5066  1DE1                     l2429:
  5067  1DE1  3001               	movlw	1
  5068  1DE2                     u2855:
  5069  1DE2  1003               	clrc
  5070  1DE3  0DA0               	rlf	___awdiv@divisor,f
  5071  1DE4  0DA1               	rlf	___awdiv@divisor+1,f
  5072  1DE5  3EFF               	addlw	-1
  5073  1DE6  1D03               	skipz
  5074  1DE7  2DE2               	goto	u2855
  5075  1DE8                     l2431:
  5076  1DE8  3001               	movlw	1
  5077  1DE9  00F9               	movwf	??___awdiv
  5078  1DEA  0879               	movf	??___awdiv,w
  5079  1DEB  07A4               	addwf	___awdiv@counter,f
  5080  1DEC                     l2433:
  5081  1DEC  1FA1               	btfss	___awdiv@divisor+1,7
  5082  1DED  2DEF               	goto	u2861
  5083  1DEE  2DF0               	goto	u2860
  5084  1DEF                     u2861:
  5085  1DEF  2DE1               	goto	l2429
  5086  1DF0                     u2860:
  5087  1DF0                     l2435:
  5088  1DF0  3001               	movlw	1
  5089  1DF1                     u2875:
  5090  1DF1  1003               	clrc
  5091  1DF2  0DA6               	rlf	___awdiv@quotient,f
  5092  1DF3  0DA7               	rlf	___awdiv@quotient+1,f
  5093  1DF4  3EFF               	addlw	-1
  5094  1DF5  1D03               	skipz
  5095  1DF6  2DF1               	goto	u2875
  5096  1DF7  0821               	movf	___awdiv@divisor+1,w
  5097  1DF8  0223               	subwf	___awdiv@dividend+1,w
  5098  1DF9  1D03               	skipz
  5099  1DFA  2DFD               	goto	u2885
  5100  1DFB  0820               	movf	___awdiv@divisor,w
  5101  1DFC  0222               	subwf	___awdiv@dividend,w
  5102  1DFD                     u2885:
  5103  1DFD  1C03               	skipc
  5104  1DFE  2E00               	goto	u2881
  5105  1DFF  2E01               	goto	u2880
  5106  1E00                     u2881:
  5107  1E00  2E08               	goto	l2441
  5108  1E01                     u2880:
  5109  1E01                     l2437:
  5110  1E01  0820               	movf	___awdiv@divisor,w
  5111  1E02  02A2               	subwf	___awdiv@dividend,f
  5112  1E03  0821               	movf	___awdiv@divisor+1,w
  5113  1E04  1C03               	skipc
  5114  1E05  03A3               	decf	___awdiv@dividend+1,f
  5115  1E06  02A3               	subwf	___awdiv@dividend+1,f
  5116  1E07                     l2439:
  5117  1E07  1426               	bsf	___awdiv@quotient,0
  5118  1E08                     l2441:
  5119  1E08  3001               	movlw	1
  5120  1E09                     u2895:
  5121  1E09  1003               	clrc
  5122  1E0A  0CA1               	rrf	___awdiv@divisor+1,f
  5123  1E0B  0CA0               	rrf	___awdiv@divisor,f
  5124  1E0C  3EFF               	addlw	-1
  5125  1E0D  1D03               	skipz
  5126  1E0E  2E09               	goto	u2895
  5127  1E0F                     l2443:
  5128  1E0F  3001               	movlw	1
  5129  1E10  02A4               	subwf	___awdiv@counter,f
  5130  1E11  1D03               	btfss	3,2
  5131  1E12  2E14               	goto	u2901
  5132  1E13  2E15               	goto	u2900
  5133  1E14                     u2901:
  5134  1E14  2DF0               	goto	l2435
  5135  1E15                     u2900:
  5136  1E15                     l2445:
  5137  1E15  0825               	movf	___awdiv@sign,w
  5138  1E16  1903               	btfsc	3,2
  5139  1E17  2E19               	goto	u2911
  5140  1E18  2E1A               	goto	u2910
  5141  1E19                     u2911:
  5142  1E19  2E1F               	goto	l2449
  5143  1E1A                     u2910:
  5144  1E1A                     l2447:
  5145  1E1A  09A6               	comf	___awdiv@quotient,f
  5146  1E1B  09A7               	comf	___awdiv@quotient+1,f
  5147  1E1C  0AA6               	incf	___awdiv@quotient,f
  5148  1E1D  1903               	skipnz
  5149  1E1E  0AA7               	incf	___awdiv@quotient+1,f
  5150  1E1F                     l2449:
  5151  1E1F  0827               	movf	___awdiv@quotient+1,w
  5152  1E20  00A1               	movwf	?___awdiv+1
  5153  1E21  0826               	movf	___awdiv@quotient,w
  5154  1E22  00A0               	movwf	?___awdiv
  5155  1E23                     l587:
  5156  1E23  0008               	return
  5157  1E24                     __end_of___awdiv:
  5158                           
  5159                           	psect	text6
  5160  199F                     __ptext6:	
  5161 ;; *************** function _isdigit *****************
  5162 ;; Defined at:
  5163 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  c               1    wreg     unsigned char 
  5166 ;; Auto vars:     Size  Location     Type
  5167 ;;  c               1    3[COMMON] unsigned char 
  5168 ;; Return value:  Size  Location     Type
  5169 ;;		None               void
  5170 ;; Registers used:
  5171 ;;		wreg, status,2, status,0
  5172 ;; Tracked objects:
  5173 ;;		On entry : 0/0
  5174 ;;		On exit  : 0/0
  5175 ;;		Unchanged: 0/0
  5176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5177 ;;      Params:         0       0       0       0       0
  5178 ;;      Locals:         2       0       0       0       0
  5179 ;;      Temps:          0       0       0       0       0
  5180 ;;      Totals:         2       0       0       0       0
  5181 ;;Total ram usage:        2 bytes
  5182 ;; Hardware stack levels used:    1
  5183 ;; Hardware stack levels required when called:    1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_sprintf
  5188 ;; This function uses a non-reentrant model
  5189 ;;
  5190                           
  5191                           
  5192                           ;psect for function _isdigit
  5193  199F                     _isdigit:
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5197                           ;isdigit@c stored from wreg
  5198  199F  00F3               	movwf	isdigit@c
  5199  19A0                     l2941:
  5200  19A0  01F2               	clrf	_isdigit$1105
  5201  19A1                     l2943:
  5202  19A1  303A               	movlw	58
  5203  19A2  0273               	subwf	isdigit@c,w
  5204  19A3  1803               	skipnc
  5205  19A4  29A6               	goto	u4251
  5206  19A5  29A7               	goto	u4250
  5207  19A6                     u4251:
  5208  19A6  29AF               	goto	l2949
  5209  19A7                     u4250:
  5210  19A7                     l2945:
  5211  19A7  3030               	movlw	48
  5212  19A8  0273               	subwf	isdigit@c,w
  5213  19A9  1C03               	skipc
  5214  19AA  29AC               	goto	u4261
  5215  19AB  29AD               	goto	u4260
  5216  19AC                     u4261:
  5217  19AC  29AF               	goto	l2949
  5218  19AD                     u4260:
  5219  19AD                     l2947:
  5220  19AD  01F2               	clrf	_isdigit$1105
  5221  19AE  0AF2               	incf	_isdigit$1105,f
  5222  19AF                     l2949:
  5223  19AF  0C72               	rrf	_isdigit$1105,w
  5224  19B0                     l921:
  5225  19B0  0008               	return
  5226  19B1                     __end_of_isdigit:
  5227                           
  5228                           	psect	text7
  5229  136B                     __ptext7:	
  5230 ;; *************** function _fround *****************
  5231 ;; Defined at:
  5232 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  prec            1    wreg     unsigned char 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  prec            1   53[BANK0 ] unsigned char 
  5237 ;; Return value:  Size  Location     Type
  5238 ;;                  4   34[BANK0 ] unsigned char 
  5239 ;; Registers used:
  5240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5241 ;; Tracked objects:
  5242 ;;		On entry : 0/0
  5243 ;;		On exit  : 0/0
  5244 ;;		Unchanged: 0/0
  5245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5246 ;;      Params:         0       4       0       0       0
  5247 ;;      Locals:         0       9       0       0       0
  5248 ;;      Temps:          0       7       0       0       0
  5249 ;;      Totals:         0      20       0       0       0
  5250 ;;Total ram usage:       20 bytes
  5251 ;; Hardware stack levels used:    1
  5252 ;; Hardware stack levels required when called:    3
  5253 ;; This function calls:
  5254 ;;		___flmul
  5255 ;;		___lwdiv
  5256 ;;		___lwmod
  5257 ;; This function is called by:
  5258 ;;		_sprintf
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261                           
  5262                           
  5263                           ;psect for function _fround
  5264  136B                     _fround:
  5265                           
  5266                           ;incstack = 0
  5267                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5268                           ;fround@prec stored from wreg
  5269  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5270  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5271  136D  00D5               	movwf	fround@prec
  5272  136E                     l3781:
  5273                           
  5274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5275  136E  306E               	movlw	110
  5276  136F  0255               	subwf	fround@prec,w
  5277  1370  1C03               	skipc
  5278  1371  2B73               	goto	u5621
  5279  1372  2B74               	goto	u5620
  5280  1373                     u5621:
  5281  1373  2C83               	goto	l3789
  5282  1374                     u5620:
  5283  1374                     l3783:
  5284                           
  5285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5286  1374  303F               	movlw	63
  5287  1375  00AB               	movwf	___flmul@b+3
  5288  1376  3000               	movlw	0
  5289  1377  00AA               	movwf	___flmul@b+2
  5290  1378  3000               	movlw	0
  5291  1379  00A9               	movwf	___flmul@b+1
  5292  137A  3000               	movlw	0
  5293  137B  00A8               	movwf	___flmul@b
  5294  137C  3064               	movlw	100
  5295  137D  00A0               	movwf	___lwdiv@divisor
  5296  137E  3000               	movlw	0
  5297  137F  00A1               	movwf	___lwdiv@divisor+1
  5298  1380  0855               	movf	fround@prec,w
  5299  1381  00C6               	movwf	??_fround
  5300  1382  01C7               	clrf	??_fround+1
  5301  1383  0846               	movf	??_fround,w
  5302  1384  00A2               	movwf	___lwdiv@dividend
  5303  1385  0847               	movf	??_fround+1,w
  5304  1386  00A3               	movwf	___lwdiv@dividend+1
  5305  1387  160A  158A  2374  160A  118A  	fcall	___lwdiv
  5306  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5307  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5308  138E  0820               	movf	?___lwdiv,w
  5309  138F  00C8               	movwf	??_fround+2
  5310  1390  3001               	movlw	1
  5311  1391                     u5635:
  5312  1391  1003               	clrc
  5313  1392  0DC8               	rlf	??_fround+2,f
  5314  1393  3EFF               	addlw	-1
  5315  1394  1D03               	skipz
  5316  1395  2B91               	goto	u5635
  5317  1396  1003               	clrc
  5318  1397  0D48               	rlf	??_fround+2,w
  5319  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5320  1399  0084               	movwf	4
  5321  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  5322  139F  00C9               	movwf	??_fround+3
  5323  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  5324  13A5  00CA               	movwf	??_fround+4
  5325  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  5326  13AB  00CB               	movwf	??_fround+5
  5327  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5328  13B1  00CC               	movwf	??_fround+6
  5329  13B2  084C               	movf	??_fround+6,w
  5330  13B3  00AF               	movwf	___flmul@a+3
  5331  13B4  084B               	movf	??_fround+5,w
  5332  13B5  00AE               	movwf	___flmul@a+2
  5333  13B6  084A               	movf	??_fround+4,w
  5334  13B7  00AD               	movwf	___flmul@a+1
  5335  13B8  0849               	movf	??_fround+3,w
  5336  13B9  00AC               	movwf	___flmul@a
  5337  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5338  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5339  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5340  13C1  082B               	movf	?___flmul+3,w
  5341  13C2  00D4               	movwf	_fround$1307+3
  5342  13C3  082A               	movf	?___flmul+2,w
  5343  13C4  00D3               	movwf	_fround$1307+2
  5344  13C5  0829               	movf	?___flmul+1,w
  5345  13C6  00D2               	movwf	_fround$1307+1
  5346  13C7  0828               	movf	?___flmul,w
  5347  13C8  00D1               	movwf	_fround$1307
  5348                           
  5349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5350  13C9  300A               	movlw	10
  5351  13CA  00A0               	movwf	___lwdiv@divisor
  5352  13CB  3000               	movlw	0
  5353  13CC  00A1               	movwf	___lwdiv@divisor+1
  5354  13CD  0855               	movf	fround@prec,w
  5355  13CE  00C6               	movwf	??_fround
  5356  13CF  01C7               	clrf	??_fround+1
  5357  13D0  0846               	movf	??_fround,w
  5358  13D1  00F4               	movwf	___lwmod@dividend
  5359  13D2  0847               	movf	??_fround+1,w
  5360  13D3  00F5               	movwf	___lwmod@dividend+1
  5361  13D4  3064               	movlw	100
  5362  13D5  00F2               	movwf	___lwmod@divisor
  5363  13D6  3000               	movlw	0
  5364  13D7  00F3               	movwf	___lwmod@divisor+1
  5365  13D8  160A  158A  22F8  160A  118A  	fcall	___lwmod
  5366  13DD  0873               	movf	?___lwmod+1,w
  5367  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5368  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5369  13E0  00A3               	movwf	___lwdiv@dividend+1
  5370  13E1  0872               	movf	?___lwmod,w
  5371  13E2  00A2               	movwf	___lwdiv@dividend
  5372  13E3  160A  158A  2374  160A  118A  	fcall	___lwdiv
  5373  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5374  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5375  13EA  0820               	movf	?___lwdiv,w
  5376  13EB  00C8               	movwf	??_fround+2
  5377  13EC  3001               	movlw	1
  5378  13ED                     u5645:
  5379  13ED  1003               	clrc
  5380  13EE  0DC8               	rlf	??_fround+2,f
  5381  13EF  3EFF               	addlw	-1
  5382  13F0  1D03               	skipz
  5383  13F1  2BED               	goto	u5645
  5384  13F2  1003               	clrc
  5385  13F3  0D48               	rlf	??_fround+2,w
  5386  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5387  13F5  0084               	movwf	4
  5388  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5389  13FB  00C9               	movwf	??_fround+3
  5390  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5391  1401  00CA               	movwf	??_fround+4
  5392  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5393  1407  00CB               	movwf	??_fround+5
  5394  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5395  140D  00CC               	movwf	??_fround+6
  5396  140E  084C               	movf	??_fround+6,w
  5397  140F  00AB               	movwf	___flmul@b+3
  5398  1410  084B               	movf	??_fround+5,w
  5399  1411  00AA               	movwf	___flmul@b+2
  5400  1412  084A               	movf	??_fround+4,w
  5401  1413  00A9               	movwf	___flmul@b+1
  5402  1414  0849               	movf	??_fround+3,w
  5403  1415  00A8               	movwf	___flmul@b
  5404  1416  0854               	movf	_fround$1307+3,w
  5405  1417  00AF               	movwf	___flmul@a+3
  5406  1418  0853               	movf	_fround$1307+2,w
  5407  1419  00AE               	movwf	___flmul@a+2
  5408  141A  0852               	movf	_fround$1307+1,w
  5409  141B  00AD               	movwf	___flmul@a+1
  5410  141C  0851               	movf	_fround$1307,w
  5411  141D  00AC               	movwf	___flmul@a
  5412  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5413  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5414  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5415  1425  082B               	movf	?___flmul+3,w
  5416  1426  00D0               	movwf	_fround$1308+3
  5417  1427  082A               	movf	?___flmul+2,w
  5418  1428  00CF               	movwf	_fround$1308+2
  5419  1429  0829               	movf	?___flmul+1,w
  5420  142A  00CE               	movwf	_fround$1308+1
  5421  142B  0828               	movf	?___flmul,w
  5422  142C  00CD               	movwf	_fround$1308
  5423                           
  5424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5425  142D  300A               	movlw	10
  5426  142E  00F2               	movwf	___lwmod@divisor
  5427  142F  3000               	movlw	0
  5428  1430  00F3               	movwf	___lwmod@divisor+1
  5429  1431  0855               	movf	fround@prec,w
  5430  1432  00C6               	movwf	??_fround
  5431  1433  01C7               	clrf	??_fround+1
  5432  1434  0846               	movf	??_fround,w
  5433  1435  00F4               	movwf	___lwmod@dividend
  5434  1436  0847               	movf	??_fround+1,w
  5435  1437  00F5               	movwf	___lwmod@dividend+1
  5436  1438  160A  158A  22F8  160A  118A  	fcall	___lwmod
  5437  143D  0872               	movf	?___lwmod,w
  5438  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5439  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5440  1440  00C8               	movwf	??_fround+2
  5441  1441  3001               	movlw	1
  5442  1442                     u5655:
  5443  1442  1003               	clrc
  5444  1443  0DC8               	rlf	??_fround+2,f
  5445  1444  3EFF               	addlw	-1
  5446  1445  1D03               	skipz
  5447  1446  2C42               	goto	u5655
  5448  1447  1003               	clrc
  5449  1448  0D48               	rlf	??_fround+2,w
  5450  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5451  144A  0084               	movwf	4
  5452  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5453  1450  00C9               	movwf	??_fround+3
  5454  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5455  1456  00CA               	movwf	??_fround+4
  5456  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5457  145C  00CB               	movwf	??_fround+5
  5458  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5459  1462  00CC               	movwf	??_fround+6
  5460  1463  084C               	movf	??_fround+6,w
  5461  1464  00AB               	movwf	___flmul@b+3
  5462  1465  084B               	movf	??_fround+5,w
  5463  1466  00AA               	movwf	___flmul@b+2
  5464  1467  084A               	movf	??_fround+4,w
  5465  1468  00A9               	movwf	___flmul@b+1
  5466  1469  0849               	movf	??_fround+3,w
  5467  146A  00A8               	movwf	___flmul@b
  5468  146B  0850               	movf	_fround$1308+3,w
  5469  146C  00AF               	movwf	___flmul@a+3
  5470  146D  084F               	movf	_fround$1308+2,w
  5471  146E  00AE               	movwf	___flmul@a+2
  5472  146F  084E               	movf	_fround$1308+1,w
  5473  1470  00AD               	movwf	___flmul@a+1
  5474  1471  084D               	movf	_fround$1308,w
  5475  1472  00AC               	movwf	___flmul@a
  5476  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5477  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5478  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5479  147A  082B               	movf	?___flmul+3,w
  5480  147B  00C5               	movwf	?_fround+3
  5481  147C  082A               	movf	?___flmul+2,w
  5482  147D  00C4               	movwf	?_fround+2
  5483  147E  0829               	movf	?___flmul+1,w
  5484  147F  00C3               	movwf	?_fround+1
  5485  1480  0828               	movf	?___flmul,w
  5486  1481  00C2               	movwf	?_fround
  5487  1482  2D77               	goto	l348
  5488  1483                     l3789:
  5489  1483  300B               	movlw	11
  5490  1484  0255               	subwf	fround@prec,w
  5491  1485  1C03               	skipc
  5492  1486  2C88               	goto	u5661
  5493  1487  2C89               	goto	u5660
  5494  1488                     u5661:
  5495  1488  2D34               	goto	l3795
  5496  1489                     u5660:
  5497  1489                     l3791:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5500  1489  303F               	movlw	63
  5501  148A  00AB               	movwf	___flmul@b+3
  5502  148B  3000               	movlw	0
  5503  148C  00AA               	movwf	___flmul@b+2
  5504  148D  3000               	movlw	0
  5505  148E  00A9               	movwf	___flmul@b+1
  5506  148F  3000               	movlw	0
  5507  1490  00A8               	movwf	___flmul@b
  5508  1491  300A               	movlw	10
  5509  1492  00A0               	movwf	___lwdiv@divisor
  5510  1493  3000               	movlw	0
  5511  1494  00A1               	movwf	___lwdiv@divisor+1
  5512  1495  0855               	movf	fround@prec,w
  5513  1496  00C6               	movwf	??_fround
  5514  1497  01C7               	clrf	??_fround+1
  5515  1498  0846               	movf	??_fround,w
  5516  1499  00A2               	movwf	___lwdiv@dividend
  5517  149A  0847               	movf	??_fround+1,w
  5518  149B  00A3               	movwf	___lwdiv@dividend+1
  5519  149C  160A  158A  2374  160A  118A  	fcall	___lwdiv
  5520  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5521  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5522  14A3  0820               	movf	?___lwdiv,w
  5523  14A4  00C8               	movwf	??_fround+2
  5524  14A5  3001               	movlw	1
  5525  14A6                     u5675:
  5526  14A6  1003               	clrc
  5527  14A7  0DC8               	rlf	??_fround+2,f
  5528  14A8  3EFF               	addlw	-1
  5529  14A9  1D03               	skipz
  5530  14AA  2CA6               	goto	u5675
  5531  14AB  1003               	clrc
  5532  14AC  0D48               	rlf	??_fround+2,w
  5533  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5534  14AE  0084               	movwf	4
  5535  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5536  14B4  00C9               	movwf	??_fround+3
  5537  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5538  14BA  00CA               	movwf	??_fround+4
  5539  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5540  14C0  00CB               	movwf	??_fround+5
  5541  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5542  14C6  00CC               	movwf	??_fround+6
  5543  14C7  084C               	movf	??_fround+6,w
  5544  14C8  00AF               	movwf	___flmul@a+3
  5545  14C9  084B               	movf	??_fround+5,w
  5546  14CA  00AE               	movwf	___flmul@a+2
  5547  14CB  084A               	movf	??_fround+4,w
  5548  14CC  00AD               	movwf	___flmul@a+1
  5549  14CD  0849               	movf	??_fround+3,w
  5550  14CE  00AC               	movwf	___flmul@a
  5551  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5552  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5553  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5554  14D6  082B               	movf	?___flmul+3,w
  5555  14D7  00D4               	movwf	_fround$1307+3
  5556  14D8  082A               	movf	?___flmul+2,w
  5557  14D9  00D3               	movwf	_fround$1307+2
  5558  14DA  0829               	movf	?___flmul+1,w
  5559  14DB  00D2               	movwf	_fround$1307+1
  5560  14DC  0828               	movf	?___flmul,w
  5561  14DD  00D1               	movwf	_fround$1307
  5562                           
  5563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5564  14DE  300A               	movlw	10
  5565  14DF  00F2               	movwf	___lwmod@divisor
  5566  14E0  3000               	movlw	0
  5567  14E1  00F3               	movwf	___lwmod@divisor+1
  5568  14E2  0855               	movf	fround@prec,w
  5569  14E3  00C6               	movwf	??_fround
  5570  14E4  01C7               	clrf	??_fround+1
  5571  14E5  0846               	movf	??_fround,w
  5572  14E6  00F4               	movwf	___lwmod@dividend
  5573  14E7  0847               	movf	??_fround+1,w
  5574  14E8  00F5               	movwf	___lwmod@dividend+1
  5575  14E9  160A  158A  22F8  160A  118A  	fcall	___lwmod
  5576  14EE  0872               	movf	?___lwmod,w
  5577  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5578  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5579  14F1  00C8               	movwf	??_fround+2
  5580  14F2  3001               	movlw	1
  5581  14F3                     u5685:
  5582  14F3  1003               	clrc
  5583  14F4  0DC8               	rlf	??_fround+2,f
  5584  14F5  3EFF               	addlw	-1
  5585  14F6  1D03               	skipz
  5586  14F7  2CF3               	goto	u5685
  5587  14F8  1003               	clrc
  5588  14F9  0D48               	rlf	??_fround+2,w
  5589  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5590  14FB  0084               	movwf	4
  5591  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5592  1501  00C9               	movwf	??_fround+3
  5593  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5594  1507  00CA               	movwf	??_fround+4
  5595  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5596  150D  00CB               	movwf	??_fround+5
  5597  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5598  1513  00CC               	movwf	??_fround+6
  5599  1514  084C               	movf	??_fround+6,w
  5600  1515  00AB               	movwf	___flmul@b+3
  5601  1516  084B               	movf	??_fround+5,w
  5602  1517  00AA               	movwf	___flmul@b+2
  5603  1518  084A               	movf	??_fround+4,w
  5604  1519  00A9               	movwf	___flmul@b+1
  5605  151A  0849               	movf	??_fround+3,w
  5606  151B  00A8               	movwf	___flmul@b
  5607  151C  0854               	movf	_fround$1307+3,w
  5608  151D  00AF               	movwf	___flmul@a+3
  5609  151E  0853               	movf	_fround$1307+2,w
  5610  151F  00AE               	movwf	___flmul@a+2
  5611  1520  0852               	movf	_fround$1307+1,w
  5612  1521  00AD               	movwf	___flmul@a+1
  5613  1522  0851               	movf	_fround$1307,w
  5614  1523  00AC               	movwf	___flmul@a
  5615  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5616  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5617  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5618  152B  082B               	movf	?___flmul+3,w
  5619  152C  00C5               	movwf	?_fround+3
  5620  152D  082A               	movf	?___flmul+2,w
  5621  152E  00C4               	movwf	?_fround+2
  5622  152F  0829               	movf	?___flmul+1,w
  5623  1530  00C3               	movwf	?_fround+1
  5624  1531  0828               	movf	?___flmul,w
  5625  1532  00C2               	movwf	?_fround
  5626  1533  2D77               	goto	l348
  5627  1534                     l3795:
  5628                           
  5629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5630  1534  303F               	movlw	63
  5631  1535  00AB               	movwf	___flmul@b+3
  5632  1536  3000               	movlw	0
  5633  1537  00AA               	movwf	___flmul@b+2
  5634  1538  3000               	movlw	0
  5635  1539  00A9               	movwf	___flmul@b+1
  5636  153A  3000               	movlw	0
  5637  153B  00A8               	movwf	___flmul@b
  5638  153C  0855               	movf	fround@prec,w
  5639  153D  00C6               	movwf	??_fround
  5640  153E  3001               	movlw	1
  5641  153F                     u5695:
  5642  153F  1003               	clrc
  5643  1540  0DC6               	rlf	??_fround,f
  5644  1541  3EFF               	addlw	-1
  5645  1542  1D03               	skipz
  5646  1543  2D3F               	goto	u5695
  5647  1544  1003               	clrc
  5648  1545  0D46               	rlf	??_fround,w
  5649  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5650  1547  0084               	movwf	4
  5651  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5652  154D  00C7               	movwf	??_fround+1
  5653  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5654  1553  00C8               	movwf	??_fround+2
  5655  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5656  1559  00C9               	movwf	??_fround+3
  5657  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5658  155F  00CA               	movwf	??_fround+4
  5659  1560  084A               	movf	??_fround+4,w
  5660  1561  00AF               	movwf	___flmul@a+3
  5661  1562  0849               	movf	??_fround+3,w
  5662  1563  00AE               	movwf	___flmul@a+2
  5663  1564  0848               	movf	??_fround+2,w
  5664  1565  00AD               	movwf	___flmul@a+1
  5665  1566  0847               	movf	??_fround+1,w
  5666  1567  00AC               	movwf	___flmul@a
  5667  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5668  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5669  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5670  156F  082B               	movf	?___flmul+3,w
  5671  1570  00C5               	movwf	?_fround+3
  5672  1571  082A               	movf	?___flmul+2,w
  5673  1572  00C4               	movwf	?_fround+2
  5674  1573  0829               	movf	?___flmul+1,w
  5675  1574  00C3               	movwf	?_fround+1
  5676  1575  0828               	movf	?___flmul,w
  5677  1576  00C2               	movwf	?_fround
  5678  1577                     l348:
  5679  1577  0008               	return
  5680  1578                     __end_of_fround:
  5681                           
  5682                           	psect	text8
  5683  1AF8                     __ptext8:	
  5684 ;; *************** function ___lwmod *****************
  5685 ;; Defined at:
  5686 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  divisor         2    2[COMMON] unsigned int 
  5689 ;;  dividend        2    4[COMMON] unsigned int 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  counter         1    7[COMMON] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  2    2[COMMON] unsigned int 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5701 ;;      Params:         4       0       0       0       0
  5702 ;;      Locals:         1       0       0       0       0
  5703 ;;      Temps:          1       0       0       0       0
  5704 ;;      Totals:         6       0       0       0       0
  5705 ;;Total ram usage:        6 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:    1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_fround
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function ___lwmod
  5717  1AF8                     ___lwmod:
  5718  1AF8                     l2517:	
  5719                           ;incstack = 0
  5720                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5721                           
  5722  1AF8  0872               	movf	___lwmod@divisor,w
  5723  1AF9  0473               	iorwf	___lwmod@divisor+1,w
  5724  1AFA  1903               	btfsc	3,2
  5725  1AFB  2AFD               	goto	u3081
  5726  1AFC  2AFE               	goto	u3080
  5727  1AFD                     u3081:
  5728  1AFD  2B2D               	goto	l2535
  5729  1AFE                     u3080:
  5730  1AFE                     l2519:
  5731  1AFE  01F7               	clrf	___lwmod@counter
  5732  1AFF  0AF7               	incf	___lwmod@counter,f
  5733  1B00  2B0C               	goto	l2525
  5734  1B01                     l2521:
  5735  1B01  3001               	movlw	1
  5736  1B02                     u3095:
  5737  1B02  1003               	clrc
  5738  1B03  0DF2               	rlf	___lwmod@divisor,f
  5739  1B04  0DF3               	rlf	___lwmod@divisor+1,f
  5740  1B05  3EFF               	addlw	-1
  5741  1B06  1D03               	skipz
  5742  1B07  2B02               	goto	u3095
  5743  1B08                     l2523:
  5744  1B08  3001               	movlw	1
  5745  1B09  00F6               	movwf	??___lwmod
  5746  1B0A  0876               	movf	??___lwmod,w
  5747  1B0B  07F7               	addwf	___lwmod@counter,f
  5748  1B0C                     l2525:
  5749  1B0C  1FF3               	btfss	___lwmod@divisor+1,7
  5750  1B0D  2B0F               	goto	u3101
  5751  1B0E  2B10               	goto	u3100
  5752  1B0F                     u3101:
  5753  1B0F  2B01               	goto	l2521
  5754  1B10                     u3100:
  5755  1B10                     l2527:
  5756  1B10  0873               	movf	___lwmod@divisor+1,w
  5757  1B11  0275               	subwf	___lwmod@dividend+1,w
  5758  1B12  1D03               	skipz
  5759  1B13  2B16               	goto	u3115
  5760  1B14  0872               	movf	___lwmod@divisor,w
  5761  1B15  0274               	subwf	___lwmod@dividend,w
  5762  1B16                     u3115:
  5763  1B16  1C03               	skipc
  5764  1B17  2B19               	goto	u3111
  5765  1B18  2B1A               	goto	u3110
  5766  1B19                     u3111:
  5767  1B19  2B20               	goto	l2531
  5768  1B1A                     u3110:
  5769  1B1A                     l2529:
  5770  1B1A  0872               	movf	___lwmod@divisor,w
  5771  1B1B  02F4               	subwf	___lwmod@dividend,f
  5772  1B1C  0873               	movf	___lwmod@divisor+1,w
  5773  1B1D  1C03               	skipc
  5774  1B1E  03F5               	decf	___lwmod@dividend+1,f
  5775  1B1F  02F5               	subwf	___lwmod@dividend+1,f
  5776  1B20                     l2531:
  5777  1B20  3001               	movlw	1
  5778  1B21                     u3125:
  5779  1B21  1003               	clrc
  5780  1B22  0CF3               	rrf	___lwmod@divisor+1,f
  5781  1B23  0CF2               	rrf	___lwmod@divisor,f
  5782  1B24  3EFF               	addlw	-1
  5783  1B25  1D03               	skipz
  5784  1B26  2B21               	goto	u3125
  5785  1B27                     l2533:
  5786  1B27  3001               	movlw	1
  5787  1B28  02F7               	subwf	___lwmod@counter,f
  5788  1B29  1D03               	btfss	3,2
  5789  1B2A  2B2C               	goto	u3131
  5790  1B2B  2B2D               	goto	u3130
  5791  1B2C                     u3131:
  5792  1B2C  2B10               	goto	l2527
  5793  1B2D                     u3130:
  5794  1B2D                     l2535:
  5795  1B2D  0875               	movf	___lwmod@dividend+1,w
  5796  1B2E  00F3               	movwf	?___lwmod+1
  5797  1B2F  0874               	movf	___lwmod@dividend,w
  5798  1B30  00F2               	movwf	?___lwmod
  5799  1B31                     l750:
  5800  1B31  0008               	return
  5801  1B32                     __end_of___lwmod:
  5802                           
  5803                           	psect	text9
  5804  1B74                     __ptext9:	
  5805 ;; *************** function ___lwdiv *****************
  5806 ;; Defined at:
  5807 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  divisor         2    0[BANK0 ] unsigned int 
  5810 ;;  dividend        2    2[BANK0 ] unsigned int 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  quotient        2    5[BANK0 ] unsigned int 
  5813 ;;  counter         1    4[BANK0 ] unsigned char 
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  2    0[BANK0 ] unsigned int 
  5816 ;; Registers used:
  5817 ;;		wreg, status,2, status,0
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5823 ;;      Params:         0       4       0       0       0
  5824 ;;      Locals:         0       3       0       0       0
  5825 ;;      Temps:          1       0       0       0       0
  5826 ;;      Totals:         1       7       0       0       0
  5827 ;;Total ram usage:        8 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; Hardware stack levels required when called:    1
  5830 ;; This function calls:
  5831 ;;		Nothing
  5832 ;; This function is called by:
  5833 ;;		_fround
  5834 ;; This function uses a non-reentrant model
  5835 ;;
  5836                           
  5837                           
  5838                           ;psect for function ___lwdiv
  5839  1B74                     ___lwdiv:
  5840  1B74                     l3755:	
  5841                           ;incstack = 0
  5842                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5843                           
  5844  1B74  1283               	bcf	3,5	;RP0=0, select bank0
  5845  1B75  1303               	bcf	3,6	;RP1=0, select bank0
  5846  1B76  01A5               	clrf	___lwdiv@quotient
  5847  1B77  01A6               	clrf	___lwdiv@quotient+1
  5848  1B78                     l3757:
  5849  1B78  0820               	movf	___lwdiv@divisor,w
  5850  1B79  0421               	iorwf	___lwdiv@divisor+1,w
  5851  1B7A  1903               	btfsc	3,2
  5852  1B7B  2B7D               	goto	u5551
  5853  1B7C  2B7E               	goto	u5550
  5854  1B7D                     u5551:
  5855  1B7D  2BB5               	goto	l3777
  5856  1B7E                     u5550:
  5857  1B7E                     l3759:
  5858  1B7E  01A4               	clrf	___lwdiv@counter
  5859  1B7F  0AA4               	incf	___lwdiv@counter,f
  5860  1B80  2B8C               	goto	l3765
  5861  1B81                     l3761:
  5862  1B81  3001               	movlw	1
  5863  1B82                     u5565:
  5864  1B82  1003               	clrc
  5865  1B83  0DA0               	rlf	___lwdiv@divisor,f
  5866  1B84  0DA1               	rlf	___lwdiv@divisor+1,f
  5867  1B85  3EFF               	addlw	-1
  5868  1B86  1D03               	skipz
  5869  1B87  2B82               	goto	u5565
  5870  1B88                     l3763:
  5871  1B88  3001               	movlw	1
  5872  1B89  00F8               	movwf	??___lwdiv
  5873  1B8A  0878               	movf	??___lwdiv,w
  5874  1B8B  07A4               	addwf	___lwdiv@counter,f
  5875  1B8C                     l3765:
  5876  1B8C  1FA1               	btfss	___lwdiv@divisor+1,7
  5877  1B8D  2B8F               	goto	u5571
  5878  1B8E  2B90               	goto	u5570
  5879  1B8F                     u5571:
  5880  1B8F  2B81               	goto	l3761
  5881  1B90                     u5570:
  5882  1B90                     l3767:
  5883  1B90  3001               	movlw	1
  5884  1B91                     u5585:
  5885  1B91  1003               	clrc
  5886  1B92  0DA5               	rlf	___lwdiv@quotient,f
  5887  1B93  0DA6               	rlf	___lwdiv@quotient+1,f
  5888  1B94  3EFF               	addlw	-1
  5889  1B95  1D03               	skipz
  5890  1B96  2B91               	goto	u5585
  5891  1B97  0821               	movf	___lwdiv@divisor+1,w
  5892  1B98  0223               	subwf	___lwdiv@dividend+1,w
  5893  1B99  1D03               	skipz
  5894  1B9A  2B9D               	goto	u5595
  5895  1B9B  0820               	movf	___lwdiv@divisor,w
  5896  1B9C  0222               	subwf	___lwdiv@dividend,w
  5897  1B9D                     u5595:
  5898  1B9D  1C03               	skipc
  5899  1B9E  2BA0               	goto	u5591
  5900  1B9F  2BA1               	goto	u5590
  5901  1BA0                     u5591:
  5902  1BA0  2BA8               	goto	l3773
  5903  1BA1                     u5590:
  5904  1BA1                     l3769:
  5905  1BA1  0820               	movf	___lwdiv@divisor,w
  5906  1BA2  02A2               	subwf	___lwdiv@dividend,f
  5907  1BA3  0821               	movf	___lwdiv@divisor+1,w
  5908  1BA4  1C03               	skipc
  5909  1BA5  03A3               	decf	___lwdiv@dividend+1,f
  5910  1BA6  02A3               	subwf	___lwdiv@dividend+1,f
  5911  1BA7                     l3771:
  5912  1BA7  1425               	bsf	___lwdiv@quotient,0
  5913  1BA8                     l3773:
  5914  1BA8  3001               	movlw	1
  5915  1BA9                     u5605:
  5916  1BA9  1003               	clrc
  5917  1BAA  0CA1               	rrf	___lwdiv@divisor+1,f
  5918  1BAB  0CA0               	rrf	___lwdiv@divisor,f
  5919  1BAC  3EFF               	addlw	-1
  5920  1BAD  1D03               	skipz
  5921  1BAE  2BA9               	goto	u5605
  5922  1BAF                     l3775:
  5923  1BAF  3001               	movlw	1
  5924  1BB0  02A4               	subwf	___lwdiv@counter,f
  5925  1BB1  1D03               	btfss	3,2
  5926  1BB2  2BB4               	goto	u5611
  5927  1BB3  2BB5               	goto	u5610
  5928  1BB4                     u5611:
  5929  1BB4  2B90               	goto	l3767
  5930  1BB5                     u5610:
  5931  1BB5                     l3777:
  5932  1BB5  0826               	movf	___lwdiv@quotient+1,w
  5933  1BB6  00A1               	movwf	?___lwdiv+1
  5934  1BB7  0825               	movf	___lwdiv@quotient,w
  5935  1BB8  00A0               	movwf	?___lwdiv
  5936  1BB9                     l740:
  5937  1BB9  0008               	return
  5938  1BBA                     __end_of___lwdiv:
  5939                           
  5940                           	psect	text10
  5941  093C                     __ptext10:	
  5942 ;; *************** function ___flmul *****************
  5943 ;; Defined at:
  5944 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5945 ;; Parameters:    Size  Location     Type
  5946 ;;  b               4    8[BANK0 ] unsigned int 
  5947 ;;  a               4   12[BANK0 ] unsigned int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  prod            4   28[BANK0 ] struct .
  5950 ;;  grs             4   22[BANK0 ] unsigned long 
  5951 ;;  temp            2   32[BANK0 ] struct .
  5952 ;;  bexp            1   27[BANK0 ] unsigned char 
  5953 ;;  aexp            1   26[BANK0 ] unsigned char 
  5954 ;;  sign            1   21[BANK0 ] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  4    8[BANK0 ] unsigned char 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5964 ;;      Params:         0       8       0       0       0
  5965 ;;      Locals:         0      13       0       0       0
  5966 ;;      Temps:          0       5       0       0       0
  5967 ;;      Totals:         0      26       0       0       0
  5968 ;;Total ram usage:       26 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    2
  5971 ;; This function calls:
  5972 ;;		__Umul8_16
  5973 ;; This function is called by:
  5974 ;;		_fround
  5975 ;;		_scale
  5976 ;;		_sprintf
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function ___flmul
  5982  093C                     ___flmul:
  5983  093C                     l2733:	
  5984                           ;incstack = 0
  5985                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5986                           
  5987  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5988  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5989  093E  082B               	movf	___flmul@b+3,w
  5990  093F  3980               	andlw	128
  5991  0940  00B0               	movwf	??___flmul
  5992  0941  0830               	movf	??___flmul,w
  5993  0942  00B5               	movwf	___flmul@sign
  5994  0943                     l2735:
  5995  0943  082B               	movf	___flmul@b+3,w
  5996  0944  00B0               	movwf	??___flmul
  5997  0945  0730               	addwf	??___flmul,w
  5998  0946  00B1               	movwf	??___flmul+1
  5999  0947  0831               	movf	??___flmul+1,w
  6000  0948  00BB               	movwf	___flmul@bexp
  6001  0949                     l2737:
  6002  0949  1FAA               	btfss	___flmul@b+2,7
  6003  094A  294C               	goto	u3601
  6004  094B  294D               	goto	u3600
  6005  094C                     u3601:
  6006  094C  294E               	goto	l2741
  6007  094D                     u3600:
  6008  094D                     l2739:
  6009  094D  143B               	bsf	___flmul@bexp,0
  6010  094E                     l2741:
  6011  094E  083B               	movf	___flmul@bexp,w
  6012  094F  1903               	btfsc	3,2
  6013  0950  2952               	goto	u3611
  6014  0951  2953               	goto	u3610
  6015  0952                     u3611:
  6016  0952  2962               	goto	l2749
  6017  0953                     u3610:
  6018  0953                     l2743:
  6019  0953  0A3B               	incf	___flmul@bexp,w
  6020  0954  1D03               	btfss	3,2
  6021  0955  2957               	goto	u3621
  6022  0956  2958               	goto	u3620
  6023  0957                     u3621:
  6024  0957  2960               	goto	l2747
  6025  0958                     u3620:
  6026  0958                     l2745:
  6027  0958  3000               	movlw	0
  6028  0959  00AB               	movwf	___flmul@b+3
  6029  095A  3000               	movlw	0
  6030  095B  00AA               	movwf	___flmul@b+2
  6031  095C  3000               	movlw	0
  6032  095D  00A9               	movwf	___flmul@b+1
  6033  095E  3000               	movlw	0
  6034  095F  00A8               	movwf	___flmul@b
  6035  0960                     l2747:
  6036  0960  17AA               	bsf	___flmul@b+2,7
  6037  0961  296A               	goto	l2751
  6038  0962                     l2749:
  6039  0962  3000               	movlw	0
  6040  0963  00AB               	movwf	___flmul@b+3
  6041  0964  3000               	movlw	0
  6042  0965  00AA               	movwf	___flmul@b+2
  6043  0966  3000               	movlw	0
  6044  0967  00A9               	movwf	___flmul@b+1
  6045  0968  3000               	movlw	0
  6046  0969  00A8               	movwf	___flmul@b
  6047  096A                     l2751:
  6048  096A  082F               	movf	___flmul@a+3,w
  6049  096B  3980               	andlw	128
  6050  096C  00B0               	movwf	??___flmul
  6051  096D  0830               	movf	??___flmul,w
  6052  096E  06B5               	xorwf	___flmul@sign,f
  6053  096F                     l2753:
  6054  096F  082F               	movf	___flmul@a+3,w
  6055  0970  00B0               	movwf	??___flmul
  6056  0971  0730               	addwf	??___flmul,w
  6057  0972  00B1               	movwf	??___flmul+1
  6058  0973  0831               	movf	??___flmul+1,w
  6059  0974  00BA               	movwf	___flmul@aexp
  6060  0975                     l2755:
  6061  0975  1FAE               	btfss	___flmul@a+2,7
  6062  0976  2978               	goto	u3631
  6063  0977  2979               	goto	u3630
  6064  0978                     u3631:
  6065  0978  297A               	goto	l2759
  6066  0979                     u3630:
  6067  0979                     l2757:
  6068  0979  143A               	bsf	___flmul@aexp,0
  6069  097A                     l2759:
  6070  097A  083A               	movf	___flmul@aexp,w
  6071  097B  1903               	btfsc	3,2
  6072  097C  297E               	goto	u3641
  6073  097D  297F               	goto	u3640
  6074  097E                     u3641:
  6075  097E  298E               	goto	l2767
  6076  097F                     u3640:
  6077  097F                     l2761:
  6078  097F  0A3A               	incf	___flmul@aexp,w
  6079  0980  1D03               	btfss	3,2
  6080  0981  2983               	goto	u3651
  6081  0982  2984               	goto	u3650
  6082  0983                     u3651:
  6083  0983  298C               	goto	l2765
  6084  0984                     u3650:
  6085  0984                     l2763:
  6086  0984  3000               	movlw	0
  6087  0985  00AF               	movwf	___flmul@a+3
  6088  0986  3000               	movlw	0
  6089  0987  00AE               	movwf	___flmul@a+2
  6090  0988  3000               	movlw	0
  6091  0989  00AD               	movwf	___flmul@a+1
  6092  098A  3000               	movlw	0
  6093  098B  00AC               	movwf	___flmul@a
  6094  098C                     l2765:
  6095  098C  17AE               	bsf	___flmul@a+2,7
  6096  098D  2996               	goto	l2769
  6097  098E                     l2767:
  6098  098E  3000               	movlw	0
  6099  098F  00AF               	movwf	___flmul@a+3
  6100  0990  3000               	movlw	0
  6101  0991  00AE               	movwf	___flmul@a+2
  6102  0992  3000               	movlw	0
  6103  0993  00AD               	movwf	___flmul@a+1
  6104  0994  3000               	movlw	0
  6105  0995  00AC               	movwf	___flmul@a
  6106  0996                     l2769:
  6107  0996  083A               	movf	___flmul@aexp,w
  6108  0997  1903               	btfsc	3,2
  6109  0998  299A               	goto	u3661
  6110  0999  299B               	goto	u3660
  6111  099A                     u3661:
  6112  099A  29A0               	goto	l2773
  6113  099B                     u3660:
  6114  099B                     l2771:
  6115  099B  083B               	movf	___flmul@bexp,w
  6116  099C  1D03               	btfss	3,2
  6117  099D  299F               	goto	u3671
  6118  099E  29A0               	goto	u3670
  6119  099F                     u3671:
  6120  099F  29A9               	goto	l2777
  6121  09A0                     u3670:
  6122  09A0                     l2773:
  6123  09A0  3000               	movlw	0
  6124  09A1  00AB               	movwf	?___flmul+3
  6125  09A2  3000               	movlw	0
  6126  09A3  00AA               	movwf	?___flmul+2
  6127  09A4  3000               	movlw	0
  6128  09A5  00A9               	movwf	?___flmul+1
  6129  09A6  3000               	movlw	0
  6130  09A7  00A8               	movwf	?___flmul
  6131  09A8  2C9C               	goto	l857
  6132  09A9                     l2777:
  6133  09A9  0828               	movf	___flmul@b,w
  6134  09AA  00B0               	movwf	??___flmul
  6135  09AB  0830               	movf	??___flmul,w
  6136  09AC  00F2               	movwf	__Umul8_16@multiplicand
  6137  09AD  082E               	movf	___flmul@a+2,w
  6138  09AE  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6139  09B3  0873               	movf	?__Umul8_16+1,w
  6140  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6141  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  6142  09B6  00C1               	movwf	___flmul@temp+1
  6143  09B7  0872               	movf	?__Umul8_16,w
  6144  09B8  00C0               	movwf	___flmul@temp
  6145  09B9                     l2779:
  6146  09B9  0840               	movf	___flmul@temp,w
  6147  09BA  00B0               	movwf	??___flmul
  6148  09BB  01B1               	clrf	??___flmul+1
  6149  09BC  01B2               	clrf	??___flmul+2
  6150  09BD  01B3               	clrf	??___flmul+3
  6151  09BE  0833               	movf	??___flmul+3,w
  6152  09BF  00B9               	movwf	___flmul@grs+3
  6153  09C0  0832               	movf	??___flmul+2,w
  6154  09C1  00B8               	movwf	___flmul@grs+2
  6155  09C2  0831               	movf	??___flmul+1,w
  6156  09C3  00B7               	movwf	___flmul@grs+1
  6157  09C4  0830               	movf	??___flmul,w
  6158  09C5  00B6               	movwf	___flmul@grs
  6159  09C6                     l2781:
  6160  09C6  0841               	movf	___flmul@temp+1,w
  6161  09C7  00B0               	movwf	??___flmul
  6162  09C8  01B1               	clrf	??___flmul+1
  6163  09C9  01B2               	clrf	??___flmul+2
  6164  09CA  01B3               	clrf	??___flmul+3
  6165  09CB  0833               	movf	??___flmul+3,w
  6166  09CC  00BF               	movwf	___flmul@prod+3
  6167  09CD  0832               	movf	??___flmul+2,w
  6168  09CE  00BE               	movwf	___flmul@prod+2
  6169  09CF  0831               	movf	??___flmul+1,w
  6170  09D0  00BD               	movwf	___flmul@prod+1
  6171  09D1  0830               	movf	??___flmul,w
  6172  09D2  00BC               	movwf	___flmul@prod
  6173  09D3  0829               	movf	___flmul@b+1,w
  6174  09D4  00B0               	movwf	??___flmul
  6175  09D5  0830               	movf	??___flmul,w
  6176  09D6  00F2               	movwf	__Umul8_16@multiplicand
  6177  09D7  082D               	movf	___flmul@a+1,w
  6178  09D8  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6179  09DD  0873               	movf	?__Umul8_16+1,w
  6180  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6181  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6182  09E0  00C1               	movwf	___flmul@temp+1
  6183  09E1  0872               	movf	?__Umul8_16,w
  6184  09E2  00C0               	movwf	___flmul@temp
  6185  09E3                     l2783:
  6186  09E3  0840               	movf	___flmul@temp,w
  6187  09E4  00B0               	movwf	??___flmul
  6188  09E5  01B1               	clrf	??___flmul+1
  6189  09E6  01B2               	clrf	??___flmul+2
  6190  09E7  01B3               	clrf	??___flmul+3
  6191  09E8  0830               	movf	??___flmul,w
  6192  09E9  07B6               	addwf	___flmul@grs,f
  6193  09EA  0831               	movf	??___flmul+1,w
  6194  09EB  1103               	clrz
  6195  09EC  1803               	skipnc
  6196  09ED  3E01               	addlw	1
  6197  09EE  1903               	skipnz
  6198  09EF  29F1               	goto	u3681
  6199  09F0  07B7               	addwf	___flmul@grs+1,f
  6200  09F1                     u3681:
  6201  09F1  0832               	movf	??___flmul+2,w
  6202  09F2  1103               	clrz
  6203  09F3  1803               	skipnc
  6204  09F4  3E01               	addlw	1
  6205  09F5  1903               	skipnz
  6206  09F6  29F8               	goto	u3682
  6207  09F7  07B8               	addwf	___flmul@grs+2,f
  6208  09F8                     u3682:
  6209  09F8  0833               	movf	??___flmul+3,w
  6210  09F9  1103               	clrz
  6211  09FA  1803               	skipnc
  6212  09FB  3E01               	addlw	1
  6213  09FC  1903               	skipnz
  6214  09FD  29FF               	goto	u3683
  6215  09FE  07B9               	addwf	___flmul@grs+3,f
  6216  09FF                     u3683:
  6217  09FF                     l2785:
  6218  09FF  0841               	movf	___flmul@temp+1,w
  6219  0A00  00B0               	movwf	??___flmul
  6220  0A01  01B1               	clrf	??___flmul+1
  6221  0A02  01B2               	clrf	??___flmul+2
  6222  0A03  01B3               	clrf	??___flmul+3
  6223  0A04  0830               	movf	??___flmul,w
  6224  0A05  07BC               	addwf	___flmul@prod,f
  6225  0A06  0831               	movf	??___flmul+1,w
  6226  0A07  1103               	clrz
  6227  0A08  1803               	skipnc
  6228  0A09  3E01               	addlw	1
  6229  0A0A  1903               	skipnz
  6230  0A0B  2A0D               	goto	u3691
  6231  0A0C  07BD               	addwf	___flmul@prod+1,f
  6232  0A0D                     u3691:
  6233  0A0D  0832               	movf	??___flmul+2,w
  6234  0A0E  1103               	clrz
  6235  0A0F  1803               	skipnc
  6236  0A10  3E01               	addlw	1
  6237  0A11  1903               	skipnz
  6238  0A12  2A14               	goto	u3692
  6239  0A13  07BE               	addwf	___flmul@prod+2,f
  6240  0A14                     u3692:
  6241  0A14  0833               	movf	??___flmul+3,w
  6242  0A15  1103               	clrz
  6243  0A16  1803               	skipnc
  6244  0A17  3E01               	addlw	1
  6245  0A18  1903               	skipnz
  6246  0A19  2A1B               	goto	u3693
  6247  0A1A  07BF               	addwf	___flmul@prod+3,f
  6248  0A1B                     u3693:
  6249  0A1B  082A               	movf	___flmul@b+2,w
  6250  0A1C  00B0               	movwf	??___flmul
  6251  0A1D  0830               	movf	??___flmul,w
  6252  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  6253  0A1F  082C               	movf	___flmul@a,w
  6254  0A20  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6255  0A25  0873               	movf	?__Umul8_16+1,w
  6256  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6257  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6258  0A28  00C1               	movwf	___flmul@temp+1
  6259  0A29  0872               	movf	?__Umul8_16,w
  6260  0A2A  00C0               	movwf	___flmul@temp
  6261  0A2B                     l2787:
  6262  0A2B  0840               	movf	___flmul@temp,w
  6263  0A2C  00B0               	movwf	??___flmul
  6264  0A2D  01B1               	clrf	??___flmul+1
  6265  0A2E  01B2               	clrf	??___flmul+2
  6266  0A2F  01B3               	clrf	??___flmul+3
  6267  0A30  0830               	movf	??___flmul,w
  6268  0A31  07B6               	addwf	___flmul@grs,f
  6269  0A32  0831               	movf	??___flmul+1,w
  6270  0A33  1103               	clrz
  6271  0A34  1803               	skipnc
  6272  0A35  3E01               	addlw	1
  6273  0A36  1903               	skipnz
  6274  0A37  2A39               	goto	u3701
  6275  0A38  07B7               	addwf	___flmul@grs+1,f
  6276  0A39                     u3701:
  6277  0A39  0832               	movf	??___flmul+2,w
  6278  0A3A  1103               	clrz
  6279  0A3B  1803               	skipnc
  6280  0A3C  3E01               	addlw	1
  6281  0A3D  1903               	skipnz
  6282  0A3E  2A40               	goto	u3702
  6283  0A3F  07B8               	addwf	___flmul@grs+2,f
  6284  0A40                     u3702:
  6285  0A40  0833               	movf	??___flmul+3,w
  6286  0A41  1103               	clrz
  6287  0A42  1803               	skipnc
  6288  0A43  3E01               	addlw	1
  6289  0A44  1903               	skipnz
  6290  0A45  2A47               	goto	u3703
  6291  0A46  07B9               	addwf	___flmul@grs+3,f
  6292  0A47                     u3703:
  6293  0A47                     l2789:
  6294  0A47  0841               	movf	___flmul@temp+1,w
  6295  0A48  00B0               	movwf	??___flmul
  6296  0A49  01B1               	clrf	??___flmul+1
  6297  0A4A  01B2               	clrf	??___flmul+2
  6298  0A4B  01B3               	clrf	??___flmul+3
  6299  0A4C  0830               	movf	??___flmul,w
  6300  0A4D  07BC               	addwf	___flmul@prod,f
  6301  0A4E  0831               	movf	??___flmul+1,w
  6302  0A4F  1103               	clrz
  6303  0A50  1803               	skipnc
  6304  0A51  3E01               	addlw	1
  6305  0A52  1903               	skipnz
  6306  0A53  2A55               	goto	u3711
  6307  0A54  07BD               	addwf	___flmul@prod+1,f
  6308  0A55                     u3711:
  6309  0A55  0832               	movf	??___flmul+2,w
  6310  0A56  1103               	clrz
  6311  0A57  1803               	skipnc
  6312  0A58  3E01               	addlw	1
  6313  0A59  1903               	skipnz
  6314  0A5A  2A5C               	goto	u3712
  6315  0A5B  07BE               	addwf	___flmul@prod+2,f
  6316  0A5C                     u3712:
  6317  0A5C  0833               	movf	??___flmul+3,w
  6318  0A5D  1103               	clrz
  6319  0A5E  1803               	skipnc
  6320  0A5F  3E01               	addlw	1
  6321  0A60  1903               	skipnz
  6322  0A61  2A63               	goto	u3713
  6323  0A62  07BF               	addwf	___flmul@prod+3,f
  6324  0A63                     u3713:
  6325  0A63                     l2791:
  6326  0A63  3008               	movlw	8
  6327  0A64  00B0               	movwf	??___flmul
  6328  0A65                     u3725:
  6329  0A65  1003               	clrc
  6330  0A66  0DB6               	rlf	___flmul@grs,f
  6331  0A67  0DB7               	rlf	___flmul@grs+1,f
  6332  0A68  0DB8               	rlf	___flmul@grs+2,f
  6333  0A69  0DB9               	rlf	___flmul@grs+3,f
  6334  0A6A  0BB0               	decfsz	??___flmul,f
  6335  0A6B  2A65               	goto	u3725
  6336  0A6C                     l2793:
  6337  0A6C  0829               	movf	___flmul@b+1,w
  6338  0A6D  00B0               	movwf	??___flmul
  6339  0A6E  0830               	movf	??___flmul,w
  6340  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  6341  0A70  082C               	movf	___flmul@a,w
  6342  0A71  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6343  0A76  0873               	movf	?__Umul8_16+1,w
  6344  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6345  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6346  0A79  00C1               	movwf	___flmul@temp+1
  6347  0A7A  0872               	movf	?__Umul8_16,w
  6348  0A7B  00C0               	movwf	___flmul@temp
  6349  0A7C                     l2795:
  6350  0A7C  0840               	movf	___flmul@temp,w
  6351  0A7D  00B0               	movwf	??___flmul
  6352  0A7E  0841               	movf	___flmul@temp+1,w
  6353  0A7F  00B1               	movwf	??___flmul+1
  6354  0A80  01B2               	clrf	??___flmul+2
  6355  0A81  01B3               	clrf	??___flmul+3
  6356  0A82  0830               	movf	??___flmul,w
  6357  0A83  07B6               	addwf	___flmul@grs,f
  6358  0A84  0831               	movf	??___flmul+1,w
  6359  0A85  1103               	clrz
  6360  0A86  1803               	skipnc
  6361  0A87  3E01               	addlw	1
  6362  0A88  1903               	skipnz
  6363  0A89  2A8B               	goto	u3731
  6364  0A8A  07B7               	addwf	___flmul@grs+1,f
  6365  0A8B                     u3731:
  6366  0A8B  0832               	movf	??___flmul+2,w
  6367  0A8C  1103               	clrz
  6368  0A8D  1803               	skipnc
  6369  0A8E  3E01               	addlw	1
  6370  0A8F  1903               	skipnz
  6371  0A90  2A92               	goto	u3732
  6372  0A91  07B8               	addwf	___flmul@grs+2,f
  6373  0A92                     u3732:
  6374  0A92  0833               	movf	??___flmul+3,w
  6375  0A93  1103               	clrz
  6376  0A94  1803               	skipnc
  6377  0A95  3E01               	addlw	1
  6378  0A96  1903               	skipnz
  6379  0A97  2A99               	goto	u3733
  6380  0A98  07B9               	addwf	___flmul@grs+3,f
  6381  0A99                     u3733:
  6382  0A99                     l2797:
  6383  0A99  0828               	movf	___flmul@b,w
  6384  0A9A  00B0               	movwf	??___flmul
  6385  0A9B  0830               	movf	??___flmul,w
  6386  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  6387  0A9D  082D               	movf	___flmul@a+1,w
  6388  0A9E  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6389  0AA3  0873               	movf	?__Umul8_16+1,w
  6390  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6391  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6392  0AA6  00C1               	movwf	___flmul@temp+1
  6393  0AA7  0872               	movf	?__Umul8_16,w
  6394  0AA8  00C0               	movwf	___flmul@temp
  6395  0AA9                     l2799:
  6396  0AA9  0840               	movf	___flmul@temp,w
  6397  0AAA  00B0               	movwf	??___flmul
  6398  0AAB  0841               	movf	___flmul@temp+1,w
  6399  0AAC  00B1               	movwf	??___flmul+1
  6400  0AAD  01B2               	clrf	??___flmul+2
  6401  0AAE  01B3               	clrf	??___flmul+3
  6402  0AAF  0830               	movf	??___flmul,w
  6403  0AB0  07B6               	addwf	___flmul@grs,f
  6404  0AB1  0831               	movf	??___flmul+1,w
  6405  0AB2  1103               	clrz
  6406  0AB3  1803               	skipnc
  6407  0AB4  3E01               	addlw	1
  6408  0AB5  1903               	skipnz
  6409  0AB6  2AB8               	goto	u3741
  6410  0AB7  07B7               	addwf	___flmul@grs+1,f
  6411  0AB8                     u3741:
  6412  0AB8  0832               	movf	??___flmul+2,w
  6413  0AB9  1103               	clrz
  6414  0ABA  1803               	skipnc
  6415  0ABB  3E01               	addlw	1
  6416  0ABC  1903               	skipnz
  6417  0ABD  2ABF               	goto	u3742
  6418  0ABE  07B8               	addwf	___flmul@grs+2,f
  6419  0ABF                     u3742:
  6420  0ABF  0833               	movf	??___flmul+3,w
  6421  0AC0  1103               	clrz
  6422  0AC1  1803               	skipnc
  6423  0AC2  3E01               	addlw	1
  6424  0AC3  1903               	skipnz
  6425  0AC4  2AC6               	goto	u3743
  6426  0AC5  07B9               	addwf	___flmul@grs+3,f
  6427  0AC6                     u3743:
  6428  0AC6                     l2801:
  6429  0AC6  3008               	movlw	8
  6430  0AC7  00B0               	movwf	??___flmul
  6431  0AC8                     u3755:
  6432  0AC8  1003               	clrc
  6433  0AC9  0DB6               	rlf	___flmul@grs,f
  6434  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6435  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6436  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6437  0ACD  0BB0               	decfsz	??___flmul,f
  6438  0ACE  2AC8               	goto	u3755
  6439  0ACF  0828               	movf	___flmul@b,w
  6440  0AD0  00B0               	movwf	??___flmul
  6441  0AD1  0830               	movf	??___flmul,w
  6442  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  6443  0AD3  082C               	movf	___flmul@a,w
  6444  0AD4  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6445  0AD9  0873               	movf	?__Umul8_16+1,w
  6446  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6447  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6448  0ADC  00C1               	movwf	___flmul@temp+1
  6449  0ADD  0872               	movf	?__Umul8_16,w
  6450  0ADE  00C0               	movwf	___flmul@temp
  6451  0ADF                     l2803:
  6452  0ADF  0840               	movf	___flmul@temp,w
  6453  0AE0  00B0               	movwf	??___flmul
  6454  0AE1  0841               	movf	___flmul@temp+1,w
  6455  0AE2  00B1               	movwf	??___flmul+1
  6456  0AE3  01B2               	clrf	??___flmul+2
  6457  0AE4  01B3               	clrf	??___flmul+3
  6458  0AE5  0830               	movf	??___flmul,w
  6459  0AE6  07B6               	addwf	___flmul@grs,f
  6460  0AE7  0831               	movf	??___flmul+1,w
  6461  0AE8  1103               	clrz
  6462  0AE9  1803               	skipnc
  6463  0AEA  3E01               	addlw	1
  6464  0AEB  1903               	skipnz
  6465  0AEC  2AEE               	goto	u3761
  6466  0AED  07B7               	addwf	___flmul@grs+1,f
  6467  0AEE                     u3761:
  6468  0AEE  0832               	movf	??___flmul+2,w
  6469  0AEF  1103               	clrz
  6470  0AF0  1803               	skipnc
  6471  0AF1  3E01               	addlw	1
  6472  0AF2  1903               	skipnz
  6473  0AF3  2AF5               	goto	u3762
  6474  0AF4  07B8               	addwf	___flmul@grs+2,f
  6475  0AF5                     u3762:
  6476  0AF5  0833               	movf	??___flmul+3,w
  6477  0AF6  1103               	clrz
  6478  0AF7  1803               	skipnc
  6479  0AF8  3E01               	addlw	1
  6480  0AF9  1903               	skipnz
  6481  0AFA  2AFC               	goto	u3763
  6482  0AFB  07B9               	addwf	___flmul@grs+3,f
  6483  0AFC                     u3763:
  6484  0AFC                     l2805:
  6485  0AFC  0829               	movf	___flmul@b+1,w
  6486  0AFD  00B0               	movwf	??___flmul
  6487  0AFE  0830               	movf	??___flmul,w
  6488  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  6489  0B00  082E               	movf	___flmul@a+2,w
  6490  0B01  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6491  0B06  0873               	movf	?__Umul8_16+1,w
  6492  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6493  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6494  0B09  00C1               	movwf	___flmul@temp+1
  6495  0B0A  0872               	movf	?__Umul8_16,w
  6496  0B0B  00C0               	movwf	___flmul@temp
  6497  0B0C  0840               	movf	___flmul@temp,w
  6498  0B0D  00B0               	movwf	??___flmul
  6499  0B0E  0841               	movf	___flmul@temp+1,w
  6500  0B0F  00B1               	movwf	??___flmul+1
  6501  0B10  01B2               	clrf	??___flmul+2
  6502  0B11  01B3               	clrf	??___flmul+3
  6503  0B12  0830               	movf	??___flmul,w
  6504  0B13  07BC               	addwf	___flmul@prod,f
  6505  0B14  0831               	movf	??___flmul+1,w
  6506  0B15  1103               	clrz
  6507  0B16  1803               	skipnc
  6508  0B17  3E01               	addlw	1
  6509  0B18  1903               	skipnz
  6510  0B19  2B1B               	goto	u3771
  6511  0B1A  07BD               	addwf	___flmul@prod+1,f
  6512  0B1B                     u3771:
  6513  0B1B  0832               	movf	??___flmul+2,w
  6514  0B1C  1103               	clrz
  6515  0B1D  1803               	skipnc
  6516  0B1E  3E01               	addlw	1
  6517  0B1F  1903               	skipnz
  6518  0B20  2B22               	goto	u3772
  6519  0B21  07BE               	addwf	___flmul@prod+2,f
  6520  0B22                     u3772:
  6521  0B22  0833               	movf	??___flmul+3,w
  6522  0B23  1103               	clrz
  6523  0B24  1803               	skipnc
  6524  0B25  3E01               	addlw	1
  6525  0B26  1903               	skipnz
  6526  0B27  2B29               	goto	u3773
  6527  0B28  07BF               	addwf	___flmul@prod+3,f
  6528  0B29                     u3773:
  6529  0B29                     l2807:
  6530  0B29  082A               	movf	___flmul@b+2,w
  6531  0B2A  00B0               	movwf	??___flmul
  6532  0B2B  0830               	movf	??___flmul,w
  6533  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  6534  0B2D  082D               	movf	___flmul@a+1,w
  6535  0B2E  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6536  0B33  0873               	movf	?__Umul8_16+1,w
  6537  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6538  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6539  0B36  00C1               	movwf	___flmul@temp+1
  6540  0B37  0872               	movf	?__Umul8_16,w
  6541  0B38  00C0               	movwf	___flmul@temp
  6542  0B39                     l2809:
  6543  0B39  0840               	movf	___flmul@temp,w
  6544  0B3A  00B0               	movwf	??___flmul
  6545  0B3B  0841               	movf	___flmul@temp+1,w
  6546  0B3C  00B1               	movwf	??___flmul+1
  6547  0B3D  01B2               	clrf	??___flmul+2
  6548  0B3E  01B3               	clrf	??___flmul+3
  6549  0B3F  0830               	movf	??___flmul,w
  6550  0B40  07BC               	addwf	___flmul@prod,f
  6551  0B41  0831               	movf	??___flmul+1,w
  6552  0B42  1103               	clrz
  6553  0B43  1803               	skipnc
  6554  0B44  3E01               	addlw	1
  6555  0B45  1903               	skipnz
  6556  0B46  2B48               	goto	u3781
  6557  0B47  07BD               	addwf	___flmul@prod+1,f
  6558  0B48                     u3781:
  6559  0B48  0832               	movf	??___flmul+2,w
  6560  0B49  1103               	clrz
  6561  0B4A  1803               	skipnc
  6562  0B4B  3E01               	addlw	1
  6563  0B4C  1903               	skipnz
  6564  0B4D  2B4F               	goto	u3782
  6565  0B4E  07BE               	addwf	___flmul@prod+2,f
  6566  0B4F                     u3782:
  6567  0B4F  0833               	movf	??___flmul+3,w
  6568  0B50  1103               	clrz
  6569  0B51  1803               	skipnc
  6570  0B52  3E01               	addlw	1
  6571  0B53  1903               	skipnz
  6572  0B54  2B56               	goto	u3783
  6573  0B55  07BF               	addwf	___flmul@prod+3,f
  6574  0B56                     u3783:
  6575  0B56  082A               	movf	___flmul@b+2,w
  6576  0B57  00B0               	movwf	??___flmul
  6577  0B58  0830               	movf	??___flmul,w
  6578  0B59  00F2               	movwf	__Umul8_16@multiplicand
  6579  0B5A  082E               	movf	___flmul@a+2,w
  6580  0B5B  120A  158A  2006  120A  158A  	fcall	__Umul8_16
  6581  0B60  0873               	movf	?__Umul8_16+1,w
  6582  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6583  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6584  0B63  00C1               	movwf	___flmul@temp+1
  6585  0B64  0872               	movf	?__Umul8_16,w
  6586  0B65  00C0               	movwf	___flmul@temp
  6587  0B66                     l2811:
  6588  0B66  0840               	movf	___flmul@temp,w
  6589  0B67  00B0               	movwf	??___flmul
  6590  0B68  0841               	movf	___flmul@temp+1,w
  6591  0B69  00B1               	movwf	??___flmul+1
  6592  0B6A  01B2               	clrf	??___flmul+2
  6593  0B6B  01B3               	clrf	??___flmul+3
  6594  0B6C  3008               	movlw	8
  6595  0B6D                     u3795:
  6596  0B6D  1003               	clrc
  6597  0B6E  0DB0               	rlf	??___flmul,f
  6598  0B6F  0DB1               	rlf	??___flmul+1,f
  6599  0B70  0DB2               	rlf	??___flmul+2,f
  6600  0B71  0DB3               	rlf	??___flmul+3,f
  6601  0B72                     u3790:
  6602  0B72  3EFF               	addlw	-1
  6603  0B73  1D03               	skipz
  6604  0B74  2B6D               	goto	u3795
  6605  0B75  0830               	movf	??___flmul,w
  6606  0B76  07BC               	addwf	___flmul@prod,f
  6607  0B77  0831               	movf	??___flmul+1,w
  6608  0B78  1103               	clrz
  6609  0B79  1803               	skipnc
  6610  0B7A  3E01               	addlw	1
  6611  0B7B  1903               	skipnz
  6612  0B7C  2B7E               	goto	u3801
  6613  0B7D  07BD               	addwf	___flmul@prod+1,f
  6614  0B7E                     u3801:
  6615  0B7E  0832               	movf	??___flmul+2,w
  6616  0B7F  1103               	clrz
  6617  0B80  1803               	skipnc
  6618  0B81  3E01               	addlw	1
  6619  0B82  1903               	skipnz
  6620  0B83  2B85               	goto	u3802
  6621  0B84  07BE               	addwf	___flmul@prod+2,f
  6622  0B85                     u3802:
  6623  0B85  0833               	movf	??___flmul+3,w
  6624  0B86  1103               	clrz
  6625  0B87  1803               	skipnc
  6626  0B88  3E01               	addlw	1
  6627  0B89  1903               	skipnz
  6628  0B8A  2B8C               	goto	u3803
  6629  0B8B  07BF               	addwf	___flmul@prod+3,f
  6630  0B8C                     u3803:
  6631  0B8C                     l2813:
  6632  0B8C  0836               	movf	___flmul@grs,w
  6633  0B8D  00B0               	movwf	??___flmul
  6634  0B8E  0837               	movf	___flmul@grs+1,w
  6635  0B8F  00B1               	movwf	??___flmul+1
  6636  0B90  0838               	movf	___flmul@grs+2,w
  6637  0B91  00B2               	movwf	??___flmul+2
  6638  0B92  0839               	movf	___flmul@grs+3,w
  6639  0B93  00B3               	movwf	??___flmul+3
  6640  0B94  3018               	movlw	24
  6641  0B95                     u3815:
  6642  0B95  1003               	clrc
  6643  0B96  0CB3               	rrf	??___flmul+3,f
  6644  0B97  0CB2               	rrf	??___flmul+2,f
  6645  0B98  0CB1               	rrf	??___flmul+1,f
  6646  0B99  0CB0               	rrf	??___flmul,f
  6647  0B9A                     u3810:
  6648  0B9A  3EFF               	addlw	-1
  6649  0B9B  1D03               	skipz
  6650  0B9C  2B95               	goto	u3815
  6651  0B9D  0830               	movf	??___flmul,w
  6652  0B9E  07BC               	addwf	___flmul@prod,f
  6653  0B9F  0831               	movf	??___flmul+1,w
  6654  0BA0  1103               	clrz
  6655  0BA1  1803               	skipnc
  6656  0BA2  3E01               	addlw	1
  6657  0BA3  1903               	skipnz
  6658  0BA4  2BA6               	goto	u3821
  6659  0BA5  07BD               	addwf	___flmul@prod+1,f
  6660  0BA6                     u3821:
  6661  0BA6  0832               	movf	??___flmul+2,w
  6662  0BA7  1103               	clrz
  6663  0BA8  1803               	skipnc
  6664  0BA9  3E01               	addlw	1
  6665  0BAA  1903               	skipnz
  6666  0BAB  2BAD               	goto	u3822
  6667  0BAC  07BE               	addwf	___flmul@prod+2,f
  6668  0BAD                     u3822:
  6669  0BAD  0833               	movf	??___flmul+3,w
  6670  0BAE  1103               	clrz
  6671  0BAF  1803               	skipnc
  6672  0BB0  3E01               	addlw	1
  6673  0BB1  1903               	skipnz
  6674  0BB2  2BB4               	goto	u3823
  6675  0BB3  07BF               	addwf	___flmul@prod+3,f
  6676  0BB4                     u3823:
  6677  0BB4                     l2815:
  6678  0BB4  3008               	movlw	8
  6679  0BB5  00B0               	movwf	??___flmul
  6680  0BB6                     u3835:
  6681  0BB6  1003               	clrc
  6682  0BB7  0DB6               	rlf	___flmul@grs,f
  6683  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6684  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6685  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6686  0BBB  0BB0               	decfsz	??___flmul,f
  6687  0BBC  2BB6               	goto	u3835
  6688  0BBD                     l2817:
  6689  0BBD  083B               	movf	___flmul@bexp,w
  6690  0BBE  073A               	addwf	___flmul@aexp,w
  6691  0BBF  00B0               	movwf	??___flmul
  6692  0BC0  01B1               	clrf	??___flmul+1
  6693  0BC1  0DB1               	rlf	??___flmul+1,f
  6694  0BC2  0830               	movf	??___flmul,w
  6695  0BC3  3E82               	addlw	130
  6696  0BC4  00C0               	movwf	___flmul@temp
  6697  0BC5  0831               	movf	??___flmul+1,w
  6698  0BC6  1803               	skipnc
  6699  0BC7  3E01               	addlw	1
  6700  0BC8  3EFF               	addlw	255
  6701  0BC9  00C1               	movwf	___flmul@temp+1
  6702  0BCA  2BE8               	goto	l2829
  6703  0BCB                     l2819:
  6704  0BCB  3001               	movlw	1
  6705  0BCC  00B0               	movwf	??___flmul
  6706  0BCD                     u3845:
  6707  0BCD  1003               	clrc
  6708  0BCE  0DBC               	rlf	___flmul@prod,f
  6709  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6710  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6711  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6712  0BD2  0BB0               	decfsz	??___flmul,f
  6713  0BD3  2BCD               	goto	u3845
  6714  0BD4                     l2821:
  6715  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6716  0BD5  2BD7               	goto	u3851
  6717  0BD6  2BD8               	goto	u3850
  6718  0BD7                     u3851:
  6719  0BD7  2BD9               	goto	l2825
  6720  0BD8                     u3850:
  6721  0BD8                     l2823:
  6722  0BD8  143C               	bsf	___flmul@prod,0
  6723  0BD9                     l2825:
  6724  0BD9  3001               	movlw	1
  6725  0BDA  00B0               	movwf	??___flmul
  6726  0BDB                     u3865:
  6727  0BDB  1003               	clrc
  6728  0BDC  0DB6               	rlf	___flmul@grs,f
  6729  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6730  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6731  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6732  0BE0  0BB0               	decfsz	??___flmul,f
  6733  0BE1  2BDB               	goto	u3865
  6734  0BE2                     l2827:
  6735  0BE2  30FF               	movlw	255
  6736  0BE3  07C0               	addwf	___flmul@temp,f
  6737  0BE4  1803               	skipnc
  6738  0BE5  0AC1               	incf	___flmul@temp+1,f
  6739  0BE6  30FF               	movlw	255
  6740  0BE7  07C1               	addwf	___flmul@temp+1,f
  6741  0BE8                     l2829:
  6742  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6743  0BE9  2BEB               	goto	u3871
  6744  0BEA  2BEC               	goto	u3870
  6745  0BEB                     u3871:
  6746  0BEB  2BCB               	goto	l2819
  6747  0BEC                     u3870:
  6748  0BEC                     l2831:
  6749  0BEC  01BA               	clrf	___flmul@aexp
  6750  0BED                     l2833:
  6751  0BED  1FB9               	btfss	___flmul@grs+3,7
  6752  0BEE  2BF0               	goto	u3881
  6753  0BEF  2BF1               	goto	u3880
  6754  0BF0                     u3881:
  6755  0BF0  2C0D               	goto	l2841
  6756  0BF1                     u3880:
  6757  0BF1                     l2835:
  6758  0BF1  30FF               	movlw	255
  6759  0BF2  0536               	andwf	___flmul@grs,w
  6760  0BF3  00B0               	movwf	??___flmul
  6761  0BF4  30FF               	movlw	255
  6762  0BF5  0537               	andwf	___flmul@grs+1,w
  6763  0BF6  00B1               	movwf	??___flmul+1
  6764  0BF7  30FF               	movlw	255
  6765  0BF8  0538               	andwf	___flmul@grs+2,w
  6766  0BF9  00B2               	movwf	??___flmul+2
  6767  0BFA  307F               	movlw	127
  6768  0BFB  0539               	andwf	___flmul@grs+3,w
  6769  0BFC  00B3               	movwf	??___flmul+3
  6770  0BFD  0833               	movf	??___flmul+3,w
  6771  0BFE  0432               	iorwf	??___flmul+2,w
  6772  0BFF  0431               	iorwf	??___flmul+1,w
  6773  0C00  0430               	iorwf	??___flmul,w
  6774  0C01  1903               	skipnz
  6775  0C02  2C04               	goto	u3891
  6776  0C03  2C05               	goto	u3890
  6777  0C04                     u3891:
  6778  0C04  2C08               	goto	l863
  6779  0C05                     u3890:
  6780  0C05                     l2837:
  6781  0C05  01BA               	clrf	___flmul@aexp
  6782  0C06  0ABA               	incf	___flmul@aexp,f
  6783  0C07  2C0D               	goto	l2841
  6784  0C08                     l863:
  6785  0C08  1C3C               	btfss	___flmul@prod,0
  6786  0C09  2C0B               	goto	u3901
  6787  0C0A  2C0C               	goto	u3900
  6788  0C0B                     u3901:
  6789  0C0B  2C0D               	goto	l2841
  6790  0C0C                     u3900:
  6791  0C0C  2C05               	goto	l2837
  6792  0C0D                     l2841:
  6793  0C0D  083A               	movf	___flmul@aexp,w
  6794  0C0E  1903               	btfsc	3,2
  6795  0C0F  2C11               	goto	u3911
  6796  0C10  2C12               	goto	u3910
  6797  0C11                     u3911:
  6798  0C11  2C43               	goto	l2851
  6799  0C12                     u3910:
  6800  0C12                     l2843:
  6801  0C12  3001               	movlw	1
  6802  0C13  07BC               	addwf	___flmul@prod,f
  6803  0C14  3000               	movlw	0
  6804  0C15  1803               	skipnc
  6805  0C16  3001               	movlw	1
  6806  0C17  07BD               	addwf	___flmul@prod+1,f
  6807  0C18  3000               	movlw	0
  6808  0C19  1803               	skipnc
  6809  0C1A  3001               	movlw	1
  6810  0C1B  07BE               	addwf	___flmul@prod+2,f
  6811  0C1C  3000               	movlw	0
  6812  0C1D  1803               	skipnc
  6813  0C1E  3001               	movlw	1
  6814  0C1F  07BF               	addwf	___flmul@prod+3,f
  6815  0C20                     l2845:
  6816  0C20  1C3F               	btfss	___flmul@prod+3,0
  6817  0C21  2C23               	goto	u3921
  6818  0C22  2C24               	goto	u3920
  6819  0C23                     u3921:
  6820  0C23  2C43               	goto	l2851
  6821  0C24                     u3920:
  6822  0C24                     l2847:
  6823  0C24  083C               	movf	___flmul@prod,w
  6824  0C25  00B0               	movwf	??___flmul
  6825  0C26  083D               	movf	___flmul@prod+1,w
  6826  0C27  00B1               	movwf	??___flmul+1
  6827  0C28  083E               	movf	___flmul@prod+2,w
  6828  0C29  00B2               	movwf	??___flmul+2
  6829  0C2A  083F               	movf	___flmul@prod+3,w
  6830  0C2B  00B3               	movwf	??___flmul+3
  6831  0C2C  3001               	movlw	1
  6832  0C2D  00B4               	movwf	??___flmul+4
  6833  0C2E                     u3935:
  6834  0C2E  0D33               	rlf	??___flmul+3,w
  6835  0C2F  0CB3               	rrf	??___flmul+3,f
  6836  0C30  0CB2               	rrf	??___flmul+2,f
  6837  0C31  0CB1               	rrf	??___flmul+1,f
  6838  0C32  0CB0               	rrf	??___flmul,f
  6839  0C33                     u3930:
  6840  0C33  0BB4               	decfsz	??___flmul+4,f
  6841  0C34  2C2E               	goto	u3935
  6842  0C35  0833               	movf	??___flmul+3,w
  6843  0C36  00BF               	movwf	___flmul@prod+3
  6844  0C37  0832               	movf	??___flmul+2,w
  6845  0C38  00BE               	movwf	___flmul@prod+2
  6846  0C39  0831               	movf	??___flmul+1,w
  6847  0C3A  00BD               	movwf	___flmul@prod+1
  6848  0C3B  0830               	movf	??___flmul,w
  6849  0C3C  00BC               	movwf	___flmul@prod
  6850  0C3D                     l2849:
  6851  0C3D  3001               	movlw	1
  6852  0C3E  07C0               	addwf	___flmul@temp,f
  6853  0C3F  1803               	skipnc
  6854  0C40  0AC1               	incf	___flmul@temp+1,f
  6855  0C41  3000               	movlw	0
  6856  0C42  07C1               	addwf	___flmul@temp+1,f
  6857  0C43                     l2851:
  6858  0C43  0841               	movf	___flmul@temp+1,w
  6859  0C44  3A80               	xorlw	128
  6860  0C45  00FF               	movwf	btemp+1
  6861  0C46  3080               	movlw	128
  6862  0C47  027F               	subwf	btemp+1,w
  6863  0C48  1D03               	skipz
  6864  0C49  2C4C               	goto	u3945
  6865  0C4A  30FF               	movlw	255
  6866  0C4B  0240               	subwf	___flmul@temp,w
  6867  0C4C                     u3945:
  6868  0C4C  1C03               	skipc
  6869  0C4D  2C4F               	goto	u3941
  6870  0C4E  2C50               	goto	u3940
  6871  0C4F                     u3941:
  6872  0C4F  2C5B               	goto	l2855
  6873  0C50                     u3940:
  6874  0C50                     l2853:
  6875  0C50  307F               	movlw	127
  6876  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6877  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6878  0C53  00BF               	movwf	___flmul@prod+3
  6879  0C54  3080               	movlw	128
  6880  0C55  00BE               	movwf	___flmul@prod+2
  6881  0C56  3000               	movlw	0
  6882  0C57  00BD               	movwf	___flmul@prod+1
  6883  0C58  3000               	movlw	0
  6884  0C59  00BC               	movwf	___flmul@prod
  6885  0C5A  2C90               	goto	l869
  6886  0C5B                     l2855:
  6887  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6888  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6889  0C5D  0841               	movf	___flmul@temp+1,w
  6890  0C5E  3A80               	xorlw	128
  6891  0C5F  00FF               	movwf	btemp+1
  6892  0C60  3080               	movlw	128
  6893  0C61  027F               	subwf	btemp+1,w
  6894  0C62  1D03               	skipz
  6895  0C63  2C66               	goto	u3955
  6896  0C64  3001               	movlw	1
  6897  0C65  0240               	subwf	___flmul@temp,w
  6898  0C66                     u3955:
  6899  0C66  1803               	skipnc
  6900  0C67  2C69               	goto	u3951
  6901  0C68  2C6A               	goto	u3950
  6902  0C69                     u3951:
  6903  0C69  2C76               	goto	l2861
  6904  0C6A                     u3950:
  6905  0C6A                     l2857:
  6906  0C6A  3000               	movlw	0
  6907  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6908  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6909  0C6D  00BF               	movwf	___flmul@prod+3
  6910  0C6E  3000               	movlw	0
  6911  0C6F  00BE               	movwf	___flmul@prod+2
  6912  0C70  3000               	movlw	0
  6913  0C71  00BD               	movwf	___flmul@prod+1
  6914  0C72  3000               	movlw	0
  6915  0C73  00BC               	movwf	___flmul@prod
  6916  0C74                     l2859:
  6917  0C74  01B5               	clrf	___flmul@sign
  6918  0C75  2C90               	goto	l869
  6919  0C76                     l2861:
  6920  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0C78  0840               	movf	___flmul@temp,w
  6923  0C79  00B0               	movwf	??___flmul
  6924  0C7A  0830               	movf	??___flmul,w
  6925  0C7B  00BB               	movwf	___flmul@bexp
  6926  0C7C  30FF               	movlw	255
  6927  0C7D  05BC               	andwf	___flmul@prod,f
  6928  0C7E  30FF               	movlw	255
  6929  0C7F  05BD               	andwf	___flmul@prod+1,f
  6930  0C80  307F               	movlw	127
  6931  0C81  05BE               	andwf	___flmul@prod+2,f
  6932  0C82  3000               	movlw	0
  6933  0C83  05BF               	andwf	___flmul@prod+3,f
  6934  0C84                     l2863:
  6935  0C84  1C3B               	btfss	___flmul@bexp,0
  6936  0C85  2C87               	goto	u3961
  6937  0C86  2C88               	goto	u3960
  6938  0C87                     u3961:
  6939  0C87  2C89               	goto	l2867
  6940  0C88                     u3960:
  6941  0C88                     l2865:
  6942  0C88  17BE               	bsf	___flmul@prod+2,7
  6943  0C89                     l2867:
  6944  0C89  083B               	movf	___flmul@bexp,w
  6945  0C8A  00B0               	movwf	??___flmul
  6946  0C8B  1003               	clrc
  6947  0C8C  0C30               	rrf	??___flmul,w
  6948  0C8D  00B1               	movwf	??___flmul+1
  6949  0C8E  0831               	movf	??___flmul+1,w
  6950  0C8F  00BF               	movwf	___flmul@prod+3
  6951  0C90                     l869:
  6952  0C90  0835               	movf	___flmul@sign,w
  6953  0C91  00B0               	movwf	??___flmul
  6954  0C92  0830               	movf	??___flmul,w
  6955  0C93  04BF               	iorwf	___flmul@prod+3,f
  6956  0C94                     l2869:
  6957  0C94  083F               	movf	___flmul@prod+3,w
  6958  0C95  00AB               	movwf	?___flmul+3
  6959  0C96  083E               	movf	___flmul@prod+2,w
  6960  0C97  00AA               	movwf	?___flmul+2
  6961  0C98  083D               	movf	___flmul@prod+1,w
  6962  0C99  00A9               	movwf	?___flmul+1
  6963  0C9A  083C               	movf	___flmul@prod,w
  6964  0C9B  00A8               	movwf	?___flmul
  6965  0C9C                     l857:
  6966  0C9C  0008               	return
  6967  0C9D                     __end_of___flmul:
  6968                           
  6969                           	psect	text11
  6970  0806                     __ptext11:	
  6971 ;; *************** function __Umul8_16 *****************
  6972 ;; Defined at:
  6973 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  multiplier      1    wreg     unsigned char 
  6976 ;;  multiplicand    1    2[COMMON] unsigned char 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  multiplier      1   10[COMMON] unsigned char 
  6979 ;;  word_mpld       2    8[COMMON] unsigned int 
  6980 ;;  product         2    6[COMMON] unsigned int 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  2    2[COMMON] unsigned int 
  6983 ;; Registers used:
  6984 ;;		wreg, status,2, status,0
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6990 ;;      Params:         2       0       0       0       0
  6991 ;;      Locals:         5       0       0       0       0
  6992 ;;      Temps:          2       0       0       0       0
  6993 ;;      Totals:         9       0       0       0       0
  6994 ;;Total ram usage:        9 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		___flmul
  7001 ;; This function uses a non-reentrant model
  7002 ;;
  7003                           
  7004                           
  7005                           ;psect for function __Umul8_16
  7006  0806                     __Umul8_16:
  7007                           
  7008                           ;incstack = 0
  7009                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7010                           ;__Umul8_16@multiplier stored from wreg
  7011  0806  00FA               	movwf	__Umul8_16@multiplier
  7012  0807                     l2395:
  7013  0807  01F6               	clrf	__Umul8_16@product
  7014  0808  01F7               	clrf	__Umul8_16@product+1
  7015  0809                     l2397:
  7016  0809  0872               	movf	__Umul8_16@multiplicand,w
  7017  080A  00F4               	movwf	??__Umul8_16
  7018  080B  01F5               	clrf	??__Umul8_16+1
  7019  080C  0874               	movf	??__Umul8_16,w
  7020  080D  00F8               	movwf	__Umul8_16@word_mpld
  7021  080E  0875               	movf	??__Umul8_16+1,w
  7022  080F  00F9               	movwf	__Umul8_16@word_mpld+1
  7023  0810                     l2399:
  7024  0810  1C7A               	btfss	__Umul8_16@multiplier,0
  7025  0811  2813               	goto	u2791
  7026  0812  2814               	goto	u2790
  7027  0813                     u2791:
  7028  0813  281A               	goto	l876
  7029  0814                     u2790:
  7030  0814                     l2401:
  7031  0814  0878               	movf	__Umul8_16@word_mpld,w
  7032  0815  07F6               	addwf	__Umul8_16@product,f
  7033  0816  1803               	skipnc
  7034  0817  0AF7               	incf	__Umul8_16@product+1,f
  7035  0818  0879               	movf	__Umul8_16@word_mpld+1,w
  7036  0819  07F7               	addwf	__Umul8_16@product+1,f
  7037  081A                     l876:
  7038  081A  3001               	movlw	1
  7039  081B                     u2805:
  7040  081B  1003               	clrc
  7041  081C  0DF8               	rlf	__Umul8_16@word_mpld,f
  7042  081D  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  7043  081E  3EFF               	addlw	-1
  7044  081F  1D03               	skipz
  7045  0820  281B               	goto	u2805
  7046  0821  1003               	clrc
  7047  0822  0CFA               	rrf	__Umul8_16@multiplier,f
  7048  0823                     l2403:
  7049  0823  087A               	movf	__Umul8_16@multiplier,w
  7050  0824  1D03               	btfss	3,2
  7051  0825  2827               	goto	u2811
  7052  0826  2828               	goto	u2810
  7053  0827                     u2811:
  7054  0827  2810               	goto	l2399
  7055  0828                     u2810:
  7056  0828                     l2405:
  7057  0828  0877               	movf	__Umul8_16@product+1,w
  7058  0829  00F3               	movwf	?__Umul8_16+1
  7059  082A  0876               	movf	__Umul8_16@product,w
  7060  082B  00F2               	movwf	?__Umul8_16
  7061  082C                     l878:
  7062  082C  0008               	return
  7063  082D                     __end_of__Umul8_16:
  7064                           
  7065                           	psect	text12
  7066  10EC                     __ptext12:	
  7067 ;; *************** function __tdiv_to_l_ *****************
  7068 ;; Defined at:
  7069 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  f1              4    2[COMMON] float 
  7072 ;;  f2              4    6[COMMON] float 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  quot            4    4[BANK0 ] unsigned long 
  7075 ;;  exp1            1    9[BANK0 ] unsigned char 
  7076 ;;  cntr            1    8[BANK0 ] unsigned char 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  4    2[COMMON] unsigned long 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7086 ;;      Params:         8       0       0       0       0
  7087 ;;      Locals:         0       6       0       0       0
  7088 ;;      Temps:          0       4       0       0       0
  7089 ;;      Totals:         8      10       0       0       0
  7090 ;;Total ram usage:       18 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    1
  7093 ;; This function calls:
  7094 ;;		Nothing
  7095 ;; This function is called by:
  7096 ;;		_sprintf
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function __tdiv_to_l_
  7102  10EC                     __tdiv_to_l_:
  7103  10EC                     l2953:	
  7104                           ;incstack = 0
  7105                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7106                           
  7107  10EC  0872               	movf	__tdiv_to_l_@f1,w
  7108  10ED  1283               	bcf	3,5	;RP0=0, select bank0
  7109  10EE  1303               	bcf	3,6	;RP1=0, select bank0
  7110  10EF  00A0               	movwf	??__tdiv_to_l_
  7111  10F0  0873               	movf	__tdiv_to_l_@f1+1,w
  7112  10F1  00A1               	movwf	??__tdiv_to_l_+1
  7113  10F2  0874               	movf	__tdiv_to_l_@f1+2,w
  7114  10F3  00A2               	movwf	??__tdiv_to_l_+2
  7115  10F4  1003               	clrc
  7116  10F5  0D21               	rlf	??__tdiv_to_l_+1,w
  7117  10F6  0D22               	rlf	??__tdiv_to_l_+2,w
  7118  10F7  00A3               	movwf	??__tdiv_to_l_+3
  7119  10F8  0823               	movf	??__tdiv_to_l_+3,w
  7120  10F9  00A9               	movwf	__tdiv_to_l_@exp1
  7121  10FA  0829               	movf	__tdiv_to_l_@exp1,w
  7122  10FB  1D03               	btfss	3,2
  7123  10FC  28FE               	goto	u4271
  7124  10FD  28FF               	goto	u4270
  7125  10FE                     u4271:
  7126  10FE  2908               	goto	l2959
  7127  10FF                     u4270:
  7128  10FF                     l2955:
  7129  10FF  3000               	movlw	0
  7130  1100  00F5               	movwf	?__tdiv_to_l_+3
  7131  1101  3000               	movlw	0
  7132  1102  00F4               	movwf	?__tdiv_to_l_+2
  7133  1103  3000               	movlw	0
  7134  1104  00F3               	movwf	?__tdiv_to_l_+1
  7135  1105  3000               	movlw	0
  7136  1106  00F2               	movwf	?__tdiv_to_l_
  7137  1107  29A8               	goto	l651
  7138  1108                     l2959:
  7139  1108  0876               	movf	__tdiv_to_l_@f2,w
  7140  1109  00A0               	movwf	??__tdiv_to_l_
  7141  110A  0877               	movf	__tdiv_to_l_@f2+1,w
  7142  110B  00A1               	movwf	??__tdiv_to_l_+1
  7143  110C  0878               	movf	__tdiv_to_l_@f2+2,w
  7144  110D  00A2               	movwf	??__tdiv_to_l_+2
  7145  110E  1003               	clrc
  7146  110F  0D21               	rlf	??__tdiv_to_l_+1,w
  7147  1110  0D22               	rlf	??__tdiv_to_l_+2,w
  7148  1111  00A3               	movwf	??__tdiv_to_l_+3
  7149  1112  0823               	movf	??__tdiv_to_l_+3,w
  7150  1113  00A8               	movwf	__tdiv_to_l_@cntr
  7151  1114  0828               	movf	__tdiv_to_l_@cntr,w
  7152  1115  1D03               	btfss	3,2
  7153  1116  2918               	goto	u4281
  7154  1117  2919               	goto	u4280
  7155  1118                     u4281:
  7156  1118  291A               	goto	l652
  7157  1119                     u4280:
  7158  1119  28FF               	goto	l2955
  7159  111A                     l652:
  7160  111A  17F3               	bsf	__tdiv_to_l_@f1+1,7
  7161  111B                     l2965:
  7162  111B  30FF               	movlw	255
  7163  111C  05F2               	andwf	__tdiv_to_l_@f1,f
  7164  111D  30FF               	movlw	255
  7165  111E  05F3               	andwf	__tdiv_to_l_@f1+1,f
  7166  111F  3000               	movlw	0
  7167  1120  05F4               	andwf	__tdiv_to_l_@f1+2,f
  7168  1121                     l2967:
  7169  1121  17F7               	bsf	__tdiv_to_l_@f2+1,7
  7170  1122  30FF               	movlw	255
  7171  1123  05F6               	andwf	__tdiv_to_l_@f2,f
  7172  1124  30FF               	movlw	255
  7173  1125  05F7               	andwf	__tdiv_to_l_@f2+1,f
  7174  1126  3000               	movlw	0
  7175  1127  05F8               	andwf	__tdiv_to_l_@f2+2,f
  7176  1128  3000               	movlw	0
  7177  1129  00A7               	movwf	__tdiv_to_l_@quot+3
  7178  112A  3000               	movlw	0
  7179  112B  00A6               	movwf	__tdiv_to_l_@quot+2
  7180  112C  3000               	movlw	0
  7181  112D  00A5               	movwf	__tdiv_to_l_@quot+1
  7182  112E  3000               	movlw	0
  7183  112F  00A4               	movwf	__tdiv_to_l_@quot
  7184  1130                     l2969:
  7185  1130  307F               	movlw	127
  7186  1131  02A9               	subwf	__tdiv_to_l_@exp1,f
  7187  1132                     l2971:
  7188  1132  3098               	movlw	152
  7189  1133  0728               	addwf	__tdiv_to_l_@cntr,w
  7190  1134  00A0               	movwf	??__tdiv_to_l_
  7191  1135  0820               	movf	??__tdiv_to_l_,w
  7192  1136  02A9               	subwf	__tdiv_to_l_@exp1,f
  7193  1137  3018               	movlw	24
  7194  1138  00A0               	movwf	??__tdiv_to_l_
  7195  1139  0820               	movf	??__tdiv_to_l_,w
  7196  113A  00A8               	movwf	__tdiv_to_l_@cntr
  7197  113B                     l2973:
  7198  113B  3001               	movlw	1
  7199  113C  00A0               	movwf	??__tdiv_to_l_
  7200  113D                     u4295:
  7201  113D  1003               	clrc
  7202  113E  0DA4               	rlf	__tdiv_to_l_@quot,f
  7203  113F  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7204  1140  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7205  1141  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7206  1142  0BA0               	decfsz	??__tdiv_to_l_,f
  7207  1143  293D               	goto	u4295
  7208  1144                     l2975:
  7209  1144  0878               	movf	__tdiv_to_l_@f2+2,w
  7210  1145  0274               	subwf	__tdiv_to_l_@f1+2,w
  7211  1146  1D03               	skipz
  7212  1147  294E               	goto	u4305
  7213  1148  0877               	movf	__tdiv_to_l_@f2+1,w
  7214  1149  0273               	subwf	__tdiv_to_l_@f1+1,w
  7215  114A  1D03               	skipz
  7216  114B  294E               	goto	u4305
  7217  114C  0876               	movf	__tdiv_to_l_@f2,w
  7218  114D  0272               	subwf	__tdiv_to_l_@f1,w
  7219  114E                     u4305:
  7220  114E  1C03               	skipc
  7221  114F  2951               	goto	u4301
  7222  1150  2952               	goto	u4300
  7223  1151                     u4301:
  7224  1151  295D               	goto	l2981
  7225  1152                     u4300:
  7226  1152                     l2977:
  7227  1152  0876               	movf	__tdiv_to_l_@f2,w
  7228  1153  02F2               	subwf	__tdiv_to_l_@f1,f
  7229  1154  0877               	movf	__tdiv_to_l_@f2+1,w
  7230  1155  1C03               	skipc
  7231  1156  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  7232  1157  02F3               	subwf	__tdiv_to_l_@f1+1,f
  7233  1158  0878               	movf	__tdiv_to_l_@f2+2,w
  7234  1159  1C03               	skipc
  7235  115A  0A78               	incf	__tdiv_to_l_@f2+2,w
  7236  115B  02F4               	subwf	__tdiv_to_l_@f1+2,f
  7237  115C                     l2979:
  7238  115C  1424               	bsf	__tdiv_to_l_@quot,0
  7239  115D                     l2981:
  7240  115D  3001               	movlw	1
  7241  115E                     u4315:
  7242  115E  1003               	clrc
  7243  115F  0DF2               	rlf	__tdiv_to_l_@f1,f
  7244  1160  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  7245  1161  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  7246  1162  3EFF               	addlw	-1
  7247  1163  1D03               	skipz
  7248  1164  295E               	goto	u4315
  7249  1165                     l2983:
  7250  1165  3001               	movlw	1
  7251  1166  02A8               	subwf	__tdiv_to_l_@cntr,f
  7252  1167  1D03               	btfss	3,2
  7253  1168  296A               	goto	u4321
  7254  1169  296B               	goto	u4320
  7255  116A                     u4321:
  7256  116A  293B               	goto	l2973
  7257  116B                     u4320:
  7258  116B                     l655:
  7259  116B  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7260  116C  296E               	goto	u4331
  7261  116D  296F               	goto	u4330
  7262  116E                     u4331:
  7263  116E  2989               	goto	l2993
  7264  116F                     u4330:
  7265  116F                     l2985:
  7266  116F  0829               	movf	__tdiv_to_l_@exp1,w
  7267  1170  3A80               	xorlw	128
  7268  1171  3E97               	addlw	151
  7269  1172  1803               	skipnc
  7270  1173  2975               	goto	u4341
  7271  1174  2976               	goto	u4340
  7272  1175                     u4341:
  7273  1175  2977               	goto	l2991
  7274  1176                     u4340:
  7275  1176  28FF               	goto	l2955
  7276  1177                     l2991:
  7277  1177  3001               	movlw	1
  7278  1178                     u4355:
  7279  1178  1003               	clrc
  7280  1179  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7281  117A  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7282  117B  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7283  117C  0CA4               	rrf	__tdiv_to_l_@quot,f
  7284  117D  3EFF               	addlw	-1
  7285  117E  1D03               	skipz
  7286  117F  2978               	goto	u4355
  7287  1180  3001               	movlw	1
  7288  1181  00A0               	movwf	??__tdiv_to_l_
  7289  1182  0820               	movf	??__tdiv_to_l_,w
  7290  1183  07A9               	addwf	__tdiv_to_l_@exp1,f
  7291  1184  1D03               	btfss	3,2
  7292  1185  2987               	goto	u4361
  7293  1186  2988               	goto	u4360
  7294  1187                     u4361:
  7295  1187  2977               	goto	l2991
  7296  1188                     u4360:
  7297  1188  29A0               	goto	l3001
  7298  1189                     l2993:
  7299  1189  3018               	movlw	24
  7300  118A  0229               	subwf	__tdiv_to_l_@exp1,w
  7301  118B  1C03               	skipc
  7302  118C  298E               	goto	u4371
  7303  118D  298F               	goto	u4370
  7304  118E                     u4371:
  7305  118E  299B               	goto	l662
  7306  118F                     u4370:
  7307  118F  28FF               	goto	l2955
  7308  1190                     l2999:
  7309  1190  3001               	movlw	1
  7310  1191  00A0               	movwf	??__tdiv_to_l_
  7311  1192                     u4385:
  7312  1192  1003               	clrc
  7313  1193  0DA4               	rlf	__tdiv_to_l_@quot,f
  7314  1194  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7315  1195  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7316  1196  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7317  1197  0BA0               	decfsz	??__tdiv_to_l_,f
  7318  1198  2992               	goto	u4385
  7319  1199  3001               	movlw	1
  7320  119A  02A9               	subwf	__tdiv_to_l_@exp1,f
  7321  119B                     l662:
  7322  119B  0829               	movf	__tdiv_to_l_@exp1,w
  7323  119C  1D03               	btfss	3,2
  7324  119D  299F               	goto	u4391
  7325  119E  29A0               	goto	u4390
  7326  119F                     u4391:
  7327  119F  2990               	goto	l2999
  7328  11A0                     u4390:
  7329  11A0                     l3001:
  7330  11A0  0827               	movf	__tdiv_to_l_@quot+3,w
  7331  11A1  00F5               	movwf	?__tdiv_to_l_+3
  7332  11A2  0826               	movf	__tdiv_to_l_@quot+2,w
  7333  11A3  00F4               	movwf	?__tdiv_to_l_+2
  7334  11A4  0825               	movf	__tdiv_to_l_@quot+1,w
  7335  11A5  00F3               	movwf	?__tdiv_to_l_+1
  7336  11A6  0824               	movf	__tdiv_to_l_@quot,w
  7337  11A7  00F2               	movwf	?__tdiv_to_l_
  7338  11A8                     l651:
  7339  11A8  0008               	return
  7340  11A9                     __end_of__tdiv_to_l_:
  7341                           
  7342                           	psect	text13
  7343  11A9                     __ptext13:	
  7344 ;; *************** function __div_to_l_ *****************
  7345 ;; Defined at:
  7346 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  f1              4    2[COMMON] unsigned long 
  7349 ;;  f2              4    6[COMMON] unsigned long 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  quot            4    0[BANK0 ] unsigned long 
  7352 ;;  exp1            1    5[BANK0 ] unsigned char 
  7353 ;;  cntr            1    4[BANK0 ] unsigned char 
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  4    2[COMMON] unsigned long 
  7356 ;; Registers used:
  7357 ;;		wreg, status,2, status,0
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7363 ;;      Params:         8       0       0       0       0
  7364 ;;      Locals:         0       6       0       0       0
  7365 ;;      Temps:          1       0       0       0       0
  7366 ;;      Totals:         9       6       0       0       0
  7367 ;;Total ram usage:       15 bytes
  7368 ;; Hardware stack levels used:    1
  7369 ;; Hardware stack levels required when called:    1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_sprintf
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           
  7378                           ;psect for function __div_to_l_
  7379  11A9                     __div_to_l_:
  7380  11A9                     l3005:	
  7381                           ;incstack = 0
  7382                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7383                           
  7384  11A9  1003               	clrc
  7385  11AA  0D74               	rlf	__div_to_l_@f1+2,w
  7386  11AB  0D75               	rlf	__div_to_l_@f1+3,w
  7387  11AC  00FA               	movwf	??__div_to_l_
  7388  11AD  087A               	movf	??__div_to_l_,w
  7389  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  7390  11AF  1303               	bcf	3,6	;RP1=0, select bank0
  7391  11B0  00A5               	movwf	__div_to_l_@exp1
  7392  11B1  0825               	movf	__div_to_l_@exp1,w
  7393  11B2  1D03               	btfss	3,2
  7394  11B3  29B5               	goto	u4401
  7395  11B4  29B6               	goto	u4400
  7396  11B5                     u4401:
  7397  11B5  29BF               	goto	l3011
  7398  11B6                     u4400:
  7399  11B6                     l3007:
  7400  11B6  3000               	movlw	0
  7401  11B7  00F5               	movwf	?__div_to_l_+3
  7402  11B8  3000               	movlw	0
  7403  11B9  00F4               	movwf	?__div_to_l_+2
  7404  11BA  3000               	movlw	0
  7405  11BB  00F3               	movwf	?__div_to_l_+1
  7406  11BC  3000               	movlw	0
  7407  11BD  00F2               	movwf	?__div_to_l_
  7408  11BE  2A66               	goto	l604
  7409  11BF                     l3011:
  7410  11BF  1003               	clrc
  7411  11C0  0D78               	rlf	__div_to_l_@f2+2,w
  7412  11C1  0D79               	rlf	__div_to_l_@f2+3,w
  7413  11C2  00FA               	movwf	??__div_to_l_
  7414  11C3  087A               	movf	??__div_to_l_,w
  7415  11C4  00A4               	movwf	__div_to_l_@cntr
  7416  11C5  0824               	movf	__div_to_l_@cntr,w
  7417  11C6  1D03               	btfss	3,2
  7418  11C7  29C9               	goto	u4411
  7419  11C8  29CA               	goto	u4410
  7420  11C9                     u4411:
  7421  11C9  29CB               	goto	l605
  7422  11CA                     u4410:
  7423  11CA  29B6               	goto	l3007
  7424  11CB                     l605:
  7425  11CB  17F4               	bsf	__div_to_l_@f1+2,7
  7426  11CC                     l3017:
  7427  11CC  30FF               	movlw	255
  7428  11CD  05F2               	andwf	__div_to_l_@f1,f
  7429  11CE  30FF               	movlw	255
  7430  11CF  05F3               	andwf	__div_to_l_@f1+1,f
  7431  11D0  30FF               	movlw	255
  7432  11D1  05F4               	andwf	__div_to_l_@f1+2,f
  7433  11D2  3000               	movlw	0
  7434  11D3  05F5               	andwf	__div_to_l_@f1+3,f
  7435  11D4                     l3019:
  7436  11D4  17F8               	bsf	__div_to_l_@f2+2,7
  7437  11D5  30FF               	movlw	255
  7438  11D6  05F6               	andwf	__div_to_l_@f2,f
  7439  11D7  30FF               	movlw	255
  7440  11D8  05F7               	andwf	__div_to_l_@f2+1,f
  7441  11D9  30FF               	movlw	255
  7442  11DA  05F8               	andwf	__div_to_l_@f2+2,f
  7443  11DB  3000               	movlw	0
  7444  11DC  05F9               	andwf	__div_to_l_@f2+3,f
  7445  11DD  3000               	movlw	0
  7446  11DE  00A3               	movwf	__div_to_l_@quot+3
  7447  11DF  3000               	movlw	0
  7448  11E0  00A2               	movwf	__div_to_l_@quot+2
  7449  11E1  3000               	movlw	0
  7450  11E2  00A1               	movwf	__div_to_l_@quot+1
  7451  11E3  3000               	movlw	0
  7452  11E4  00A0               	movwf	__div_to_l_@quot
  7453  11E5                     l3021:
  7454  11E5  307F               	movlw	127
  7455  11E6  02A5               	subwf	__div_to_l_@exp1,f
  7456  11E7                     l3023:
  7457  11E7  30A0               	movlw	160
  7458  11E8  0724               	addwf	__div_to_l_@cntr,w
  7459  11E9  00FA               	movwf	??__div_to_l_
  7460  11EA  087A               	movf	??__div_to_l_,w
  7461  11EB  02A5               	subwf	__div_to_l_@exp1,f
  7462  11EC  3020               	movlw	32
  7463  11ED  00FA               	movwf	??__div_to_l_
  7464  11EE  087A               	movf	??__div_to_l_,w
  7465  11EF  00A4               	movwf	__div_to_l_@cntr
  7466  11F0                     l3025:
  7467  11F0  3001               	movlw	1
  7468  11F1  00FA               	movwf	??__div_to_l_
  7469  11F2                     u4425:
  7470  11F2  1003               	clrc
  7471  11F3  0DA0               	rlf	__div_to_l_@quot,f
  7472  11F4  0DA1               	rlf	__div_to_l_@quot+1,f
  7473  11F5  0DA2               	rlf	__div_to_l_@quot+2,f
  7474  11F6  0DA3               	rlf	__div_to_l_@quot+3,f
  7475  11F7  0BFA               	decfsz	??__div_to_l_,f
  7476  11F8  29F2               	goto	u4425
  7477  11F9                     l3027:
  7478  11F9  0879               	movf	__div_to_l_@f2+3,w
  7479  11FA  0275               	subwf	__div_to_l_@f1+3,w
  7480  11FB  1D03               	skipz
  7481  11FC  2A07               	goto	u4435
  7482  11FD  0878               	movf	__div_to_l_@f2+2,w
  7483  11FE  0274               	subwf	__div_to_l_@f1+2,w
  7484  11FF  1D03               	skipz
  7485  1200  2A07               	goto	u4435
  7486  1201  0877               	movf	__div_to_l_@f2+1,w
  7487  1202  0273               	subwf	__div_to_l_@f1+1,w
  7488  1203  1D03               	skipz
  7489  1204  2A07               	goto	u4435
  7490  1205  0876               	movf	__div_to_l_@f2,w
  7491  1206  0272               	subwf	__div_to_l_@f1,w
  7492  1207                     u4435:
  7493  1207  1C03               	skipc
  7494  1208  2A0A               	goto	u4431
  7495  1209  2A0B               	goto	u4430
  7496  120A                     u4431:
  7497  120A  2A1A               	goto	l3033
  7498  120B                     u4430:
  7499  120B                     l3029:
  7500  120B  0876               	movf	__div_to_l_@f2,w
  7501  120C  02F2               	subwf	__div_to_l_@f1,f
  7502  120D  0877               	movf	__div_to_l_@f2+1,w
  7503  120E  1C03               	skipc
  7504  120F  0F77               	incfsz	__div_to_l_@f2+1,w
  7505  1210  02F3               	subwf	__div_to_l_@f1+1,f
  7506  1211  0878               	movf	__div_to_l_@f2+2,w
  7507  1212  1C03               	skipc
  7508  1213  0F78               	incfsz	__div_to_l_@f2+2,w
  7509  1214  02F4               	subwf	__div_to_l_@f1+2,f
  7510  1215  0879               	movf	__div_to_l_@f2+3,w
  7511  1216  1C03               	skipc
  7512  1217  0F79               	incfsz	__div_to_l_@f2+3,w
  7513  1218  02F5               	subwf	__div_to_l_@f1+3,f
  7514  1219                     l3031:
  7515  1219  1420               	bsf	__div_to_l_@quot,0
  7516  121A                     l3033:
  7517  121A  3001               	movlw	1
  7518  121B  00FA               	movwf	??__div_to_l_
  7519  121C                     u4445:
  7520  121C  1003               	clrc
  7521  121D  0DF2               	rlf	__div_to_l_@f1,f
  7522  121E  0DF3               	rlf	__div_to_l_@f1+1,f
  7523  121F  0DF4               	rlf	__div_to_l_@f1+2,f
  7524  1220  0DF5               	rlf	__div_to_l_@f1+3,f
  7525  1221  0BFA               	decfsz	??__div_to_l_,f
  7526  1222  2A1C               	goto	u4445
  7527  1223                     l3035:
  7528  1223  3001               	movlw	1
  7529  1224  02A4               	subwf	__div_to_l_@cntr,f
  7530  1225  1D03               	btfss	3,2
  7531  1226  2A28               	goto	u4451
  7532  1227  2A29               	goto	u4450
  7533  1228                     u4451:
  7534  1228  29F0               	goto	l3025
  7535  1229                     u4450:
  7536  1229                     l608:
  7537  1229  1FA5               	btfss	__div_to_l_@exp1,7
  7538  122A  2A2C               	goto	u4461
  7539  122B  2A2D               	goto	u4460
  7540  122C                     u4461:
  7541  122C  2A47               	goto	l3045
  7542  122D                     u4460:
  7543  122D                     l3037:
  7544  122D  0825               	movf	__div_to_l_@exp1,w
  7545  122E  3A80               	xorlw	128
  7546  122F  3E9F               	addlw	159
  7547  1230  1803               	skipnc
  7548  1231  2A33               	goto	u4471
  7549  1232  2A34               	goto	u4470
  7550  1233                     u4471:
  7551  1233  2A35               	goto	l3043
  7552  1234                     u4470:
  7553  1234  29B6               	goto	l3007
  7554  1235                     l3043:
  7555  1235  3001               	movlw	1
  7556  1236                     u4485:
  7557  1236  1003               	clrc
  7558  1237  0CA3               	rrf	__div_to_l_@quot+3,f
  7559  1238  0CA2               	rrf	__div_to_l_@quot+2,f
  7560  1239  0CA1               	rrf	__div_to_l_@quot+1,f
  7561  123A  0CA0               	rrf	__div_to_l_@quot,f
  7562  123B  3EFF               	addlw	-1
  7563  123C  1D03               	skipz
  7564  123D  2A36               	goto	u4485
  7565  123E  3001               	movlw	1
  7566  123F  00FA               	movwf	??__div_to_l_
  7567  1240  087A               	movf	??__div_to_l_,w
  7568  1241  07A5               	addwf	__div_to_l_@exp1,f
  7569  1242  1D03               	btfss	3,2
  7570  1243  2A45               	goto	u4491
  7571  1244  2A46               	goto	u4490
  7572  1245                     u4491:
  7573  1245  2A35               	goto	l3043
  7574  1246                     u4490:
  7575  1246  2A5E               	goto	l3053
  7576  1247                     l3045:
  7577  1247  3020               	movlw	32
  7578  1248  0225               	subwf	__div_to_l_@exp1,w
  7579  1249  1C03               	skipc
  7580  124A  2A4C               	goto	u4501
  7581  124B  2A4D               	goto	u4500
  7582  124C                     u4501:
  7583  124C  2A59               	goto	l615
  7584  124D                     u4500:
  7585  124D  29B6               	goto	l3007
  7586  124E                     l3051:
  7587  124E  3001               	movlw	1
  7588  124F  00FA               	movwf	??__div_to_l_
  7589  1250                     u4515:
  7590  1250  1003               	clrc
  7591  1251  0DA0               	rlf	__div_to_l_@quot,f
  7592  1252  0DA1               	rlf	__div_to_l_@quot+1,f
  7593  1253  0DA2               	rlf	__div_to_l_@quot+2,f
  7594  1254  0DA3               	rlf	__div_to_l_@quot+3,f
  7595  1255  0BFA               	decfsz	??__div_to_l_,f
  7596  1256  2A50               	goto	u4515
  7597  1257  3001               	movlw	1
  7598  1258  02A5               	subwf	__div_to_l_@exp1,f
  7599  1259                     l615:
  7600  1259  0825               	movf	__div_to_l_@exp1,w
  7601  125A  1D03               	btfss	3,2
  7602  125B  2A5D               	goto	u4521
  7603  125C  2A5E               	goto	u4520
  7604  125D                     u4521:
  7605  125D  2A4E               	goto	l3051
  7606  125E                     u4520:
  7607  125E                     l3053:
  7608  125E  0823               	movf	__div_to_l_@quot+3,w
  7609  125F  00F5               	movwf	?__div_to_l_+3
  7610  1260  0822               	movf	__div_to_l_@quot+2,w
  7611  1261  00F4               	movwf	?__div_to_l_+2
  7612  1262  0821               	movf	__div_to_l_@quot+1,w
  7613  1263  00F3               	movwf	?__div_to_l_+1
  7614  1264  0820               	movf	__div_to_l_@quot,w
  7615  1265  00F2               	movwf	?__div_to_l_
  7616  1266                     l604:
  7617  1266  0008               	return
  7618  1267                     __end_of__div_to_l_:
  7619                           
  7620                           	psect	text14
  7621  1F44                     __ptext14:	
  7622 ;; *************** function ___xxtofl *****************
  7623 ;; Defined at:
  7624 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  sign            1    wreg     unsigned char 
  7627 ;;  val             4    2[COMMON] long 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  sign            1    0[BANK0 ] unsigned char 
  7630 ;;  arg             4    2[BANK0 ] unsigned long 
  7631 ;;  exp             1    1[BANK0 ] unsigned char 
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  4    2[COMMON] unsigned char 
  7634 ;; Registers used:
  7635 ;;		wreg, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 0/0
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7641 ;;      Params:         4       0       0       0       0
  7642 ;;      Locals:         0       6       0       0       0
  7643 ;;      Temps:          4       0       0       0       0
  7644 ;;      Totals:         8       6       0       0       0
  7645 ;;Total ram usage:       14 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    1
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_sprintf
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function ___xxtofl
  7657  1F44                     ___xxtofl:
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7661                           ;___xxtofl@sign stored from wreg
  7662  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7663  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7664  1F46  00A0               	movwf	___xxtofl@sign
  7665  1F47                     l3197:
  7666  1F47  0820               	movf	___xxtofl@sign,w
  7667  1F48  1903               	btfsc	3,2
  7668  1F49  2F4B               	goto	u4911
  7669  1F4A  2F4C               	goto	u4910
  7670  1F4B                     u4911:
  7671  1F4B  2F60               	goto	l3203
  7672  1F4C                     u4910:
  7673  1F4C                     l3199:
  7674  1F4C  1FF5               	btfss	___xxtofl@val+3,7
  7675  1F4D  2F4F               	goto	u4921
  7676  1F4E  2F50               	goto	u4920
  7677  1F4F                     u4921:
  7678  1F4F  2F60               	goto	l3203
  7679  1F50                     u4920:
  7680  1F50                     l3201:
  7681  1F50  0972               	comf	___xxtofl@val,w
  7682  1F51  00A2               	movwf	___xxtofl@arg
  7683  1F52  0973               	comf	___xxtofl@val+1,w
  7684  1F53  00A3               	movwf	___xxtofl@arg+1
  7685  1F54  0974               	comf	___xxtofl@val+2,w
  7686  1F55  00A4               	movwf	___xxtofl@arg+2
  7687  1F56  0975               	comf	___xxtofl@val+3,w
  7688  1F57  00A5               	movwf	___xxtofl@arg+3
  7689  1F58  0AA2               	incf	___xxtofl@arg,f
  7690  1F59  1903               	skipnz
  7691  1F5A  0AA3               	incf	___xxtofl@arg+1,f
  7692  1F5B  1903               	skipnz
  7693  1F5C  0AA4               	incf	___xxtofl@arg+2,f
  7694  1F5D  1903               	skipnz
  7695  1F5E  0AA5               	incf	___xxtofl@arg+3,f
  7696  1F5F  2F68               	goto	l901
  7697  1F60                     l3203:
  7698  1F60  0875               	movf	___xxtofl@val+3,w
  7699  1F61  00A5               	movwf	___xxtofl@arg+3
  7700  1F62  0874               	movf	___xxtofl@val+2,w
  7701  1F63  00A4               	movwf	___xxtofl@arg+2
  7702  1F64  0873               	movf	___xxtofl@val+1,w
  7703  1F65  00A3               	movwf	___xxtofl@arg+1
  7704  1F66  0872               	movf	___xxtofl@val,w
  7705  1F67  00A2               	movwf	___xxtofl@arg
  7706  1F68                     l901:
  7707  1F68  0875               	movf	___xxtofl@val+3,w
  7708  1F69  0474               	iorwf	___xxtofl@val+2,w
  7709  1F6A  0473               	iorwf	___xxtofl@val+1,w
  7710  1F6B  0472               	iorwf	___xxtofl@val,w
  7711  1F6C  1D03               	skipz
  7712  1F6D  2F6F               	goto	u4931
  7713  1F6E  2F70               	goto	u4930
  7714  1F6F                     u4931:
  7715  1F6F  2F79               	goto	l3209
  7716  1F70                     u4930:
  7717  1F70                     l3205:
  7718  1F70  3000               	movlw	0
  7719  1F71  00F5               	movwf	?___xxtofl+3
  7720  1F72  3000               	movlw	0
  7721  1F73  00F4               	movwf	?___xxtofl+2
  7722  1F74  3000               	movlw	0
  7723  1F75  00F3               	movwf	?___xxtofl+1
  7724  1F76  3000               	movlw	0
  7725  1F77  00F2               	movwf	?___xxtofl
  7726  1F78  2FFF               	goto	l903
  7727  1F79                     l3209:
  7728  1F79  3096               	movlw	150
  7729  1F7A  00F6               	movwf	??___xxtofl
  7730  1F7B  0876               	movf	??___xxtofl,w
  7731  1F7C  00A1               	movwf	___xxtofl@exp
  7732  1F7D  2F8B               	goto	l3213
  7733  1F7E                     l3211:
  7734  1F7E  3001               	movlw	1
  7735  1F7F  00F6               	movwf	??___xxtofl
  7736  1F80  0876               	movf	??___xxtofl,w
  7737  1F81  07A1               	addwf	___xxtofl@exp,f
  7738  1F82  3001               	movlw	1
  7739  1F83                     u4945:
  7740  1F83  1003               	clrc
  7741  1F84  0CA5               	rrf	___xxtofl@arg+3,f
  7742  1F85  0CA4               	rrf	___xxtofl@arg+2,f
  7743  1F86  0CA3               	rrf	___xxtofl@arg+1,f
  7744  1F87  0CA2               	rrf	___xxtofl@arg,f
  7745  1F88  3EFF               	addlw	-1
  7746  1F89  1D03               	skipz
  7747  1F8A  2F83               	goto	u4945
  7748  1F8B                     l3213:
  7749  1F8B  30FE               	movlw	254
  7750  1F8C  0525               	andwf	___xxtofl@arg+3,w
  7751  1F8D  1D03               	btfss	3,2
  7752  1F8E  2F90               	goto	u4951
  7753  1F8F  2F91               	goto	u4950
  7754  1F90                     u4951:
  7755  1F90  2F7E               	goto	l3211
  7756  1F91                     u4950:
  7757  1F91  2FAD               	goto	l907
  7758  1F92                     l3215:
  7759  1F92  3001               	movlw	1
  7760  1F93  00F6               	movwf	??___xxtofl
  7761  1F94  0876               	movf	??___xxtofl,w
  7762  1F95  07A1               	addwf	___xxtofl@exp,f
  7763  1F96                     l3217:
  7764  1F96  3001               	movlw	1
  7765  1F97  07A2               	addwf	___xxtofl@arg,f
  7766  1F98  3000               	movlw	0
  7767  1F99  1803               	skipnc
  7768  1F9A  3001               	movlw	1
  7769  1F9B  07A3               	addwf	___xxtofl@arg+1,f
  7770  1F9C  3000               	movlw	0
  7771  1F9D  1803               	skipnc
  7772  1F9E  3001               	movlw	1
  7773  1F9F  07A4               	addwf	___xxtofl@arg+2,f
  7774  1FA0  3000               	movlw	0
  7775  1FA1  1803               	skipnc
  7776  1FA2  3001               	movlw	1
  7777  1FA3  07A5               	addwf	___xxtofl@arg+3,f
  7778  1FA4                     l3219:
  7779  1FA4  3001               	movlw	1
  7780  1FA5                     u4965:
  7781  1FA5  1003               	clrc
  7782  1FA6  0CA5               	rrf	___xxtofl@arg+3,f
  7783  1FA7  0CA4               	rrf	___xxtofl@arg+2,f
  7784  1FA8  0CA3               	rrf	___xxtofl@arg+1,f
  7785  1FA9  0CA2               	rrf	___xxtofl@arg,f
  7786  1FAA  3EFF               	addlw	-1
  7787  1FAB  1D03               	skipz
  7788  1FAC  2FA5               	goto	u4965
  7789  1FAD                     l907:
  7790  1FAD  30FF               	movlw	255
  7791  1FAE  0525               	andwf	___xxtofl@arg+3,w
  7792  1FAF  1D03               	btfss	3,2
  7793  1FB0  2FB2               	goto	u4971
  7794  1FB1  2FB3               	goto	u4970
  7795  1FB2                     u4971:
  7796  1FB2  2F92               	goto	l3215
  7797  1FB3                     u4970:
  7798  1FB3  2FBF               	goto	l3223
  7799  1FB4                     l3221:
  7800  1FB4  3001               	movlw	1
  7801  1FB5  02A1               	subwf	___xxtofl@exp,f
  7802  1FB6  3001               	movlw	1
  7803  1FB7  00F6               	movwf	??___xxtofl
  7804  1FB8                     u4985:
  7805  1FB8  1003               	clrc
  7806  1FB9  0DA2               	rlf	___xxtofl@arg,f
  7807  1FBA  0DA3               	rlf	___xxtofl@arg+1,f
  7808  1FBB  0DA4               	rlf	___xxtofl@arg+2,f
  7809  1FBC  0DA5               	rlf	___xxtofl@arg+3,f
  7810  1FBD  0BF6               	decfsz	??___xxtofl,f
  7811  1FBE  2FB8               	goto	u4985
  7812  1FBF                     l3223:
  7813  1FBF  1BA4               	btfsc	___xxtofl@arg+2,7
  7814  1FC0  2FC2               	goto	u4991
  7815  1FC1  2FC3               	goto	u4990
  7816  1FC2                     u4991:
  7817  1FC2  2FC9               	goto	l914
  7818  1FC3                     u4990:
  7819  1FC3                     l3225:
  7820  1FC3  3002               	movlw	2
  7821  1FC4  0221               	subwf	___xxtofl@exp,w
  7822  1FC5  1803               	skipnc
  7823  1FC6  2FC8               	goto	u5001
  7824  1FC7  2FC9               	goto	u5000
  7825  1FC8                     u5001:
  7826  1FC8  2FB4               	goto	l3221
  7827  1FC9                     u5000:
  7828  1FC9                     l914:
  7829  1FC9  1821               	btfsc	___xxtofl@exp,0
  7830  1FCA  2FCC               	goto	u5011
  7831  1FCB  2FCD               	goto	u5010
  7832  1FCC                     u5011:
  7833  1FCC  2FD5               	goto	l915
  7834  1FCD                     u5010:
  7835  1FCD                     l3227:
  7836  1FCD  30FF               	movlw	255
  7837  1FCE  05A2               	andwf	___xxtofl@arg,f
  7838  1FCF  30FF               	movlw	255
  7839  1FD0  05A3               	andwf	___xxtofl@arg+1,f
  7840  1FD1  307F               	movlw	127
  7841  1FD2  05A4               	andwf	___xxtofl@arg+2,f
  7842  1FD3  30FF               	movlw	255
  7843  1FD4  05A5               	andwf	___xxtofl@arg+3,f
  7844  1FD5                     l915:
  7845  1FD5  1003               	clrc
  7846  1FD6  0CA1               	rrf	___xxtofl@exp,f
  7847  1FD7                     l3229:
  7848  1FD7  0821               	movf	___xxtofl@exp,w
  7849  1FD8  00F6               	movwf	??___xxtofl
  7850  1FD9  01F7               	clrf	??___xxtofl+1
  7851  1FDA  01F8               	clrf	??___xxtofl+2
  7852  1FDB  01F9               	clrf	??___xxtofl+3
  7853  1FDC  3018               	movlw	24
  7854  1FDD                     u5025:
  7855  1FDD  1003               	clrc
  7856  1FDE  0DF6               	rlf	??___xxtofl,f
  7857  1FDF  0DF7               	rlf	??___xxtofl+1,f
  7858  1FE0  0DF8               	rlf	??___xxtofl+2,f
  7859  1FE1  0DF9               	rlf	??___xxtofl+3,f
  7860  1FE2                     u5020:
  7861  1FE2  3EFF               	addlw	-1
  7862  1FE3  1D03               	skipz
  7863  1FE4  2FDD               	goto	u5025
  7864  1FE5  0876               	movf	??___xxtofl,w
  7865  1FE6  04A2               	iorwf	___xxtofl@arg,f
  7866  1FE7  0877               	movf	??___xxtofl+1,w
  7867  1FE8  04A3               	iorwf	___xxtofl@arg+1,f
  7868  1FE9  0878               	movf	??___xxtofl+2,w
  7869  1FEA  04A4               	iorwf	___xxtofl@arg+2,f
  7870  1FEB  0879               	movf	??___xxtofl+3,w
  7871  1FEC  04A5               	iorwf	___xxtofl@arg+3,f
  7872  1FED                     l3231:
  7873  1FED  0820               	movf	___xxtofl@sign,w
  7874  1FEE  1903               	btfsc	3,2
  7875  1FEF  2FF1               	goto	u5031
  7876  1FF0  2FF2               	goto	u5030
  7877  1FF1                     u5031:
  7878  1FF1  2FF7               	goto	l3237
  7879  1FF2                     u5030:
  7880  1FF2                     l3233:
  7881  1FF2  1FF5               	btfss	___xxtofl@val+3,7
  7882  1FF3  2FF5               	goto	u5041
  7883  1FF4  2FF6               	goto	u5040
  7884  1FF5                     u5041:
  7885  1FF5  2FF7               	goto	l3237
  7886  1FF6                     u5040:
  7887  1FF6                     l3235:
  7888  1FF6  17A5               	bsf	___xxtofl@arg+3,7
  7889  1FF7                     l3237:
  7890  1FF7  0825               	movf	___xxtofl@arg+3,w
  7891  1FF8  00F5               	movwf	?___xxtofl+3
  7892  1FF9  0824               	movf	___xxtofl@arg+2,w
  7893  1FFA  00F4               	movwf	?___xxtofl+2
  7894  1FFB  0823               	movf	___xxtofl@arg+1,w
  7895  1FFC  00F3               	movwf	?___xxtofl+1
  7896  1FFD  0822               	movf	___xxtofl@arg,w
  7897  1FFE  00F2               	movwf	?___xxtofl
  7898  1FFF                     l903:
  7899  1FFF  0008               	return
  7900  2000                     __end_of___xxtofl:
  7901                           
  7902                           	psect	text15
  7903  1A34                     __ptext15:	
  7904 ;; *************** function ___wmul *****************
  7905 ;; Defined at:
  7906 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  multiplier      2    2[COMMON] unsigned int 
  7909 ;;  multiplicand    2    4[COMMON] unsigned int 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  product         2    6[COMMON] unsigned int 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2    2[COMMON] unsigned int 
  7914 ;; Registers used:
  7915 ;;		wreg, status,2, status,0
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7921 ;;      Params:         4       0       0       0       0
  7922 ;;      Locals:         2       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0
  7924 ;;      Totals:         6       0       0       0       0
  7925 ;;Total ram usage:        6 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    1
  7928 ;; This function calls:
  7929 ;;		Nothing
  7930 ;; This function is called by:
  7931 ;;		_sprintf
  7932 ;; This function uses a non-reentrant model
  7933 ;;
  7934                           
  7935                           
  7936                           ;psect for function ___wmul
  7937  1A34                     ___wmul:
  7938  1A34                     l3057:	
  7939                           ;incstack = 0
  7940                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7941                           
  7942  1A34  01F6               	clrf	___wmul@product
  7943  1A35  01F7               	clrf	___wmul@product+1
  7944  1A36                     l3059:
  7945  1A36  1C72               	btfss	___wmul@multiplier,0
  7946  1A37  2A39               	goto	u4531
  7947  1A38  2A3A               	goto	u4530
  7948  1A39                     u4531:
  7949  1A39  2A40               	goto	l434
  7950  1A3A                     u4530:
  7951  1A3A                     l3061:
  7952  1A3A  0874               	movf	___wmul@multiplicand,w
  7953  1A3B  07F6               	addwf	___wmul@product,f
  7954  1A3C  1803               	skipnc
  7955  1A3D  0AF7               	incf	___wmul@product+1,f
  7956  1A3E  0875               	movf	___wmul@multiplicand+1,w
  7957  1A3F  07F7               	addwf	___wmul@product+1,f
  7958  1A40                     l434:
  7959  1A40  3001               	movlw	1
  7960  1A41                     u4545:
  7961  1A41  1003               	clrc
  7962  1A42  0DF4               	rlf	___wmul@multiplicand,f
  7963  1A43  0DF5               	rlf	___wmul@multiplicand+1,f
  7964  1A44  3EFF               	addlw	-1
  7965  1A45  1D03               	skipz
  7966  1A46  2A41               	goto	u4545
  7967  1A47                     l3063:
  7968  1A47  3001               	movlw	1
  7969  1A48                     u4555:
  7970  1A48  1003               	clrc
  7971  1A49  0CF3               	rrf	___wmul@multiplier+1,f
  7972  1A4A  0CF2               	rrf	___wmul@multiplier,f
  7973  1A4B  3EFF               	addlw	-1
  7974  1A4C  1D03               	skipz
  7975  1A4D  2A48               	goto	u4555
  7976  1A4E                     l3065:
  7977  1A4E  0872               	movf	___wmul@multiplier,w
  7978  1A4F  0473               	iorwf	___wmul@multiplier+1,w
  7979  1A50  1D03               	btfss	3,2
  7980  1A51  2A53               	goto	u4561
  7981  1A52  2A54               	goto	u4560
  7982  1A53                     u4561:
  7983  1A53  2A36               	goto	l3059
  7984  1A54                     u4560:
  7985  1A54                     l3067:
  7986  1A54  0877               	movf	___wmul@product+1,w
  7987  1A55  00F3               	movwf	?___wmul+1
  7988  1A56  0876               	movf	___wmul@product,w
  7989  1A57  00F2               	movwf	?___wmul
  7990  1A58                     l436:
  7991  1A58  0008               	return
  7992  1A59                     __end_of___wmul:
  7993                           
  7994                           	psect	text16
  7995  1CA4                     __ptext16:	
  7996 ;; *************** function ___llmod *****************
  7997 ;; Defined at:
  7998 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  divisor         4    5[BANK0 ] unsigned long 
  8001 ;;  dividend        4    9[BANK0 ] unsigned long 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;  counter         1   14[BANK0 ] unsigned char 
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  4    5[BANK0 ] unsigned long 
  8006 ;; Registers used:
  8007 ;;		wreg, status,2, status,0
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8013 ;;      Params:         0       8       0       0       0
  8014 ;;      Locals:         0       1       0       0       0
  8015 ;;      Temps:          0       1       0       0       0
  8016 ;;      Totals:         0      10       0       0       0
  8017 ;;Total ram usage:       10 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; Hardware stack levels required when called:    1
  8020 ;; This function calls:
  8021 ;;		Nothing
  8022 ;; This function is called by:
  8023 ;;		_sprintf
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           
  8028                           ;psect for function ___llmod
  8029  1CA4                     ___llmod:
  8030  1CA4                     l3799:	
  8031                           ;incstack = 0
  8032                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8033                           
  8034  1CA4  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1CA5  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1CA6  0828               	movf	___llmod@divisor+3,w
  8037  1CA7  0427               	iorwf	___llmod@divisor+2,w
  8038  1CA8  0426               	iorwf	___llmod@divisor+1,w
  8039  1CA9  0425               	iorwf	___llmod@divisor,w
  8040  1CAA  1903               	skipnz
  8041  1CAB  2CAD               	goto	u5701
  8042  1CAC  2CAE               	goto	u5700
  8043  1CAD                     u5701:
  8044  1CAD  2CF1               	goto	l3815
  8045  1CAE                     u5700:
  8046  1CAE                     l3801:
  8047  1CAE  01AE               	clrf	___llmod@counter
  8048  1CAF  0AAE               	incf	___llmod@counter,f
  8049  1CB0  2CBE               	goto	l3805
  8050  1CB1                     l3803:
  8051  1CB1  3001               	movlw	1
  8052  1CB2  00AD               	movwf	??___llmod
  8053  1CB3                     u5715:
  8054  1CB3  1003               	clrc
  8055  1CB4  0DA5               	rlf	___llmod@divisor,f
  8056  1CB5  0DA6               	rlf	___llmod@divisor+1,f
  8057  1CB6  0DA7               	rlf	___llmod@divisor+2,f
  8058  1CB7  0DA8               	rlf	___llmod@divisor+3,f
  8059  1CB8  0BAD               	decfsz	??___llmod,f
  8060  1CB9  2CB3               	goto	u5715
  8061  1CBA  3001               	movlw	1
  8062  1CBB  00AD               	movwf	??___llmod
  8063  1CBC  082D               	movf	??___llmod,w
  8064  1CBD  07AE               	addwf	___llmod@counter,f
  8065  1CBE                     l3805:
  8066  1CBE  1FA8               	btfss	___llmod@divisor+3,7
  8067  1CBF  2CC1               	goto	u5721
  8068  1CC0  2CC2               	goto	u5720
  8069  1CC1                     u5721:
  8070  1CC1  2CB1               	goto	l3803
  8071  1CC2                     u5720:
  8072  1CC2                     l3807:
  8073  1CC2  0828               	movf	___llmod@divisor+3,w
  8074  1CC3  022C               	subwf	___llmod@dividend+3,w
  8075  1CC4  1D03               	skipz
  8076  1CC5  2CD0               	goto	u5735
  8077  1CC6  0827               	movf	___llmod@divisor+2,w
  8078  1CC7  022B               	subwf	___llmod@dividend+2,w
  8079  1CC8  1D03               	skipz
  8080  1CC9  2CD0               	goto	u5735
  8081  1CCA  0826               	movf	___llmod@divisor+1,w
  8082  1CCB  022A               	subwf	___llmod@dividend+1,w
  8083  1CCC  1D03               	skipz
  8084  1CCD  2CD0               	goto	u5735
  8085  1CCE  0825               	movf	___llmod@divisor,w
  8086  1CCF  0229               	subwf	___llmod@dividend,w
  8087  1CD0                     u5735:
  8088  1CD0  1C03               	skipc
  8089  1CD1  2CD3               	goto	u5731
  8090  1CD2  2CD4               	goto	u5730
  8091  1CD3                     u5731:
  8092  1CD3  2CE2               	goto	l3811
  8093  1CD4                     u5730:
  8094  1CD4                     l3809:
  8095  1CD4  0825               	movf	___llmod@divisor,w
  8096  1CD5  02A9               	subwf	___llmod@dividend,f
  8097  1CD6  0826               	movf	___llmod@divisor+1,w
  8098  1CD7  1C03               	skipc
  8099  1CD8  0F26               	incfsz	___llmod@divisor+1,w
  8100  1CD9  02AA               	subwf	___llmod@dividend+1,f
  8101  1CDA  0827               	movf	___llmod@divisor+2,w
  8102  1CDB  1C03               	skipc
  8103  1CDC  0F27               	incfsz	___llmod@divisor+2,w
  8104  1CDD  02AB               	subwf	___llmod@dividend+2,f
  8105  1CDE  0828               	movf	___llmod@divisor+3,w
  8106  1CDF  1C03               	skipc
  8107  1CE0  0F28               	incfsz	___llmod@divisor+3,w
  8108  1CE1  02AC               	subwf	___llmod@dividend+3,f
  8109  1CE2                     l3811:
  8110  1CE2  3001               	movlw	1
  8111  1CE3                     u5745:
  8112  1CE3  1003               	clrc
  8113  1CE4  0CA8               	rrf	___llmod@divisor+3,f
  8114  1CE5  0CA7               	rrf	___llmod@divisor+2,f
  8115  1CE6  0CA6               	rrf	___llmod@divisor+1,f
  8116  1CE7  0CA5               	rrf	___llmod@divisor,f
  8117  1CE8  3EFF               	addlw	-1
  8118  1CE9  1D03               	skipz
  8119  1CEA  2CE3               	goto	u5745
  8120  1CEB                     l3813:
  8121  1CEB  3001               	movlw	1
  8122  1CEC  02AE               	subwf	___llmod@counter,f
  8123  1CED  1D03               	btfss	3,2
  8124  1CEE  2CF0               	goto	u5751
  8125  1CEF  2CF1               	goto	u5750
  8126  1CF0                     u5751:
  8127  1CF0  2CC2               	goto	l3807
  8128  1CF1                     u5750:
  8129  1CF1                     l3815:
  8130  1CF1  082C               	movf	___llmod@dividend+3,w
  8131  1CF2  00A8               	movwf	?___llmod+3
  8132  1CF3  082B               	movf	___llmod@dividend+2,w
  8133  1CF4  00A7               	movwf	?___llmod+2
  8134  1CF5  082A               	movf	___llmod@dividend+1,w
  8135  1CF6  00A6               	movwf	?___llmod+1
  8136  1CF7  0829               	movf	___llmod@dividend,w
  8137  1CF8  00A5               	movwf	?___llmod
  8138  1CF9                     l690:
  8139  1CF9  0008               	return
  8140  1CFA                     __end_of___llmod:
  8141                           
  8142                           	psect	text17
  8143  1E24                     __ptext17:	
  8144 ;; *************** function ___fltol *****************
  8145 ;; Defined at:
  8146 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  f1              4   53[BANK0 ] unsigned long 
  8149 ;; Auto vars:     Size  Location     Type
  8150 ;;  exp1            1   63[BANK0 ] unsigned char 
  8151 ;;  sign1           1   62[BANK0 ] unsigned char 
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  4   53[BANK0 ] long 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8161 ;;      Params:         0       4       0       0       0
  8162 ;;      Locals:         0       2       0       0       0
  8163 ;;      Temps:          0       5       0       0       0
  8164 ;;      Totals:         0      11       0       0       0
  8165 ;;Total ram usage:       11 bytes
  8166 ;; Hardware stack levels used:    1
  8167 ;; Hardware stack levels required when called:    1
  8168 ;; This function calls:
  8169 ;;		Nothing
  8170 ;; This function is called by:
  8171 ;;		_sprintf
  8172 ;; This function uses a non-reentrant model
  8173 ;;
  8174                           
  8175                           
  8176                           ;psect for function ___fltol
  8177  1E24                     ___fltol:
  8178  1E24                     l3135:	
  8179                           ;incstack = 0
  8180                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8181                           
  8182  1E24  1003               	clrc
  8183  1E25  1283               	bcf	3,5	;RP0=0, select bank0
  8184  1E26  1303               	bcf	3,6	;RP1=0, select bank0
  8185  1E27  0D57               	rlf	___fltol@f1+2,w
  8186  1E28  0D58               	rlf	___fltol@f1+3,w
  8187  1E29  00D9               	movwf	??___fltol
  8188  1E2A  0859               	movf	??___fltol,w
  8189  1E2B  00DF               	movwf	___fltol@exp1
  8190  1E2C  085F               	movf	___fltol@exp1,w
  8191  1E2D  1D03               	btfss	3,2
  8192  1E2E  2E30               	goto	u4751
  8193  1E2F  2E31               	goto	u4750
  8194  1E30                     u4751:
  8195  1E30  2E3A               	goto	l3141
  8196  1E31                     u4750:
  8197  1E31                     l3137:
  8198  1E31  3000               	movlw	0
  8199  1E32  00D8               	movwf	?___fltol+3
  8200  1E33  3000               	movlw	0
  8201  1E34  00D7               	movwf	?___fltol+2
  8202  1E35  3000               	movlw	0
  8203  1E36  00D6               	movwf	?___fltol+1
  8204  1E37  3000               	movlw	0
  8205  1E38  00D5               	movwf	?___fltol
  8206  1E39  2E9F               	goto	l637
  8207  1E3A                     l3141:
  8208  1E3A  0855               	movf	___fltol@f1,w
  8209  1E3B  00D9               	movwf	??___fltol
  8210  1E3C  0856               	movf	___fltol@f1+1,w
  8211  1E3D  00DA               	movwf	??___fltol+1
  8212  1E3E  0857               	movf	___fltol@f1+2,w
  8213  1E3F  00DB               	movwf	??___fltol+2
  8214  1E40  0858               	movf	___fltol@f1+3,w
  8215  1E41  00DC               	movwf	??___fltol+3
  8216  1E42  301F               	movlw	31
  8217  1E43                     u4765:
  8218  1E43  1003               	clrc
  8219  1E44  0CDC               	rrf	??___fltol+3,f
  8220  1E45  0CDB               	rrf	??___fltol+2,f
  8221  1E46  0CDA               	rrf	??___fltol+1,f
  8222  1E47  0CD9               	rrf	??___fltol,f
  8223  1E48                     u4760:
  8224  1E48  3EFF               	addlw	-1
  8225  1E49  1D03               	skipz
  8226  1E4A  2E43               	goto	u4765
  8227  1E4B  0859               	movf	??___fltol,w
  8228  1E4C  00DD               	movwf	??___fltol+4
  8229  1E4D  085D               	movf	??___fltol+4,w
  8230  1E4E  00DE               	movwf	___fltol@sign1
  8231  1E4F                     l3143:
  8232  1E4F  17D7               	bsf	___fltol@f1+2,7
  8233  1E50                     l3145:
  8234  1E50  30FF               	movlw	255
  8235  1E51  05D5               	andwf	___fltol@f1,f
  8236  1E52  30FF               	movlw	255
  8237  1E53  05D6               	andwf	___fltol@f1+1,f
  8238  1E54  30FF               	movlw	255
  8239  1E55  05D7               	andwf	___fltol@f1+2,f
  8240  1E56  3000               	movlw	0
  8241  1E57  05D8               	andwf	___fltol@f1+3,f
  8242  1E58                     l3147:
  8243  1E58  3096               	movlw	150
  8244  1E59  02DF               	subwf	___fltol@exp1,f
  8245  1E5A                     l3149:
  8246  1E5A  1FDF               	btfss	___fltol@exp1,7
  8247  1E5B  2E5D               	goto	u4771
  8248  1E5C  2E5E               	goto	u4770
  8249  1E5D                     u4771:
  8250  1E5D  2E78               	goto	l3159
  8251  1E5E                     u4770:
  8252  1E5E                     l3151:
  8253  1E5E  085F               	movf	___fltol@exp1,w
  8254  1E5F  3A80               	xorlw	128
  8255  1E60  3E97               	addlw	151
  8256  1E61  1803               	skipnc
  8257  1E62  2E64               	goto	u4781
  8258  1E63  2E65               	goto	u4780
  8259  1E64                     u4781:
  8260  1E64  2E66               	goto	l3157
  8261  1E65                     u4780:
  8262  1E65  2E31               	goto	l3137
  8263  1E66                     l3157:
  8264  1E66  3001               	movlw	1
  8265  1E67                     u4795:
  8266  1E67  1003               	clrc
  8267  1E68  0CD8               	rrf	___fltol@f1+3,f
  8268  1E69  0CD7               	rrf	___fltol@f1+2,f
  8269  1E6A  0CD6               	rrf	___fltol@f1+1,f
  8270  1E6B  0CD5               	rrf	___fltol@f1,f
  8271  1E6C  3EFF               	addlw	-1
  8272  1E6D  1D03               	skipz
  8273  1E6E  2E67               	goto	u4795
  8274  1E6F  3001               	movlw	1
  8275  1E70  00D9               	movwf	??___fltol
  8276  1E71  0859               	movf	??___fltol,w
  8277  1E72  07DF               	addwf	___fltol@exp1,f
  8278  1E73  1D03               	btfss	3,2
  8279  1E74  2E76               	goto	u4801
  8280  1E75  2E77               	goto	u4800
  8281  1E76                     u4801:
  8282  1E76  2E66               	goto	l3157
  8283  1E77                     u4800:
  8284  1E77  2E8F               	goto	l3167
  8285  1E78                     l3159:
  8286  1E78  3020               	movlw	32
  8287  1E79  025F               	subwf	___fltol@exp1,w
  8288  1E7A  1C03               	skipc
  8289  1E7B  2E7D               	goto	u4811
  8290  1E7C  2E7E               	goto	u4810
  8291  1E7D                     u4811:
  8292  1E7D  2E8A               	goto	l644
  8293  1E7E                     u4810:
  8294  1E7E  2E31               	goto	l3137
  8295  1E7F                     l3165:
  8296  1E7F  3001               	movlw	1
  8297  1E80  00D9               	movwf	??___fltol
  8298  1E81                     u4825:
  8299  1E81  1003               	clrc
  8300  1E82  0DD5               	rlf	___fltol@f1,f
  8301  1E83  0DD6               	rlf	___fltol@f1+1,f
  8302  1E84  0DD7               	rlf	___fltol@f1+2,f
  8303  1E85  0DD8               	rlf	___fltol@f1+3,f
  8304  1E86  0BD9               	decfsz	??___fltol,f
  8305  1E87  2E81               	goto	u4825
  8306  1E88  3001               	movlw	1
  8307  1E89  02DF               	subwf	___fltol@exp1,f
  8308  1E8A                     l644:
  8309  1E8A  085F               	movf	___fltol@exp1,w
  8310  1E8B  1D03               	btfss	3,2
  8311  1E8C  2E8E               	goto	u4831
  8312  1E8D  2E8F               	goto	u4830
  8313  1E8E                     u4831:
  8314  1E8E  2E7F               	goto	l3165
  8315  1E8F                     u4830:
  8316  1E8F                     l3167:
  8317  1E8F  085E               	movf	___fltol@sign1,w
  8318  1E90  1903               	btfsc	3,2
  8319  1E91  2E93               	goto	u4841
  8320  1E92  2E94               	goto	u4840
  8321  1E93                     u4841:
  8322  1E93  2E9F               	goto	l647
  8323  1E94                     u4840:
  8324  1E94                     l3169:
  8325  1E94  09D5               	comf	___fltol@f1,f
  8326  1E95  09D6               	comf	___fltol@f1+1,f
  8327  1E96  09D7               	comf	___fltol@f1+2,f
  8328  1E97  09D8               	comf	___fltol@f1+3,f
  8329  1E98  0AD5               	incf	___fltol@f1,f
  8330  1E99  1903               	skipnz
  8331  1E9A  0AD6               	incf	___fltol@f1+1,f
  8332  1E9B  1903               	skipnz
  8333  1E9C  0AD7               	incf	___fltol@f1+2,f
  8334  1E9D  1903               	skipnz
  8335  1E9E  0AD8               	incf	___fltol@f1+3,f
  8336  1E9F                     l647:
  8337  1E9F                     l637:
  8338  1E9F  0008               	return
  8339  1EA0                     __end_of___fltol:
  8340                           
  8341                           	psect	text18
  8342  1C54                     __ptext18:	
  8343 ;; *************** function ___flsub *****************
  8344 ;; Defined at:
  8345 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  a               4    0[BANK1 ] long 
  8348 ;;  b               4    4[BANK1 ] long 
  8349 ;; Auto vars:     Size  Location     Type
  8350 ;;		None
  8351 ;; Return value:  Size  Location     Type
  8352 ;;                  4    0[BANK1 ] long 
  8353 ;; Registers used:
  8354 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8355 ;; Tracked objects:
  8356 ;;		On entry : 0/0
  8357 ;;		On exit  : 0/0
  8358 ;;		Unchanged: 0/0
  8359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8360 ;;      Params:         0       0       8       0       0
  8361 ;;      Locals:         0       0       0       0       0
  8362 ;;      Temps:          0       0       0       0       0
  8363 ;;      Totals:         0       0       8       0       0
  8364 ;;Total ram usage:        8 bytes
  8365 ;; Hardware stack levels used:    1
  8366 ;; Hardware stack levels required when called:    2
  8367 ;; This function calls:
  8368 ;;		___fladd
  8369 ;; This function is called by:
  8370 ;;		_sprintf
  8371 ;; This function uses a non-reentrant model
  8372 ;;
  8373                           
  8374                           
  8375                           ;psect for function ___flsub
  8376  1C54                     ___flsub:
  8377  1C54                     l3191:	
  8378                           ;incstack = 0
  8379                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8380                           
  8381  1C54  3080               	movlw	128
  8382  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  8383  1C56  1303               	bcf	3,6	;RP1=0, select bank1
  8384  1C57  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8385  1C58                     l3193:
  8386  1C58  0827               	movf	(___flsub@b+3)^(0+128),w
  8387  1C59  1283               	bcf	3,5	;RP0=0, select bank0
  8388  1C5A  1303               	bcf	3,6	;RP1=0, select bank0
  8389  1C5B  00D9               	movwf	___fladd@b+3
  8390  1C5C  1683               	bsf	3,5	;RP0=1, select bank1
  8391  1C5D  1303               	bcf	3,6	;RP1=0, select bank1
  8392  1C5E  0826               	movf	(___flsub@b+2)^(0+128),w
  8393  1C5F  1283               	bcf	3,5	;RP0=0, select bank0
  8394  1C60  1303               	bcf	3,6	;RP1=0, select bank0
  8395  1C61  00D8               	movwf	___fladd@b+2
  8396  1C62  1683               	bsf	3,5	;RP0=1, select bank1
  8397  1C63  1303               	bcf	3,6	;RP1=0, select bank1
  8398  1C64  0825               	movf	(___flsub@b+1)^(0+128),w
  8399  1C65  1283               	bcf	3,5	;RP0=0, select bank0
  8400  1C66  1303               	bcf	3,6	;RP1=0, select bank0
  8401  1C67  00D7               	movwf	___fladd@b+1
  8402  1C68  1683               	bsf	3,5	;RP0=1, select bank1
  8403  1C69  1303               	bcf	3,6	;RP1=0, select bank1
  8404  1C6A  0824               	movf	___flsub@b^(0+128),w
  8405  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  8406  1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  8407  1C6D  00D6               	movwf	___fladd@b
  8408  1C6E  1683               	bsf	3,5	;RP0=1, select bank1
  8409  1C6F  1303               	bcf	3,6	;RP1=0, select bank1
  8410  1C70  0823               	movf	(___flsub@a+3)^(0+128),w
  8411  1C71  1283               	bcf	3,5	;RP0=0, select bank0
  8412  1C72  1303               	bcf	3,6	;RP1=0, select bank0
  8413  1C73  00DD               	movwf	___fladd@a+3
  8414  1C74  1683               	bsf	3,5	;RP0=1, select bank1
  8415  1C75  1303               	bcf	3,6	;RP1=0, select bank1
  8416  1C76  0822               	movf	(___flsub@a+2)^(0+128),w
  8417  1C77  1283               	bcf	3,5	;RP0=0, select bank0
  8418  1C78  1303               	bcf	3,6	;RP1=0, select bank0
  8419  1C79  00DC               	movwf	___fladd@a+2
  8420  1C7A  1683               	bsf	3,5	;RP0=1, select bank1
  8421  1C7B  1303               	bcf	3,6	;RP1=0, select bank1
  8422  1C7C  0821               	movf	(___flsub@a+1)^(0+128),w
  8423  1C7D  1283               	bcf	3,5	;RP0=0, select bank0
  8424  1C7E  1303               	bcf	3,6	;RP1=0, select bank0
  8425  1C7F  00DB               	movwf	___fladd@a+1
  8426  1C80  1683               	bsf	3,5	;RP0=1, select bank1
  8427  1C81  1303               	bcf	3,6	;RP1=0, select bank1
  8428  1C82  0820               	movf	___flsub@a^(0+128),w
  8429  1C83  1283               	bcf	3,5	;RP0=0, select bank0
  8430  1C84  1303               	bcf	3,6	;RP1=0, select bank0
  8431  1C85  00DA               	movwf	___fladd@a
  8432  1C86  160A  118A  2578  160A  158A  	fcall	___fladd
  8433  1C8B  1283               	bcf	3,5	;RP0=0, select bank0
  8434  1C8C  1303               	bcf	3,6	;RP1=0, select bank0
  8435  1C8D  0859               	movf	?___fladd+3,w
  8436  1C8E  1683               	bsf	3,5	;RP0=1, select bank1
  8437  1C8F  1303               	bcf	3,6	;RP1=0, select bank1
  8438  1C90  00A3               	movwf	(?___flsub+3)^(0+128)
  8439  1C91  1283               	bcf	3,5	;RP0=0, select bank0
  8440  1C92  1303               	bcf	3,6	;RP1=0, select bank0
  8441  1C93  0858               	movf	?___fladd+2,w
  8442  1C94  1683               	bsf	3,5	;RP0=1, select bank1
  8443  1C95  1303               	bcf	3,6	;RP1=0, select bank1
  8444  1C96  00A2               	movwf	(?___flsub+2)^(0+128)
  8445  1C97  1283               	bcf	3,5	;RP0=0, select bank0
  8446  1C98  1303               	bcf	3,6	;RP1=0, select bank0
  8447  1C99  0857               	movf	?___fladd+1,w
  8448  1C9A  1683               	bsf	3,5	;RP0=1, select bank1
  8449  1C9B  1303               	bcf	3,6	;RP1=0, select bank1
  8450  1C9C  00A1               	movwf	(?___flsub+1)^(0+128)
  8451  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  8452  1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  8453  1C9F  0856               	movf	?___fladd,w
  8454  1CA0  1683               	bsf	3,5	;RP0=1, select bank1
  8455  1CA1  1303               	bcf	3,6	;RP1=0, select bank1
  8456  1CA2  00A0               	movwf	?___flsub^(0+128)
  8457  1CA3                     l807:
  8458  1CA3  0008               	return
  8459  1CA4                     __end_of___flsub:
  8460                           
  8461                           	psect	text19
  8462  1578                     __ptext19:	
  8463 ;; *************** function ___fladd *****************
  8464 ;; Defined at:
  8465 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  b               4   54[BANK0 ] long 
  8468 ;;  a               4   58[BANK0 ] long 
  8469 ;; Auto vars:     Size  Location     Type
  8470 ;;  grs             1   73[BANK0 ] unsigned char 
  8471 ;;  bexp            1   72[BANK0 ] unsigned char 
  8472 ;;  aexp            1   71[BANK0 ] unsigned char 
  8473 ;;  signs           1   70[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  4   54[BANK0 ] unsigned char 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0, btemp+1
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8483 ;;      Params:         0       8       0       0       0
  8484 ;;      Locals:         0       4       0       0       0
  8485 ;;      Temps:          0       8       0       0       0
  8486 ;;      Totals:         0      20       0       0       0
  8487 ;;Total ram usage:       20 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    1
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_sprintf
  8494 ;;		___flsub
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function ___fladd
  8500  1578                     ___fladd:
  8501  1578                     l2539:	
  8502                           ;incstack = 0
  8503                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8504                           
  8505  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8506  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8507  157A  0859               	movf	___fladd@b+3,w
  8508  157B  3980               	andlw	128
  8509  157C  00DE               	movwf	??___fladd
  8510  157D  085E               	movf	??___fladd,w
  8511  157E  00E6               	movwf	___fladd@signs
  8512  157F                     l2541:
  8513  157F  0859               	movf	___fladd@b+3,w
  8514  1580  00DE               	movwf	??___fladd
  8515  1581  075E               	addwf	??___fladd,w
  8516  1582  00DF               	movwf	??___fladd+1
  8517  1583  085F               	movf	??___fladd+1,w
  8518  1584  00E8               	movwf	___fladd@bexp
  8519  1585                     l2543:
  8520  1585  1FD8               	btfss	___fladd@b+2,7
  8521  1586  2D88               	goto	u3141
  8522  1587  2D89               	goto	u3140
  8523  1588                     u3141:
  8524  1588  2D8A               	goto	l2547
  8525  1589                     u3140:
  8526  1589                     l2545:
  8527  1589  1468               	bsf	___fladd@bexp,0
  8528  158A                     l2547:
  8529  158A  0868               	movf	___fladd@bexp,w
  8530  158B  1903               	btfsc	3,2
  8531  158C  2D8E               	goto	u3151
  8532  158D  2D8F               	goto	u3150
  8533  158E                     u3151:
  8534  158E  2D9F               	goto	l2557
  8535  158F                     u3150:
  8536  158F                     l2549:
  8537  158F  0A68               	incf	___fladd@bexp,w
  8538  1590  1D03               	btfss	3,2
  8539  1591  2D93               	goto	u3161
  8540  1592  2D94               	goto	u3160
  8541  1593                     u3161:
  8542  1593  2D9C               	goto	l2553
  8543  1594                     u3160:
  8544  1594                     l2551:
  8545  1594  3000               	movlw	0
  8546  1595  00D9               	movwf	___fladd@b+3
  8547  1596  3000               	movlw	0
  8548  1597  00D8               	movwf	___fladd@b+2
  8549  1598  3000               	movlw	0
  8550  1599  00D7               	movwf	___fladd@b+1
  8551  159A  3000               	movlw	0
  8552  159B  00D6               	movwf	___fladd@b
  8553  159C                     l2553:
  8554  159C  17D8               	bsf	___fladd@b+2,7
  8555  159D                     l2555:
  8556  159D  01D9               	clrf	___fladd@b+3
  8557  159E  2DA7               	goto	l2559
  8558  159F                     l2557:
  8559  159F  3000               	movlw	0
  8560  15A0  00D9               	movwf	___fladd@b+3
  8561  15A1  3000               	movlw	0
  8562  15A2  00D8               	movwf	___fladd@b+2
  8563  15A3  3000               	movlw	0
  8564  15A4  00D7               	movwf	___fladd@b+1
  8565  15A5  3000               	movlw	0
  8566  15A6  00D6               	movwf	___fladd@b
  8567  15A7                     l2559:
  8568  15A7  085D               	movf	___fladd@a+3,w
  8569  15A8  3980               	andlw	128
  8570  15A9  00DE               	movwf	??___fladd
  8571  15AA  085E               	movf	??___fladd,w
  8572  15AB  00E7               	movwf	___fladd@aexp
  8573  15AC                     l2561:
  8574  15AC  0867               	movf	___fladd@aexp,w
  8575  15AD  0666               	xorwf	___fladd@signs,w
  8576  15AE  1903               	skipnz
  8577  15AF  2DB1               	goto	u3171
  8578  15B0  2DB2               	goto	u3170
  8579  15B1                     u3171:
  8580  15B1  2DB3               	goto	l2565
  8581  15B2                     u3170:
  8582  15B2                     l2563:
  8583  15B2  1766               	bsf	___fladd@signs,6
  8584  15B3                     l2565:
  8585  15B3  085D               	movf	___fladd@a+3,w
  8586  15B4  00DE               	movwf	??___fladd
  8587  15B5  075E               	addwf	??___fladd,w
  8588  15B6  00DF               	movwf	??___fladd+1
  8589  15B7  085F               	movf	??___fladd+1,w
  8590  15B8  00E7               	movwf	___fladd@aexp
  8591  15B9                     l2567:
  8592  15B9  1FDC               	btfss	___fladd@a+2,7
  8593  15BA  2DBC               	goto	u3181
  8594  15BB  2DBD               	goto	u3180
  8595  15BC                     u3181:
  8596  15BC  2DBE               	goto	l2571
  8597  15BD                     u3180:
  8598  15BD                     l2569:
  8599  15BD  1467               	bsf	___fladd@aexp,0
  8600  15BE                     l2571:
  8601  15BE  0867               	movf	___fladd@aexp,w
  8602  15BF  1903               	btfsc	3,2
  8603  15C0  2DC2               	goto	u3191
  8604  15C1  2DC3               	goto	u3190
  8605  15C2                     u3191:
  8606  15C2  2DD3               	goto	l2581
  8607  15C3                     u3190:
  8608  15C3                     l2573:
  8609  15C3  0A67               	incf	___fladd@aexp,w
  8610  15C4  1D03               	btfss	3,2
  8611  15C5  2DC7               	goto	u3201
  8612  15C6  2DC8               	goto	u3200
  8613  15C7                     u3201:
  8614  15C7  2DD0               	goto	l2577
  8615  15C8                     u3200:
  8616  15C8                     l2575:
  8617  15C8  3000               	movlw	0
  8618  15C9  00DD               	movwf	___fladd@a+3
  8619  15CA  3000               	movlw	0
  8620  15CB  00DC               	movwf	___fladd@a+2
  8621  15CC  3000               	movlw	0
  8622  15CD  00DB               	movwf	___fladd@a+1
  8623  15CE  3000               	movlw	0
  8624  15CF  00DA               	movwf	___fladd@a
  8625  15D0                     l2577:
  8626  15D0  17DC               	bsf	___fladd@a+2,7
  8627  15D1                     l2579:
  8628  15D1  01DD               	clrf	___fladd@a+3
  8629  15D2  2DDB               	goto	l761
  8630  15D3                     l2581:
  8631  15D3  3000               	movlw	0
  8632  15D4  00DD               	movwf	___fladd@a+3
  8633  15D5  3000               	movlw	0
  8634  15D6  00DC               	movwf	___fladd@a+2
  8635  15D7  3000               	movlw	0
  8636  15D8  00DB               	movwf	___fladd@a+1
  8637  15D9  3000               	movlw	0
  8638  15DA  00DA               	movwf	___fladd@a
  8639  15DB                     l761:
  8640  15DB  0868               	movf	___fladd@bexp,w
  8641  15DC  0267               	subwf	___fladd@aexp,w
  8642  15DD  1803               	skipnc
  8643  15DE  2DE0               	goto	u3211
  8644  15DF  2DE1               	goto	u3210
  8645  15E0                     u3211:
  8646  15E0  2E25               	goto	l2617
  8647  15E1                     u3210:
  8648  15E1                     l2583:
  8649  15E1  1F66               	btfss	___fladd@signs,6
  8650  15E2  2DE4               	goto	u3221
  8651  15E3  2DE5               	goto	u3220
  8652  15E4                     u3221:
  8653  15E4  2DE9               	goto	l2587
  8654  15E5                     u3220:
  8655  15E5                     l2585:
  8656  15E5  3080               	movlw	128
  8657  15E6  00DE               	movwf	??___fladd
  8658  15E7  085E               	movf	??___fladd,w
  8659  15E8  06E6               	xorwf	___fladd@signs,f
  8660  15E9                     l2587:
  8661  15E9  0868               	movf	___fladd@bexp,w
  8662  15EA  00DE               	movwf	??___fladd
  8663  15EB  085E               	movf	??___fladd,w
  8664  15EC  00E9               	movwf	___fladd@grs
  8665  15ED                     l2589:
  8666  15ED  0867               	movf	___fladd@aexp,w
  8667  15EE  00DE               	movwf	??___fladd
  8668  15EF  085E               	movf	??___fladd,w
  8669  15F0  00E8               	movwf	___fladd@bexp
  8670  15F1                     l2591:
  8671  15F1  0869               	movf	___fladd@grs,w
  8672  15F2  00DE               	movwf	??___fladd
  8673  15F3  085E               	movf	??___fladd,w
  8674  15F4  00E7               	movwf	___fladd@aexp
  8675  15F5                     l2593:
  8676  15F5  0856               	movf	___fladd@b,w
  8677  15F6  00DE               	movwf	??___fladd
  8678  15F7  085E               	movf	??___fladd,w
  8679  15F8  00E9               	movwf	___fladd@grs
  8680  15F9                     l2595:
  8681  15F9  085A               	movf	___fladd@a,w
  8682  15FA  00DE               	movwf	??___fladd
  8683  15FB  085E               	movf	??___fladd,w
  8684  15FC  00D6               	movwf	___fladd@b
  8685  15FD                     l2597:
  8686  15FD  0869               	movf	___fladd@grs,w
  8687  15FE  00DE               	movwf	??___fladd
  8688  15FF  085E               	movf	??___fladd,w
  8689  1600  00DA               	movwf	___fladd@a
  8690  1601                     l2599:
  8691  1601  0857               	movf	___fladd@b+1,w
  8692  1602  00DE               	movwf	??___fladd
  8693  1603  085E               	movf	??___fladd,w
  8694  1604  00E9               	movwf	___fladd@grs
  8695  1605                     l2601:
  8696  1605  085B               	movf	___fladd@a+1,w
  8697  1606  00DE               	movwf	??___fladd
  8698  1607  085E               	movf	??___fladd,w
  8699  1608  00D7               	movwf	___fladd@b+1
  8700  1609                     l2603:
  8701  1609  0869               	movf	___fladd@grs,w
  8702  160A  00DE               	movwf	??___fladd
  8703  160B  085E               	movf	??___fladd,w
  8704  160C  00DB               	movwf	___fladd@a+1
  8705  160D                     l2605:
  8706  160D  0858               	movf	___fladd@b+2,w
  8707  160E  00DE               	movwf	??___fladd
  8708  160F  085E               	movf	??___fladd,w
  8709  1610  00E9               	movwf	___fladd@grs
  8710  1611                     l2607:
  8711  1611  085C               	movf	___fladd@a+2,w
  8712  1612  00DE               	movwf	??___fladd
  8713  1613  085E               	movf	??___fladd,w
  8714  1614  00D8               	movwf	___fladd@b+2
  8715  1615                     l2609:
  8716  1615  0869               	movf	___fladd@grs,w
  8717  1616  00DE               	movwf	??___fladd
  8718  1617  085E               	movf	??___fladd,w
  8719  1618  00DC               	movwf	___fladd@a+2
  8720  1619                     l2611:
  8721  1619  0859               	movf	___fladd@b+3,w
  8722  161A  00DE               	movwf	??___fladd
  8723  161B  085E               	movf	??___fladd,w
  8724  161C  00E9               	movwf	___fladd@grs
  8725  161D                     l2613:
  8726  161D  085D               	movf	___fladd@a+3,w
  8727  161E  00DE               	movwf	??___fladd
  8728  161F  085E               	movf	??___fladd,w
  8729  1620  00D9               	movwf	___fladd@b+3
  8730  1621                     l2615:
  8731  1621  0869               	movf	___fladd@grs,w
  8732  1622  00DE               	movwf	??___fladd
  8733  1623  085E               	movf	??___fladd,w
  8734  1624  00DD               	movwf	___fladd@a+3
  8735  1625                     l2617:
  8736  1625  01E9               	clrf	___fladd@grs
  8737  1626                     l2619:
  8738  1626  0867               	movf	___fladd@aexp,w
  8739  1627  00DE               	movwf	??___fladd
  8740  1628  01DF               	clrf	??___fladd+1
  8741  1629  085F               	movf	??___fladd+1,w
  8742  162A  00E1               	movwf	??___fladd+3
  8743  162B  0868               	movf	___fladd@bexp,w
  8744  162C  025E               	subwf	??___fladd,w
  8745  162D  00E0               	movwf	??___fladd+2
  8746  162E  1C03               	skipc
  8747  162F  03E1               	decf	??___fladd+3,f
  8748  1630  0861               	movf	??___fladd+3,w
  8749  1631  3A80               	xorlw	128
  8750  1632  00FF               	movwf	btemp+1
  8751  1633  3080               	movlw	128
  8752  1634  027F               	subwf	btemp+1,w
  8753  1635  1D03               	skipz
  8754  1636  2E39               	goto	u3235
  8755  1637  301A               	movlw	26
  8756  1638  0260               	subwf	??___fladd+2,w
  8757  1639                     u3235:
  8758  1639  1C03               	skipc
  8759  163A  2E3C               	goto	u3231
  8760  163B  2E3D               	goto	u3230
  8761  163C                     u3231:
  8762  163C  2E7A               	goto	l2635
  8763  163D                     u3230:
  8764  163D                     l2621:
  8765  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8766  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8767  163F  0859               	movf	___fladd@b+3,w
  8768  1640  0458               	iorwf	___fladd@b+2,w
  8769  1641  0457               	iorwf	___fladd@b+1,w
  8770  1642  0456               	iorwf	___fladd@b,w
  8771  1643  1D03               	skipz
  8772  1644  2E46               	goto	u3241
  8773  1645  2E48               	goto	u3240
  8774  1646                     u3241:
  8775  1646  3001               	movlw	1
  8776  1647  2E49               	goto	u3250
  8777  1648                     u3240:
  8778  1648  3000               	movlw	0
  8779  1649                     u3250:
  8780  1649  00DE               	movwf	??___fladd
  8781  164A  085E               	movf	??___fladd,w
  8782  164B  00E9               	movwf	___fladd@grs
  8783  164C  3000               	movlw	0
  8784  164D  00D9               	movwf	___fladd@b+3
  8785  164E  3000               	movlw	0
  8786  164F  00D8               	movwf	___fladd@b+2
  8787  1650  3000               	movlw	0
  8788  1651  00D7               	movwf	___fladd@b+1
  8789  1652  3000               	movlw	0
  8790  1653  00D6               	movwf	___fladd@b
  8791  1654  0867               	movf	___fladd@aexp,w
  8792  1655  00DE               	movwf	??___fladd
  8793  1656  085E               	movf	??___fladd,w
  8794  1657  00E8               	movwf	___fladd@bexp
  8795  1658  2E82               	goto	l765
  8796  1659                     l767:
  8797  1659  1C69               	btfss	___fladd@grs,0
  8798  165A  2E5C               	goto	u3261
  8799  165B  2E5D               	goto	u3260
  8800  165C                     u3261:
  8801  165C  2E66               	goto	l2625
  8802  165D                     u3260:
  8803  165D                     l2623:
  8804  165D  0869               	movf	___fladd@grs,w
  8805  165E  00DE               	movwf	??___fladd
  8806  165F  1003               	clrc
  8807  1660  0C5E               	rrf	??___fladd,w
  8808  1661  3801               	iorlw	1
  8809  1662  00DF               	movwf	??___fladd+1
  8810  1663  085F               	movf	??___fladd+1,w
  8811  1664  00E9               	movwf	___fladd@grs
  8812  1665  2E68               	goto	l2627
  8813  1666                     l2625:
  8814  1666  1003               	clrc
  8815  1667  0CE9               	rrf	___fladd@grs,f
  8816  1668                     l2627:
  8817  1668  1C56               	btfss	___fladd@b,0
  8818  1669  2E6B               	goto	u3271
  8819  166A  2E6C               	goto	u3270
  8820  166B                     u3271:
  8821  166B  2E6D               	goto	l2631
  8822  166C                     u3270:
  8823  166C                     l2629:
  8824  166C  17E9               	bsf	___fladd@grs,7
  8825  166D                     l2631:
  8826  166D  3001               	movlw	1
  8827  166E  00DE               	movwf	??___fladd
  8828  166F                     u3285:
  8829  166F  0D59               	rlf	___fladd@b+3,w
  8830  1670  0CD9               	rrf	___fladd@b+3,f
  8831  1671  0CD8               	rrf	___fladd@b+2,f
  8832  1672  0CD7               	rrf	___fladd@b+1,f
  8833  1673  0CD6               	rrf	___fladd@b,f
  8834  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8835  1675  2E6F               	goto	u3285
  8836  1676                     l2633:
  8837  1676  3001               	movlw	1
  8838  1677  00DE               	movwf	??___fladd
  8839  1678  085E               	movf	??___fladd,w
  8840  1679  07E8               	addwf	___fladd@bexp,f
  8841  167A                     l2635:
  8842  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8843  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8844  167C  0867               	movf	___fladd@aexp,w
  8845  167D  0268               	subwf	___fladd@bexp,w
  8846  167E  1C03               	skipc
  8847  167F  2E81               	goto	u3291
  8848  1680  2E82               	goto	u3290
  8849  1681                     u3291:
  8850  1681  2E59               	goto	l767
  8851  1682                     u3290:
  8852  1682                     l765:
  8853  1682  1B66               	btfsc	___fladd@signs,6
  8854  1683  2E85               	goto	u3301
  8855  1684  2E86               	goto	u3300
  8856  1685                     u3301:
  8857  1685  2ED1               	goto	l2661
  8858  1686                     u3300:
  8859  1686                     l2637:
  8860  1686  0868               	movf	___fladd@bexp,w
  8861  1687  1D03               	btfss	3,2
  8862  1688  2E8A               	goto	u3311
  8863  1689  2E8B               	goto	u3310
  8864  168A                     u3311:
  8865  168A  2E94               	goto	l2643
  8866  168B                     u3310:
  8867  168B                     l2639:
  8868  168B  3000               	movlw	0
  8869  168C  00D9               	movwf	?___fladd+3
  8870  168D  3000               	movlw	0
  8871  168E  00D8               	movwf	?___fladd+2
  8872  168F  3000               	movlw	0
  8873  1690  00D7               	movwf	?___fladd+1
  8874  1691  3000               	movlw	0
  8875  1692  00D6               	movwf	?___fladd
  8876  1693  2FFF               	goto	l774
  8877  1694                     l2643:
  8878  1694  085A               	movf	___fladd@a,w
  8879  1695  07D6               	addwf	___fladd@b,f
  8880  1696  085B               	movf	___fladd@a+1,w
  8881  1697  1103               	clrz
  8882  1698  1803               	skipnc
  8883  1699  3E01               	addlw	1
  8884  169A  1903               	skipnz
  8885  169B  2E9D               	goto	u3321
  8886  169C  07D7               	addwf	___fladd@b+1,f
  8887  169D                     u3321:
  8888  169D  085C               	movf	___fladd@a+2,w
  8889  169E  1103               	clrz
  8890  169F  1803               	skipnc
  8891  16A0  3E01               	addlw	1
  8892  16A1  1903               	skipnz
  8893  16A2  2EA4               	goto	u3322
  8894  16A3  07D8               	addwf	___fladd@b+2,f
  8895  16A4                     u3322:
  8896  16A4  085D               	movf	___fladd@a+3,w
  8897  16A5  1103               	clrz
  8898  16A6  1803               	skipnc
  8899  16A7  3E01               	addlw	1
  8900  16A8  1903               	skipnz
  8901  16A9  2EAB               	goto	u3323
  8902  16AA  07D9               	addwf	___fladd@b+3,f
  8903  16AB                     u3323:
  8904  16AB                     l2645:
  8905  16AB  1C59               	btfss	___fladd@b+3,0
  8906  16AC  2EAE               	goto	u3331
  8907  16AD  2EAF               	goto	u3330
  8908  16AE                     u3331:
  8909  16AE  2F85               	goto	l2695
  8910  16AF                     u3330:
  8911  16AF                     l2647:
  8912  16AF  1C69               	btfss	___fladd@grs,0
  8913  16B0  2EB2               	goto	u3341
  8914  16B1  2EB3               	goto	u3340
  8915  16B2                     u3341:
  8916  16B2  2EBC               	goto	l2651
  8917  16B3                     u3340:
  8918  16B3                     l2649:
  8919  16B3  0869               	movf	___fladd@grs,w
  8920  16B4  00DE               	movwf	??___fladd
  8921  16B5  1003               	clrc
  8922  16B6  0C5E               	rrf	??___fladd,w
  8923  16B7  3801               	iorlw	1
  8924  16B8  00DF               	movwf	??___fladd+1
  8925  16B9  085F               	movf	??___fladd+1,w
  8926  16BA  00E9               	movwf	___fladd@grs
  8927  16BB  2EBE               	goto	l2653
  8928  16BC                     l2651:
  8929  16BC  1003               	clrc
  8930  16BD  0CE9               	rrf	___fladd@grs,f
  8931  16BE                     l2653:
  8932  16BE  1C56               	btfss	___fladd@b,0
  8933  16BF  2EC1               	goto	u3351
  8934  16C0  2EC2               	goto	u3350
  8935  16C1                     u3351:
  8936  16C1  2EC3               	goto	l2657
  8937  16C2                     u3350:
  8938  16C2                     l2655:
  8939  16C2  17E9               	bsf	___fladd@grs,7
  8940  16C3                     l2657:
  8941  16C3  3001               	movlw	1
  8942  16C4  00DE               	movwf	??___fladd
  8943  16C5                     u3365:
  8944  16C5  0D59               	rlf	___fladd@b+3,w
  8945  16C6  0CD9               	rrf	___fladd@b+3,f
  8946  16C7  0CD8               	rrf	___fladd@b+2,f
  8947  16C8  0CD7               	rrf	___fladd@b+1,f
  8948  16C9  0CD6               	rrf	___fladd@b,f
  8949  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8950  16CB  2EC5               	goto	u3365
  8951  16CC                     l2659:
  8952  16CC  3001               	movlw	1
  8953  16CD  00DE               	movwf	??___fladd
  8954  16CE  085E               	movf	??___fladd,w
  8955  16CF  07E8               	addwf	___fladd@bexp,f
  8956  16D0  2F85               	goto	l2695
  8957  16D1                     l2661:
  8958  16D1  0859               	movf	___fladd@b+3,w
  8959  16D2  3A80               	xorlw	128
  8960  16D3  00FF               	movwf	btemp+1
  8961  16D4  085D               	movf	___fladd@a+3,w
  8962  16D5  3A80               	xorlw	128
  8963  16D6  027F               	subwf	btemp+1,w
  8964  16D7  1D03               	skipz
  8965  16D8  2EE3               	goto	u3373
  8966  16D9  085C               	movf	___fladd@a+2,w
  8967  16DA  0258               	subwf	___fladd@b+2,w
  8968  16DB  1D03               	skipz
  8969  16DC  2EE3               	goto	u3373
  8970  16DD  085B               	movf	___fladd@a+1,w
  8971  16DE  0257               	subwf	___fladd@b+1,w
  8972  16DF  1D03               	skipz
  8973  16E0  2EE3               	goto	u3373
  8974  16E1  085A               	movf	___fladd@a,w
  8975  16E2  0256               	subwf	___fladd@b,w
  8976  16E3                     u3373:
  8977  16E3  1803               	skipnc
  8978  16E4  2EE6               	goto	u3371
  8979  16E5  2EE7               	goto	u3370
  8980  16E6                     u3371:
  8981  16E6  2F3F               	goto	l2671
  8982  16E7                     u3370:
  8983  16E7                     l2663:
  8984  16E7  30FF               	movlw	255
  8985  16E8  00DE               	movwf	??___fladd
  8986  16E9  30FF               	movlw	255
  8987  16EA  00DF               	movwf	??___fladd+1
  8988  16EB  30FF               	movlw	255
  8989  16EC  00E0               	movwf	??___fladd+2
  8990  16ED  30FF               	movlw	255
  8991  16EE  00E1               	movwf	??___fladd+3
  8992  16EF  085A               	movf	___fladd@a,w
  8993  16F0  00E2               	movwf	??___fladd+4
  8994  16F1  085B               	movf	___fladd@a+1,w
  8995  16F2  00E3               	movwf	??___fladd+5
  8996  16F3  085C               	movf	___fladd@a+2,w
  8997  16F4  00E4               	movwf	??___fladd+6
  8998  16F5  085D               	movf	___fladd@a+3,w
  8999  16F6  00E5               	movwf	??___fladd+7
  9000  16F7  0856               	movf	___fladd@b,w
  9001  16F8  02E2               	subwf	??___fladd+4,f
  9002  16F9  0857               	movf	___fladd@b+1,w
  9003  16FA  1C03               	skipc
  9004  16FB  0F57               	incfsz	___fladd@b+1,w
  9005  16FC  2EFE               	goto	u3381
  9006  16FD  2EFF               	goto	u3382
  9007  16FE                     u3381:
  9008  16FE  02E3               	subwf	??___fladd+5,f
  9009  16FF                     u3382:
  9010  16FF  0858               	movf	___fladd@b+2,w
  9011  1700  1C03               	skipc
  9012  1701  0F58               	incfsz	___fladd@b+2,w
  9013  1702  2F04               	goto	u3383
  9014  1703  2F05               	goto	u3384
  9015  1704                     u3383:
  9016  1704  02E4               	subwf	??___fladd+6,f
  9017  1705                     u3384:
  9018  1705  0859               	movf	___fladd@b+3,w
  9019  1706  1C03               	skipc
  9020  1707  0F59               	incfsz	___fladd@b+3,w
  9021  1708  2F0A               	goto	u3385
  9022  1709  2F0B               	goto	u3386
  9023  170A                     u3385:
  9024  170A  02E5               	subwf	??___fladd+7,f
  9025  170B                     u3386:
  9026  170B  0862               	movf	??___fladd+4,w
  9027  170C  07DE               	addwf	??___fladd,f
  9028  170D  0863               	movf	??___fladd+5,w
  9029  170E  1803               	skipnc
  9030  170F  0F63               	incfsz	??___fladd+5,w
  9031  1710  2F12               	goto	u3390
  9032  1711  2F13               	goto	u3391
  9033  1712                     u3390:
  9034  1712  07DF               	addwf	??___fladd+1,f
  9035  1713                     u3391:
  9036  1713  0864               	movf	??___fladd+6,w
  9037  1714  1803               	skipnc
  9038  1715  0F64               	incfsz	??___fladd+6,w
  9039  1716  2F18               	goto	u3392
  9040  1717  2F19               	goto	u3393
  9041  1718                     u3392:
  9042  1718  07E0               	addwf	??___fladd+2,f
  9043  1719                     u3393:
  9044  1719  0865               	movf	??___fladd+7,w
  9045  171A  1803               	skipnc
  9046  171B  0A65               	incf	??___fladd+7,w
  9047  171C  07E1               	addwf	??___fladd+3,f
  9048  171D  0861               	movf	??___fladd+3,w
  9049  171E  00D9               	movwf	___fladd@b+3
  9050  171F  0860               	movf	??___fladd+2,w
  9051  1720  00D8               	movwf	___fladd@b+2
  9052  1721  085F               	movf	??___fladd+1,w
  9053  1722  00D7               	movwf	___fladd@b+1
  9054  1723  085E               	movf	??___fladd,w
  9055  1724  00D6               	movwf	___fladd@b
  9056  1725                     l2665:
  9057  1725  3080               	movlw	128
  9058  1726  00DE               	movwf	??___fladd
  9059  1727  085E               	movf	??___fladd,w
  9060  1728  06E6               	xorwf	___fladd@signs,f
  9061  1729  09E9               	comf	___fladd@grs,f
  9062  172A  0AE9               	incf	___fladd@grs,f
  9063  172B                     l2667:
  9064  172B  0869               	movf	___fladd@grs,w
  9065  172C  1D03               	btfss	3,2
  9066  172D  2F2F               	goto	u3401
  9067  172E  2F30               	goto	u3400
  9068  172F                     u3401:
  9069  172F  2F4D               	goto	l782
  9070  1730                     u3400:
  9071  1730                     l2669:
  9072  1730  3001               	movlw	1
  9073  1731  07D6               	addwf	___fladd@b,f
  9074  1732  3000               	movlw	0
  9075  1733  1803               	skipnc
  9076  1734  3001               	movlw	1
  9077  1735  07D7               	addwf	___fladd@b+1,f
  9078  1736  3000               	movlw	0
  9079  1737  1803               	skipnc
  9080  1738  3001               	movlw	1
  9081  1739  07D8               	addwf	___fladd@b+2,f
  9082  173A  3000               	movlw	0
  9083  173B  1803               	skipnc
  9084  173C  3001               	movlw	1
  9085  173D  07D9               	addwf	___fladd@b+3,f
  9086  173E  2F4D               	goto	l782
  9087  173F                     l2671:
  9088  173F  085A               	movf	___fladd@a,w
  9089  1740  02D6               	subwf	___fladd@b,f
  9090  1741  085B               	movf	___fladd@a+1,w
  9091  1742  1C03               	skipc
  9092  1743  0F5B               	incfsz	___fladd@a+1,w
  9093  1744  02D7               	subwf	___fladd@b+1,f
  9094  1745  085C               	movf	___fladd@a+2,w
  9095  1746  1C03               	skipc
  9096  1747  0F5C               	incfsz	___fladd@a+2,w
  9097  1748  02D8               	subwf	___fladd@b+2,f
  9098  1749  085D               	movf	___fladd@a+3,w
  9099  174A  1C03               	skipc
  9100  174B  0F5D               	incfsz	___fladd@a+3,w
  9101  174C  02D9               	subwf	___fladd@b+3,f
  9102  174D                     l782:
  9103  174D  0859               	movf	___fladd@b+3,w
  9104  174E  0458               	iorwf	___fladd@b+2,w
  9105  174F  0457               	iorwf	___fladd@b+1,w
  9106  1750  0456               	iorwf	___fladd@b,w
  9107  1751  1D03               	skipz
  9108  1752  2F54               	goto	u3411
  9109  1753  2F55               	goto	u3410
  9110  1754                     u3411:
  9111  1754  2F81               	goto	l2693
  9112  1755                     u3410:
  9113  1755                     l2673:
  9114  1755  0869               	movf	___fladd@grs,w
  9115  1756  1D03               	btfss	3,2
  9116  1757  2F59               	goto	u3421
  9117  1758  2F5A               	goto	u3420
  9118  1759                     u3421:
  9119  1759  2F81               	goto	l2693
  9120  175A                     u3420:
  9121  175A                     l2675:
  9122  175A  3000               	movlw	0
  9123  175B  00D9               	movwf	?___fladd+3
  9124  175C  3000               	movlw	0
  9125  175D  00D8               	movwf	?___fladd+2
  9126  175E  3000               	movlw	0
  9127  175F  00D7               	movwf	?___fladd+1
  9128  1760  3000               	movlw	0
  9129  1761  00D6               	movwf	?___fladd
  9130  1762  2FFF               	goto	l774
  9131  1763                     l2679:
  9132  1763  3001               	movlw	1
  9133  1764  00DE               	movwf	??___fladd
  9134  1765                     u3435:
  9135  1765  1003               	clrc
  9136  1766  0DD6               	rlf	___fladd@b,f
  9137  1767  0DD7               	rlf	___fladd@b+1,f
  9138  1768  0DD8               	rlf	___fladd@b+2,f
  9139  1769  0DD9               	rlf	___fladd@b+3,f
  9140  176A  0BDE               	decfsz	??___fladd,f
  9141  176B  2F65               	goto	u3435
  9142  176C                     l2681:
  9143  176C  1FE9               	btfss	___fladd@grs,7
  9144  176D  2F6F               	goto	u3441
  9145  176E  2F70               	goto	u3440
  9146  176F                     u3441:
  9147  176F  2F71               	goto	l786
  9148  1770                     u3440:
  9149  1770                     l2683:
  9150  1770  1456               	bsf	___fladd@b,0
  9151  1771                     l786:
  9152  1771  1C69               	btfss	___fladd@grs,0
  9153  1772  2F74               	goto	u3451
  9154  1773  2F75               	goto	u3450
  9155  1774                     u3451:
  9156  1774  2F78               	goto	l2687
  9157  1775                     u3450:
  9158  1775                     l2685:
  9159  1775  1403               	setc
  9160  1776  0DE9               	rlf	___fladd@grs,f
  9161  1777  2F7A               	goto	l2689
  9162  1778                     l2687:
  9163  1778  1003               	clrc
  9164  1779  0DE9               	rlf	___fladd@grs,f
  9165  177A                     l2689:
  9166  177A  0868               	movf	___fladd@bexp,w
  9167  177B  1903               	btfsc	3,2
  9168  177C  2F7E               	goto	u3461
  9169  177D  2F7F               	goto	u3460
  9170  177E                     u3461:
  9171  177E  2F81               	goto	l2693
  9172  177F                     u3460:
  9173  177F                     l2691:
  9174  177F  3001               	movlw	1
  9175  1780  02E8               	subwf	___fladd@bexp,f
  9176  1781                     l2693:
  9177  1781  1FD8               	btfss	___fladd@b+2,7
  9178  1782  2F84               	goto	u3471
  9179  1783  2F85               	goto	u3470
  9180  1784                     u3471:
  9181  1784  2F63               	goto	l2679
  9182  1785                     u3470:
  9183  1785                     l2695:
  9184  1785  01E7               	clrf	___fladd@aexp
  9185  1786                     l2697:
  9186  1786  1FE9               	btfss	___fladd@grs,7
  9187  1787  2F89               	goto	u3481
  9188  1788  2F8A               	goto	u3480
  9189  1789                     u3481:
  9190  1789  2F98               	goto	l2705
  9191  178A                     u3480:
  9192  178A                     l2699:
  9193  178A  0869               	movf	___fladd@grs,w
  9194  178B  397F               	andlw	127
  9195  178C  1903               	btfsc	3,2
  9196  178D  2F8F               	goto	u3491
  9197  178E  2F90               	goto	u3490
  9198  178F                     u3491:
  9199  178F  2F93               	goto	l792
  9200  1790                     u3490:
  9201  1790                     l2701:
  9202  1790  01E7               	clrf	___fladd@aexp
  9203  1791  0AE7               	incf	___fladd@aexp,f
  9204  1792  2F98               	goto	l2705
  9205  1793                     l792:
  9206  1793  1C56               	btfss	___fladd@b,0
  9207  1794  2F96               	goto	u3501
  9208  1795  2F97               	goto	u3500
  9209  1796                     u3501:
  9210  1796  2F98               	goto	l2705
  9211  1797                     u3500:
  9212  1797  2F90               	goto	l2701
  9213  1798                     l2705:
  9214  1798  0867               	movf	___fladd@aexp,w
  9215  1799  1903               	btfsc	3,2
  9216  179A  2F9C               	goto	u3511
  9217  179B  2F9D               	goto	u3510
  9218  179C                     u3511:
  9219  179C  2FD1               	goto	l795
  9220  179D                     u3510:
  9221  179D                     l2707:
  9222  179D  3001               	movlw	1
  9223  179E  07D6               	addwf	___fladd@b,f
  9224  179F  3000               	movlw	0
  9225  17A0  1803               	skipnc
  9226  17A1  3001               	movlw	1
  9227  17A2  07D7               	addwf	___fladd@b+1,f
  9228  17A3  3000               	movlw	0
  9229  17A4  1803               	skipnc
  9230  17A5  3001               	movlw	1
  9231  17A6  07D8               	addwf	___fladd@b+2,f
  9232  17A7  3000               	movlw	0
  9233  17A8  1803               	skipnc
  9234  17A9  3001               	movlw	1
  9235  17AA  07D9               	addwf	___fladd@b+3,f
  9236  17AB                     l2709:
  9237  17AB  1C59               	btfss	___fladd@b+3,0
  9238  17AC  2FAE               	goto	u3521
  9239  17AD  2FAF               	goto	u3520
  9240  17AE                     u3521:
  9241  17AE  2FD1               	goto	l795
  9242  17AF                     u3520:
  9243  17AF                     l2711:
  9244  17AF  0856               	movf	___fladd@b,w
  9245  17B0  00DE               	movwf	??___fladd
  9246  17B1  0857               	movf	___fladd@b+1,w
  9247  17B2  00DF               	movwf	??___fladd+1
  9248  17B3  0858               	movf	___fladd@b+2,w
  9249  17B4  00E0               	movwf	??___fladd+2
  9250  17B5  0859               	movf	___fladd@b+3,w
  9251  17B6  00E1               	movwf	??___fladd+3
  9252  17B7  3001               	movlw	1
  9253  17B8  00E2               	movwf	??___fladd+4
  9254  17B9                     u3535:
  9255  17B9  0D61               	rlf	??___fladd+3,w
  9256  17BA  0CE1               	rrf	??___fladd+3,f
  9257  17BB  0CE0               	rrf	??___fladd+2,f
  9258  17BC  0CDF               	rrf	??___fladd+1,f
  9259  17BD  0CDE               	rrf	??___fladd,f
  9260  17BE                     u3530:
  9261  17BE  0BE2               	decfsz	??___fladd+4,f
  9262  17BF  2FB9               	goto	u3535
  9263  17C0  0861               	movf	??___fladd+3,w
  9264  17C1  00D9               	movwf	___fladd@b+3
  9265  17C2  0860               	movf	??___fladd+2,w
  9266  17C3  00D8               	movwf	___fladd@b+2
  9267  17C4  085F               	movf	??___fladd+1,w
  9268  17C5  00D7               	movwf	___fladd@b+1
  9269  17C6  085E               	movf	??___fladd,w
  9270  17C7  00D6               	movwf	___fladd@b
  9271  17C8  0A68               	incf	___fladd@bexp,w
  9272  17C9  1903               	btfsc	3,2
  9273  17CA  2FCC               	goto	u3541
  9274  17CB  2FCD               	goto	u3540
  9275  17CC                     u3541:
  9276  17CC  2FD1               	goto	l795
  9277  17CD                     u3540:
  9278  17CD                     l2713:
  9279  17CD  3001               	movlw	1
  9280  17CE  00DE               	movwf	??___fladd
  9281  17CF  085E               	movf	??___fladd,w
  9282  17D0  07E8               	addwf	___fladd@bexp,f
  9283  17D1                     l795:
  9284  17D1  0A68               	incf	___fladd@bexp,w
  9285  17D2  1903               	btfsc	3,2
  9286  17D3  2FD5               	goto	u3551
  9287  17D4  2FD6               	goto	u3550
  9288  17D5                     u3551:
  9289  17D5  2FDB               	goto	l2717
  9290  17D6                     u3550:
  9291  17D6                     l2715:
  9292  17D6  0868               	movf	___fladd@bexp,w
  9293  17D7  1D03               	btfss	3,2
  9294  17D8  2FDA               	goto	u3561
  9295  17D9  2FDB               	goto	u3560
  9296  17DA                     u3561:
  9297  17DA  2FE9               	goto	l2723
  9298  17DB                     u3560:
  9299  17DB                     l2717:
  9300  17DB  3000               	movlw	0
  9301  17DC  00D9               	movwf	___fladd@b+3
  9302  17DD  3000               	movlw	0
  9303  17DE  00D8               	movwf	___fladd@b+2
  9304  17DF  3000               	movlw	0
  9305  17E0  00D7               	movwf	___fladd@b+1
  9306  17E1  3000               	movlw	0
  9307  17E2  00D6               	movwf	___fladd@b
  9308  17E3                     l2719:
  9309  17E3  0868               	movf	___fladd@bexp,w
  9310  17E4  1D03               	btfss	3,2
  9311  17E5  2FE7               	goto	u3571
  9312  17E6  2FE8               	goto	u3570
  9313  17E7                     u3571:
  9314  17E7  2FE9               	goto	l2723
  9315  17E8                     u3570:
  9316  17E8                     l2721:
  9317  17E8  01E6               	clrf	___fladd@signs
  9318  17E9                     l2723:
  9319  17E9  1C68               	btfss	___fladd@bexp,0
  9320  17EA  2FEC               	goto	u3581
  9321  17EB  2FED               	goto	u3580
  9322  17EC                     u3581:
  9323  17EC  2FEF               	goto	l2727
  9324  17ED                     u3580:
  9325  17ED                     l2725:
  9326  17ED  17D8               	bsf	___fladd@b+2,7
  9327  17EE  2FF3               	goto	l803
  9328  17EF                     l2727:
  9329  17EF  307F               	movlw	127
  9330  17F0  00DE               	movwf	??___fladd
  9331  17F1  085E               	movf	??___fladd,w
  9332  17F2  05D8               	andwf	___fladd@b+2,f
  9333  17F3                     l803:
  9334  17F3  0868               	movf	___fladd@bexp,w
  9335  17F4  00DE               	movwf	??___fladd
  9336  17F5  1003               	clrc
  9337  17F6  0C5E               	rrf	??___fladd,w
  9338  17F7  00DF               	movwf	??___fladd+1
  9339  17F8  085F               	movf	??___fladd+1,w
  9340  17F9  00D9               	movwf	___fladd@b+3
  9341  17FA                     l2729:
  9342  17FA  1FE6               	btfss	___fladd@signs,7
  9343  17FB  2FFD               	goto	u3591
  9344  17FC  2FFE               	goto	u3590
  9345  17FD                     u3591:
  9346  17FD  2FFF               	goto	l804
  9347  17FE                     u3590:
  9348  17FE                     l2731:
  9349  17FE  17D9               	bsf	___fladd@b+3,7
  9350  17FF                     l804:
  9351  17FF                     l774:
  9352  17FF  0008               	return
  9353  1800                     __end_of___fladd:
  9354                           
  9355                           	psect	text20
  9356  1978                     __ptext20:	
  9357 ;; *************** function ___flneg *****************
  9358 ;; Defined at:
  9359 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  f1              4    2[COMMON] unsigned char 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;		None
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  4    2[COMMON] unsigned char 
  9366 ;; Registers used:
  9367 ;;		wreg
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9373 ;;      Params:         4       0       0       0       0
  9374 ;;      Locals:         0       0       0       0       0
  9375 ;;      Temps:          0       0       0       0       0
  9376 ;;      Totals:         4       0       0       0       0
  9377 ;;Total ram usage:        4 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_sprintf
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           
  9388                           ;psect for function ___flneg
  9389  1978                     ___flneg:
  9390  1978                     l3127:	
  9391                           ;incstack = 0
  9392                           ; Regs used in ___flneg: [wreg]
  9393                           
  9394  1978  0875               	movf	___flneg@f1+3,w
  9395  1979  0474               	iorwf	___flneg@f1+2,w
  9396  197A  0473               	iorwf	___flneg@f1+1,w
  9397  197B  0472               	iorwf	___flneg@f1,w
  9398  197C  1903               	skipnz
  9399  197D  297F               	goto	u4741
  9400  197E  2980               	goto	u4740
  9401  197F                     u4741:
  9402  197F  2982               	goto	l3131
  9403  1980                     u4740:
  9404  1980                     l3129:
  9405  1980  3080               	movlw	128
  9406  1981  06F5               	xorwf	___flneg@f1+3,f
  9407  1982                     l3131:
  9408  1982                     l633:
  9409  1982  0008               	return
  9410  1983                     __end_of___flneg:
  9411                           
  9412                           	psect	text21
  9413  1EA0                     __ptext21:	
  9414 ;; *************** function ___flge *****************
  9415 ;; Defined at:
  9416 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9417 ;; Parameters:    Size  Location     Type
  9418 ;;  ff1             4    2[COMMON] unsigned char 
  9419 ;;  ff2             4    6[COMMON] unsigned char 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;		None               void
  9424 ;; Registers used:
  9425 ;;		wreg, status,2, status,0
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         8       0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0
  9433 ;;      Temps:          0       4       0       0       0
  9434 ;;      Totals:         8       4       0       0       0
  9435 ;;Total ram usage:       12 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; Hardware stack levels required when called:    1
  9438 ;; This function calls:
  9439 ;;		Nothing
  9440 ;; This function is called by:
  9441 ;;		_sprintf
  9442 ;; This function uses a non-reentrant model
  9443 ;;
  9444                           
  9445                           
  9446                           ;psect for function ___flge
  9447  1EA0                     ___flge:
  9448  1EA0                     l3107:	
  9449                           ;incstack = 0
  9450                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9451                           
  9452  1EA0  3000               	movlw	0
  9453  1EA1  0572               	andwf	___flge@ff1,w
  9454  1EA2  1283               	bcf	3,5	;RP0=0, select bank0
  9455  1EA3  1303               	bcf	3,6	;RP1=0, select bank0
  9456  1EA4  00A0               	movwf	??___flge
  9457  1EA5  3000               	movlw	0
  9458  1EA6  0573               	andwf	___flge@ff1+1,w
  9459  1EA7  00A1               	movwf	??___flge+1
  9460  1EA8  3080               	movlw	128
  9461  1EA9  0574               	andwf	___flge@ff1+2,w
  9462  1EAA  00A2               	movwf	??___flge+2
  9463  1EAB  307F               	movlw	127
  9464  1EAC  0575               	andwf	___flge@ff1+3,w
  9465  1EAD  00A3               	movwf	??___flge+3
  9466  1EAE  0823               	movf	??___flge+3,w
  9467  1EAF  0422               	iorwf	??___flge+2,w
  9468  1EB0  0421               	iorwf	??___flge+1,w
  9469  1EB1  0420               	iorwf	??___flge,w
  9470  1EB2  1D03               	skipz
  9471  1EB3  2EB5               	goto	u4671
  9472  1EB4  2EB6               	goto	u4670
  9473  1EB5                     u4671:
  9474  1EB5  2EBE               	goto	l625
  9475  1EB6                     u4670:
  9476  1EB6                     l3109:
  9477  1EB6  3000               	movlw	0
  9478  1EB7  00F5               	movwf	___flge@ff1+3
  9479  1EB8  3000               	movlw	0
  9480  1EB9  00F4               	movwf	___flge@ff1+2
  9481  1EBA  3000               	movlw	0
  9482  1EBB  00F3               	movwf	___flge@ff1+1
  9483  1EBC  3000               	movlw	0
  9484  1EBD  00F2               	movwf	___flge@ff1
  9485  1EBE                     l625:
  9486  1EBE  3000               	movlw	0
  9487  1EBF  0576               	andwf	___flge@ff2,w
  9488  1EC0  00A0               	movwf	??___flge
  9489  1EC1  3000               	movlw	0
  9490  1EC2  0577               	andwf	___flge@ff2+1,w
  9491  1EC3  00A1               	movwf	??___flge+1
  9492  1EC4  3080               	movlw	128
  9493  1EC5  0578               	andwf	___flge@ff2+2,w
  9494  1EC6  00A2               	movwf	??___flge+2
  9495  1EC7  307F               	movlw	127
  9496  1EC8  0579               	andwf	___flge@ff2+3,w
  9497  1EC9  00A3               	movwf	??___flge+3
  9498  1ECA  0823               	movf	??___flge+3,w
  9499  1ECB  0422               	iorwf	??___flge+2,w
  9500  1ECC  0421               	iorwf	??___flge+1,w
  9501  1ECD  0420               	iorwf	??___flge,w
  9502  1ECE  1D03               	skipz
  9503  1ECF  2ED1               	goto	u4681
  9504  1ED0  2ED2               	goto	u4680
  9505  1ED1                     u4681:
  9506  1ED1  2EDA               	goto	l3113
  9507  1ED2                     u4680:
  9508  1ED2                     l3111:
  9509  1ED2  3000               	movlw	0
  9510  1ED3  00F9               	movwf	___flge@ff2+3
  9511  1ED4  3000               	movlw	0
  9512  1ED5  00F8               	movwf	___flge@ff2+2
  9513  1ED6  3000               	movlw	0
  9514  1ED7  00F7               	movwf	___flge@ff2+1
  9515  1ED8  3000               	movlw	0
  9516  1ED9  00F6               	movwf	___flge@ff2
  9517  1EDA                     l3113:
  9518  1EDA  1FF5               	btfss	___flge@ff1+3,7
  9519  1EDB  2EDD               	goto	u4691
  9520  1EDC  2EDE               	goto	u4690
  9521  1EDD                     u4691:
  9522  1EDD  2F02               	goto	l3117
  9523  1EDE                     u4690:
  9524  1EDE                     l3115:
  9525  1EDE  3000               	movlw	0
  9526  1EDF  00A0               	movwf	??___flge
  9527  1EE0  3000               	movlw	0
  9528  1EE1  00A1               	movwf	??___flge+1
  9529  1EE2  3000               	movlw	0
  9530  1EE3  00A2               	movwf	??___flge+2
  9531  1EE4  3080               	movlw	128
  9532  1EE5  00A3               	movwf	??___flge+3
  9533  1EE6  0872               	movf	___flge@ff1,w
  9534  1EE7  02A0               	subwf	??___flge,f
  9535  1EE8  0873               	movf	___flge@ff1+1,w
  9536  1EE9  1C03               	skipc
  9537  1EEA  0F73               	incfsz	___flge@ff1+1,w
  9538  1EEB  2EED               	goto	u4701
  9539  1EEC  2EEE               	goto	u4702
  9540  1EED                     u4701:
  9541  1EED  02A1               	subwf	??___flge+1,f
  9542  1EEE                     u4702:
  9543  1EEE  0874               	movf	___flge@ff1+2,w
  9544  1EEF  1C03               	skipc
  9545  1EF0  0F74               	incfsz	___flge@ff1+2,w
  9546  1EF1  2EF3               	goto	u4703
  9547  1EF2  2EF4               	goto	u4704
  9548  1EF3                     u4703:
  9549  1EF3  02A2               	subwf	??___flge+2,f
  9550  1EF4                     u4704:
  9551  1EF4  0875               	movf	___flge@ff1+3,w
  9552  1EF5  1C03               	skipc
  9553  1EF6  0F75               	incfsz	___flge@ff1+3,w
  9554  1EF7  2EF9               	goto	u4705
  9555  1EF8  2EFA               	goto	u4706
  9556  1EF9                     u4705:
  9557  1EF9  02A3               	subwf	??___flge+3,f
  9558  1EFA                     u4706:
  9559  1EFA  0823               	movf	??___flge+3,w
  9560  1EFB  00F5               	movwf	___flge@ff1+3
  9561  1EFC  0822               	movf	??___flge+2,w
  9562  1EFD  00F4               	movwf	___flge@ff1+2
  9563  1EFE  0821               	movf	??___flge+1,w
  9564  1EFF  00F3               	movwf	___flge@ff1+1
  9565  1F00  0820               	movf	??___flge,w
  9566  1F01  00F2               	movwf	___flge@ff1
  9567  1F02                     l3117:
  9568  1F02  1FF9               	btfss	___flge@ff2+3,7
  9569  1F03  2F05               	goto	u4711
  9570  1F04  2F06               	goto	u4710
  9571  1F05                     u4711:
  9572  1F05  2F2A               	goto	l628
  9573  1F06                     u4710:
  9574  1F06                     l3119:
  9575  1F06  3000               	movlw	0
  9576  1F07  00A0               	movwf	??___flge
  9577  1F08  3000               	movlw	0
  9578  1F09  00A1               	movwf	??___flge+1
  9579  1F0A  3000               	movlw	0
  9580  1F0B  00A2               	movwf	??___flge+2
  9581  1F0C  3080               	movlw	128
  9582  1F0D  00A3               	movwf	??___flge+3
  9583  1F0E  0876               	movf	___flge@ff2,w
  9584  1F0F  02A0               	subwf	??___flge,f
  9585  1F10  0877               	movf	___flge@ff2+1,w
  9586  1F11  1C03               	skipc
  9587  1F12  0F77               	incfsz	___flge@ff2+1,w
  9588  1F13  2F15               	goto	u4721
  9589  1F14  2F16               	goto	u4722
  9590  1F15                     u4721:
  9591  1F15  02A1               	subwf	??___flge+1,f
  9592  1F16                     u4722:
  9593  1F16  0878               	movf	___flge@ff2+2,w
  9594  1F17  1C03               	skipc
  9595  1F18  0F78               	incfsz	___flge@ff2+2,w
  9596  1F19  2F1B               	goto	u4723
  9597  1F1A  2F1C               	goto	u4724
  9598  1F1B                     u4723:
  9599  1F1B  02A2               	subwf	??___flge+2,f
  9600  1F1C                     u4724:
  9601  1F1C  0879               	movf	___flge@ff2+3,w
  9602  1F1D  1C03               	skipc
  9603  1F1E  0F79               	incfsz	___flge@ff2+3,w
  9604  1F1F  2F21               	goto	u4725
  9605  1F20  2F22               	goto	u4726
  9606  1F21                     u4725:
  9607  1F21  02A3               	subwf	??___flge+3,f
  9608  1F22                     u4726:
  9609  1F22  0823               	movf	??___flge+3,w
  9610  1F23  00F9               	movwf	___flge@ff2+3
  9611  1F24  0822               	movf	??___flge+2,w
  9612  1F25  00F8               	movwf	___flge@ff2+2
  9613  1F26  0821               	movf	??___flge+1,w
  9614  1F27  00F7               	movwf	___flge@ff2+1
  9615  1F28  0820               	movf	??___flge,w
  9616  1F29  00F6               	movwf	___flge@ff2
  9617  1F2A                     l628:
  9618  1F2A  3080               	movlw	128
  9619  1F2B  06F5               	xorwf	___flge@ff1+3,f
  9620  1F2C  3080               	movlw	128
  9621  1F2D  06F9               	xorwf	___flge@ff2+3,f
  9622  1F2E  0879               	movf	___flge@ff2+3,w
  9623  1F2F  0275               	subwf	___flge@ff1+3,w
  9624  1F30  1D03               	skipz
  9625  1F31  2F3C               	goto	u4735
  9626  1F32  0878               	movf	___flge@ff2+2,w
  9627  1F33  0274               	subwf	___flge@ff1+2,w
  9628  1F34  1D03               	skipz
  9629  1F35  2F3C               	goto	u4735
  9630  1F36  0877               	movf	___flge@ff2+1,w
  9631  1F37  0273               	subwf	___flge@ff1+1,w
  9632  1F38  1D03               	skipz
  9633  1F39  2F3C               	goto	u4735
  9634  1F3A  0876               	movf	___flge@ff2,w
  9635  1F3B  0272               	subwf	___flge@ff1,w
  9636  1F3C                     u4735:
  9637  1F3C  1803               	skipnc
  9638  1F3D  2F3F               	goto	u4731
  9639  1F3E  2F40               	goto	u4730
  9640  1F3F                     u4731:
  9641  1F3F  2F42               	goto	l3123
  9642  1F40                     u4730:
  9643  1F40                     l3121:
  9644  1F40  1003               	clrc
  9645  1F41  2F43               	goto	l629
  9646  1F42                     l3123:
  9647  1F42  1403               	setc
  9648  1F43                     l629:
  9649  1F43  0008               	return
  9650  1F44                     __end_of___flge:
  9651                           
  9652                           	psect	text22
  9653  1C04                     __ptext22:	
  9654 ;; *************** function ___fleq *****************
  9655 ;; Defined at:
  9656 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  ff1             4    2[COMMON] unsigned char 
  9659 ;;  ff2             4    6[COMMON] unsigned char 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;		None               void
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         8       0       0       0       0
  9672 ;;      Locals:         0       0       0       0       0
  9673 ;;      Temps:          0       4       0       0       0
  9674 ;;      Totals:         8       4       0       0       0
  9675 ;;Total ram usage:       12 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_sprintf
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function ___fleq
  9687  1C04                     ___fleq:
  9688  1C04                     l3095:	
  9689                           ;incstack = 0
  9690                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9691                           
  9692  1C04  3000               	movlw	0
  9693  1C05  0572               	andwf	___fleq@ff1,w
  9694  1C06  1283               	bcf	3,5	;RP0=0, select bank0
  9695  1C07  1303               	bcf	3,6	;RP1=0, select bank0
  9696  1C08  00A0               	movwf	??___fleq
  9697  1C09  3000               	movlw	0
  9698  1C0A  0573               	andwf	___fleq@ff1+1,w
  9699  1C0B  00A1               	movwf	??___fleq+1
  9700  1C0C  3080               	movlw	128
  9701  1C0D  0574               	andwf	___fleq@ff1+2,w
  9702  1C0E  00A2               	movwf	??___fleq+2
  9703  1C0F  307F               	movlw	127
  9704  1C10  0575               	andwf	___fleq@ff1+3,w
  9705  1C11  00A3               	movwf	??___fleq+3
  9706  1C12  0823               	movf	??___fleq+3,w
  9707  1C13  0422               	iorwf	??___fleq+2,w
  9708  1C14  0421               	iorwf	??___fleq+1,w
  9709  1C15  0420               	iorwf	??___fleq,w
  9710  1C16  1D03               	skipz
  9711  1C17  2C19               	goto	u4641
  9712  1C18  2C1A               	goto	u4640
  9713  1C19                     u4641:
  9714  1C19  2C22               	goto	l620
  9715  1C1A                     u4640:
  9716  1C1A                     l3097:
  9717  1C1A  3000               	movlw	0
  9718  1C1B  00F5               	movwf	___fleq@ff1+3
  9719  1C1C  3000               	movlw	0
  9720  1C1D  00F4               	movwf	___fleq@ff1+2
  9721  1C1E  3000               	movlw	0
  9722  1C1F  00F3               	movwf	___fleq@ff1+1
  9723  1C20  3000               	movlw	0
  9724  1C21  00F2               	movwf	___fleq@ff1
  9725  1C22                     l620:
  9726  1C22  3000               	movlw	0
  9727  1C23  0576               	andwf	___fleq@ff2,w
  9728  1C24  00A0               	movwf	??___fleq
  9729  1C25  3000               	movlw	0
  9730  1C26  0577               	andwf	___fleq@ff2+1,w
  9731  1C27  00A1               	movwf	??___fleq+1
  9732  1C28  3080               	movlw	128
  9733  1C29  0578               	andwf	___fleq@ff2+2,w
  9734  1C2A  00A2               	movwf	??___fleq+2
  9735  1C2B  307F               	movlw	127
  9736  1C2C  0579               	andwf	___fleq@ff2+3,w
  9737  1C2D  00A3               	movwf	??___fleq+3
  9738  1C2E  0823               	movf	??___fleq+3,w
  9739  1C2F  0422               	iorwf	??___fleq+2,w
  9740  1C30  0421               	iorwf	??___fleq+1,w
  9741  1C31  0420               	iorwf	??___fleq,w
  9742  1C32  1D03               	skipz
  9743  1C33  2C35               	goto	u4651
  9744  1C34  2C36               	goto	u4650
  9745  1C35                     u4651:
  9746  1C35  2C3E               	goto	l621
  9747  1C36                     u4650:
  9748  1C36                     l3099:
  9749  1C36  3000               	movlw	0
  9750  1C37  00F9               	movwf	___fleq@ff2+3
  9751  1C38  3000               	movlw	0
  9752  1C39  00F8               	movwf	___fleq@ff2+2
  9753  1C3A  3000               	movlw	0
  9754  1C3B  00F7               	movwf	___fleq@ff2+1
  9755  1C3C  3000               	movlw	0
  9756  1C3D  00F6               	movwf	___fleq@ff2
  9757  1C3E                     l621:
  9758  1C3E  0879               	movf	___fleq@ff2+3,w
  9759  1C3F  0675               	xorwf	___fleq@ff1+3,w
  9760  1C40  1D03               	skipz
  9761  1C41  2C4C               	goto	u4665
  9762  1C42  0878               	movf	___fleq@ff2+2,w
  9763  1C43  0674               	xorwf	___fleq@ff1+2,w
  9764  1C44  1D03               	skipz
  9765  1C45  2C4C               	goto	u4665
  9766  1C46  0877               	movf	___fleq@ff2+1,w
  9767  1C47  0673               	xorwf	___fleq@ff1+1,w
  9768  1C48  1D03               	skipz
  9769  1C49  2C4C               	goto	u4665
  9770  1C4A  0876               	movf	___fleq@ff2,w
  9771  1C4B  0672               	xorwf	___fleq@ff1,w
  9772  1C4C                     u4665:
  9773  1C4C  1903               	skipnz
  9774  1C4D  2C4F               	goto	u4661
  9775  1C4E  2C50               	goto	u4660
  9776  1C4F                     u4661:
  9777  1C4F  2C52               	goto	l3103
  9778  1C50                     u4660:
  9779  1C50                     l3101:
  9780  1C50  1003               	clrc
  9781  1C51  2C53               	goto	l622
  9782  1C52                     l3103:
  9783  1C52  1403               	setc
  9784  1C53                     l622:
  9785  1C53  0008               	return
  9786  1C54                     __end_of___fleq:
  9787                           
  9788                           	psect	text23
  9789  19EF                     __ptext23:	
  9790 ;; *************** function _cadena_caracteres *****************
  9791 ;; Defined at:
  9792 ;;		line 28 in file "UARTP_Master.c"
  9793 ;; Parameters:    Size  Location     Type
  9794 ;;  st              1    wreg     PTR unsigned char 
  9795 ;;		 -> s(20), 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  st              1    6[COMMON] PTR unsigned char 
  9798 ;;		 -> s(20), 
  9799 ;;  i               2    4[COMMON] int 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  1    wreg      void 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9809 ;;      Params:         0       0       0       0       0
  9810 ;;      Locals:         3       0       0       0       0
  9811 ;;      Temps:          1       0       0       0       0
  9812 ;;      Totals:         4       0       0       0       0
  9813 ;;Total ram usage:        4 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    2
  9816 ;; This function calls:
  9817 ;;		_Envio_caracter
  9818 ;; This function is called by:
  9819 ;;		_valorsensores
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           
  9824                           ;psect for function _cadena_caracteres
  9825  19EF                     _cadena_caracteres:
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in _cadena_caracteres: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9829                           ;cadena_caracteres@st stored from wreg
  9830  19EF  00F6               	movwf	cadena_caracteres@st
  9831  19F0                     l3257:
  9832                           
  9833                           ;UARTP_Master.c: 28: void cadena_caracteres(char st[]);UARTP_Master.c: 29: {;UARTP_Maste
      +                          r.c: 30:     int i = 0;
  9834  19F0  01F4               	clrf	cadena_caracteres@i
  9835  19F1  01F5               	clrf	cadena_caracteres@i+1
  9836                           
  9837                           ;UARTP_Master.c: 31:     while (st[i] !=0)
  9838  19F2  2A04               	goto	l3263
  9839  19F3                     l3259:
  9840                           
  9841                           ;UARTP_Master.c: 32:     {;UARTP_Master.c: 33:         Envio_caracter(st[i]);
  9842  19F3  0874               	movf	cadena_caracteres@i,w
  9843  19F4  0776               	addwf	cadena_caracteres@st,w
  9844  19F5  00F3               	movwf	??_cadena_caracteres
  9845  19F6  0873               	movf	??_cadena_caracteres,w
  9846  19F7  0084               	movwf	4
  9847  19F8  0800               	movf	0,w
  9848  19F9  160A  158A  216E  160A  158A  	fcall	_Envio_caracter
  9849  19FE                     l3261:
  9850                           
  9851                           ;UARTP_Master.c: 34:         i++;
  9852  19FE  3001               	movlw	1
  9853  19FF  07F4               	addwf	cadena_caracteres@i,f
  9854  1A00  1803               	skipnc
  9855  1A01  0AF5               	incf	cadena_caracteres@i+1,f
  9856  1A02  3000               	movlw	0
  9857  1A03  07F5               	addwf	cadena_caracteres@i+1,f
  9858  1A04                     l3263:
  9859                           
  9860                           ;UARTP_Master.c: 31:     while (st[i] !=0)
  9861  1A04  0874               	movf	cadena_caracteres@i,w
  9862  1A05  0776               	addwf	cadena_caracteres@st,w
  9863  1A06  00F3               	movwf	??_cadena_caracteres
  9864  1A07  0873               	movf	??_cadena_caracteres,w
  9865  1A08  0084               	movwf	4
  9866  1A09  1783               	bsf	3,7	;select IRP bank2
  9867  1A0A  0800               	movf	0,w
  9868  1A0B  1D03               	btfss	3,2
  9869  1A0C  2A0E               	goto	u5051
  9870  1A0D  2A0F               	goto	u5050
  9871  1A0E                     u5051:
  9872  1A0E  29F3               	goto	l3259
  9873  1A0F                     u5050:
  9874  1A0F                     l64:
  9875  1A0F  0008               	return
  9876  1A10                     __end_of_cadena_caracteres:
  9877                           
  9878                           	psect	text24
  9879  196E                     __ptext24:	
  9880 ;; *************** function _Envio_caracter *****************
  9881 ;; Defined at:
  9882 ;;		line 22 in file "UARTP_Master.c"
  9883 ;; Parameters:    Size  Location     Type
  9884 ;;  caracter        1    wreg     unsigned char 
  9885 ;; Auto vars:     Size  Location     Type
  9886 ;;  caracter        1    2[COMMON] unsigned char 
  9887 ;; Return value:  Size  Location     Type
  9888 ;;                  1    wreg      void 
  9889 ;; Registers used:
  9890 ;;		wreg
  9891 ;; Tracked objects:
  9892 ;;		On entry : 0/0
  9893 ;;		On exit  : 0/0
  9894 ;;		Unchanged: 0/0
  9895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9896 ;;      Params:         0       0       0       0       0
  9897 ;;      Locals:         1       0       0       0       0
  9898 ;;      Temps:          0       0       0       0       0
  9899 ;;      Totals:         1       0       0       0       0
  9900 ;;Total ram usage:        1 bytes
  9901 ;; Hardware stack levels used:    1
  9902 ;; Hardware stack levels required when called:    1
  9903 ;; This function calls:
  9904 ;;		Nothing
  9905 ;; This function is called by:
  9906 ;;		_cadena_caracteres
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           
  9911                           ;psect for function _Envio_caracter
  9912  196E                     _Envio_caracter:
  9913                           
  9914                           ;incstack = 0
  9915                           ; Regs used in _Envio_caracter: [wreg]
  9916                           ;Envio_caracter@caracter stored from wreg
  9917  196E  00F2               	movwf	Envio_caracter@caracter
  9918  196F                     l2873:
  9919  196F                     l55:	
  9920                           ;UARTP_Master.c: 22: void Envio_caracter(char caracter);UARTP_Master.c: 23: {;UARTP_Mast
      +                          er.c: 24:     while(!TXIF);
  9921                           
  9922  196F  1283               	bcf	3,5	;RP0=0, select bank0
  9923  1970  1303               	bcf	3,6	;RP1=0, select bank0
  9924  1971  1E0C               	btfss	12,4	;volatile
  9925  1972  2974               	goto	u3971
  9926  1973  2975               	goto	u3970
  9927  1974                     u3971:
  9928  1974  296F               	goto	l55
  9929  1975                     u3970:
  9930  1975                     l2875:
  9931                           
  9932                           ;UARTP_Master.c: 25:     TXREG = caracter;
  9933  1975  0872               	movf	Envio_caracter@caracter,w
  9934  1976  0099               	movwf	25	;volatile
  9935  1977                     l58:
  9936  1977  0008               	return
  9937  1978                     __end_of_Envio_caracter:
  9938                           
  9939                           	psect	text25
  9940  1A59                     __ptext25:	
  9941 ;; *************** function _setup *****************
  9942 ;; Defined at:
  9943 ;;		line 105 in file "main_proyectoMaster.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;		None
  9946 ;; Auto vars:     Size  Location     Type
  9947 ;;		None
  9948 ;; Return value:  Size  Location     Type
  9949 ;;                  1    wreg      void 
  9950 ;; Registers used:
  9951 ;;		wreg, status,2, status,0, pclath, cstack
  9952 ;; Tracked objects:
  9953 ;;		On entry : 0/0
  9954 ;;		On exit  : 0/0
  9955 ;;		Unchanged: 0/0
  9956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9957 ;;      Params:         0       0       0       0       0
  9958 ;;      Locals:         0       0       0       0       0
  9959 ;;      Temps:          0       0       0       0       0
  9960 ;;      Totals:         0       0       0       0       0
  9961 ;;Total ram usage:        0 bytes
  9962 ;; Hardware stack levels used:    1
  9963 ;; Hardware stack levels required when called:    3
  9964 ;; This function calls:
  9965 ;;		_I2C_Master_Init
  9966 ;;		_configuracionUART
  9967 ;; This function is called by:
  9968 ;;		_main
  9969 ;; This function uses a non-reentrant model
  9970 ;;
  9971                           
  9972                           
  9973                           ;psect for function _setup
  9974  1A59                     _setup:
  9975  1A59                     l3603:	
  9976                           ;incstack = 0
  9977                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  9978                           
  9979                           
  9980                           ;main_proyectoMaster.c: 108:     ANSEL = 0b00000000;
  9981  1A59  1683               	bsf	3,5	;RP0=1, select bank3
  9982  1A5A  1703               	bsf	3,6	;RP1=1, select bank3
  9983  1A5B  0188               	clrf	8	;volatile
  9984                           
  9985                           ;main_proyectoMaster.c: 109:     ANSELH = 0x00;
  9986  1A5C  0189               	clrf	9	;volatile
  9987                           
  9988                           ;main_proyectoMaster.c: 111:     TRISA = 0x00;
  9989  1A5D  1683               	bsf	3,5	;RP0=1, select bank1
  9990  1A5E  1303               	bcf	3,6	;RP1=0, select bank1
  9991  1A5F  0185               	clrf	5	;volatile
  9992  1A60                     l3605:
  9993                           
  9994                           ;main_proyectoMaster.c: 112:     TRISB = 0b00000001;
  9995  1A60  3001               	movlw	1
  9996  1A61  0086               	movwf	6	;volatile
  9997  1A62                     l3607:
  9998                           
  9999                           ;main_proyectoMaster.c: 113:     TRISE = 0x00;
 10000  1A62  0189               	clrf	9	;volatile
 10001  1A63                     l3609:
 10002                           
 10003                           ;main_proyectoMaster.c: 114:     TRISBbits.TRISB0 = 1;
 10004  1A63  1406               	bsf	6,0	;volatile
 10005  1A64                     l3611:
 10006                           
 10007                           ;main_proyectoMaster.c: 115:     OPTION_REGbits.nRBPU = 0;
 10008  1A64  1381               	bcf	1,7	;volatile
 10009                           
 10010                           ;main_proyectoMaster.c: 116:     WPUB = 0b00000001;
 10011  1A65  3001               	movlw	1
 10012  1A66  0095               	movwf	21	;volatile
 10013  1A67                     l3613:
 10014                           
 10015                           ;main_proyectoMaster.c: 117:     PORTA = 0x00;
 10016  1A67  1283               	bcf	3,5	;RP0=0, select bank0
 10017  1A68  1303               	bcf	3,6	;RP1=0, select bank0
 10018  1A69  0185               	clrf	5	;volatile
 10019  1A6A                     l3615:
 10020                           
 10021                           ;main_proyectoMaster.c: 118:     PORTE = 0x00;
 10022  1A6A  0189               	clrf	9	;volatile
 10023  1A6B                     l3617:
 10024                           
 10025                           ;main_proyectoMaster.c: 120:     I2C_Master_Init(100000);
 10026  1A6B  3000               	movlw	0
 10027  1A6C  00A8               	movwf	I2C_Master_Init@c+3
 10028  1A6D  3001               	movlw	1
 10029  1A6E  00A7               	movwf	I2C_Master_Init@c+2
 10030  1A6F  3086               	movlw	134
 10031  1A70  00A6               	movwf	I2C_Master_Init@c+1
 10032  1A71  30A0               	movlw	160
 10033  1A72  00A5               	movwf	I2C_Master_Init@c
 10034  1A73  160A  158A  22C0  160A  158A  	fcall	_I2C_Master_Init
 10035  1A78                     l3619:
 10036                           
 10037                           ;main_proyectoMaster.c: 122:     OSCCONbits. IRCF2 = 1;
 10038  1A78  1683               	bsf	3,5	;RP0=1, select bank1
 10039  1A79  1303               	bcf	3,6	;RP1=0, select bank1
 10040  1A7A  170F               	bsf	15,6	;volatile
 10041  1A7B                     l3621:
 10042                           
 10043                           ;main_proyectoMaster.c: 123:     OSCCONbits. IRCF1 = 1;
 10044  1A7B  168F               	bsf	15,5	;volatile
 10045  1A7C                     l3623:
 10046                           
 10047                           ;main_proyectoMaster.c: 124:     OSCCONbits. IRCF0 = 0;
 10048  1A7C  120F               	bcf	15,4	;volatile
 10049  1A7D                     l3625:
 10050                           
 10051                           ;main_proyectoMaster.c: 125:     OSCCONbits. SCS = 1;
 10052  1A7D  140F               	bsf	15,0	;volatile
 10053  1A7E                     l3627:
 10054                           
 10055                           ;main_proyectoMaster.c: 127:     configuracionUART();
 10056  1A7E  160A  158A  21DA  160A  158A  	fcall	_configuracionUART
 10057  1A83                     l3629:
 10058                           
 10059                           ;main_proyectoMaster.c: 129:     IOCBbits. IOCB0 = 1;
 10060  1A83  1683               	bsf	3,5	;RP0=1, select bank1
 10061  1A84  1303               	bcf	3,6	;RP1=0, select bank1
 10062  1A85  1416               	bsf	22,0	;volatile
 10063  1A86                     l3631:
 10064                           
 10065                           ;main_proyectoMaster.c: 132:     INTCONbits. GIE = 1;
 10066  1A86  178B               	bsf	11,7	;volatile
 10067  1A87                     l3633:
 10068                           
 10069                           ;main_proyectoMaster.c: 133:     INTCONbits. RBIE = 1;
 10070  1A87  158B               	bsf	11,3	;volatile
 10071  1A88                     l3635:
 10072                           
 10073                           ;main_proyectoMaster.c: 134:     INTCONbits. RBIF = 0;
 10074  1A88  100B               	bcf	11,0	;volatile
 10075  1A89                     l3637:
 10076                           
 10077                           ;main_proyectoMaster.c: 135:     INTCONbits.PEIE = 1;
 10078  1A89  170B               	bsf	11,6	;volatile
 10079  1A8A                     l185:
 10080  1A8A  0008               	return
 10081  1A8B                     __end_of_setup:
 10082                           
 10083                           	psect	text26
 10084  19DA                     __ptext26:	
 10085 ;; *************** function _configuracionUART *****************
 10086 ;; Defined at:
 10087 ;;		line 137 in file "main_proyectoMaster.c"
 10088 ;; Parameters:    Size  Location     Type
 10089 ;;		None
 10090 ;; Auto vars:     Size  Location     Type
 10091 ;;		None
 10092 ;; Return value:  Size  Location     Type
 10093 ;;                  1    wreg      void 
 10094 ;; Registers used:
 10095 ;;		wreg, status,2
 10096 ;; Tracked objects:
 10097 ;;		On entry : 0/0
 10098 ;;		On exit  : 0/0
 10099 ;;		Unchanged: 0/0
 10100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10101 ;;      Params:         0       0       0       0       0
 10102 ;;      Locals:         0       0       0       0       0
 10103 ;;      Temps:          0       0       0       0       0
 10104 ;;      Totals:         0       0       0       0       0
 10105 ;;Total ram usage:        0 bytes
 10106 ;; Hardware stack levels used:    1
 10107 ;; Hardware stack levels required when called:    1
 10108 ;; This function calls:
 10109 ;;		Nothing
 10110 ;; This function is called by:
 10111 ;;		_setup
 10112 ;; This function uses a non-reentrant model
 10113 ;;
 10114                           
 10115                           
 10116                           ;psect for function _configuracionUART
 10117  19DA                     _configuracionUART:
 10118  19DA                     l3515:	
 10119                           ;incstack = 0
 10120                           ; Regs used in _configuracionUART: [wreg+status,2]
 10121                           
 10122                           
 10123                           ;main_proyectoMaster.c: 139:     TXSTAbits.SYNC = 0;
 10124  19DA  1683               	bsf	3,5	;RP0=1, select bank1
 10125  19DB  1303               	bcf	3,6	;RP1=0, select bank1
 10126  19DC  1218               	bcf	24,4	;volatile
 10127                           
 10128                           ;main_proyectoMaster.c: 140:     TXSTAbits.BRGH = 1;
 10129  19DD  1518               	bsf	24,2	;volatile
 10130                           
 10131                           ;main_proyectoMaster.c: 141:     BAUDCTLbits.BRG16 = 0;
 10132  19DE  1683               	bsf	3,5	;RP0=1, select bank3
 10133  19DF  1703               	bsf	3,6	;RP1=1, select bank3
 10134  19E0  1187               	bcf	7,3	;volatile
 10135  19E1                     l3517:
 10136                           
 10137                           ;main_proyectoMaster.c: 143:     SPBRG = 25;
 10138  19E1  3019               	movlw	25
 10139  19E2  1683               	bsf	3,5	;RP0=1, select bank1
 10140  19E3  1303               	bcf	3,6	;RP1=0, select bank1
 10141  19E4  0099               	movwf	25	;volatile
 10142  19E5                     l3519:
 10143                           
 10144                           ;main_proyectoMaster.c: 144:     SPBRGH = 0;
 10145  19E5  019A               	clrf	26	;volatile
 10146  19E6                     l3521:
 10147                           
 10148                           ;main_proyectoMaster.c: 146:     RCSTAbits.SPEN = 1;
 10149  19E6  1283               	bcf	3,5	;RP0=0, select bank0
 10150  19E7  1303               	bcf	3,6	;RP1=0, select bank0
 10151  19E8  1798               	bsf	24,7	;volatile
 10152  19E9                     l3523:
 10153                           
 10154                           ;main_proyectoMaster.c: 147:     RCSTAbits.RX9 = 0;
 10155  19E9  1318               	bcf	24,6	;volatile
 10156  19EA                     l3525:
 10157                           
 10158                           ;main_proyectoMaster.c: 148:     RCSTAbits.CREN = 1;
 10159  19EA  1618               	bsf	24,4	;volatile
 10160  19EB                     l3527:
 10161                           
 10162                           ;main_proyectoMaster.c: 150:     TXSTAbits.TXEN = 1;
 10163  19EB  1683               	bsf	3,5	;RP0=1, select bank1
 10164  19EC  1303               	bcf	3,6	;RP1=0, select bank1
 10165  19ED  1698               	bsf	24,5	;volatile
 10166  19EE                     l188:
 10167  19EE  0008               	return
 10168  19EF                     __end_of_configuracionUART:
 10169                           
 10170                           	psect	text27
 10171  1AC0                     __ptext27:	
 10172 ;; *************** function _I2C_Master_Init *****************
 10173 ;; Defined at:
 10174 ;;		line 9 in file "I2CP_Master.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  c               4    5[BANK0 ] const unsigned long 
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, status,2, status,0, pclath, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10188 ;;      Params:         0       4       0       0       0
 10189 ;;      Locals:         0       0       0       0       0
 10190 ;;      Temps:          0       4       0       0       0
 10191 ;;      Totals:         0       8       0       0       0
 10192 ;;Total ram usage:        8 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:    2
 10195 ;; This function calls:
 10196 ;;		___lldiv
 10197 ;; This function is called by:
 10198 ;;		_setup
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           
 10203                           ;psect for function _I2C_Master_Init
 10204  1AC0                     _I2C_Master_Init:
 10205  1AC0                     l3503:	
 10206                           ;incstack = 0
 10207                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10208                           
 10209                           
 10210                           ;I2CP_Master.c: 9: void I2C_Master_Init(const unsigned long c);I2CP_Master.c: 10: {;I2CP
      +                          _Master.c: 11:     SSPCON = 0b00101000;
 10211  1AC0  3028               	movlw	40
 10212  1AC1  1283               	bcf	3,5	;RP0=0, select bank0
 10213  1AC2  1303               	bcf	3,6	;RP1=0, select bank0
 10214  1AC3  0094               	movwf	20	;volatile
 10215  1AC4                     l3505:
 10216                           
 10217                           ;I2CP_Master.c: 12:     SSPCON2 = 0;
 10218  1AC4  1683               	bsf	3,5	;RP0=1, select bank1
 10219  1AC5  1303               	bcf	3,6	;RP1=0, select bank1
 10220  1AC6  0191               	clrf	17	;volatile
 10221  1AC7                     l3507:
 10222                           
 10223                           ;I2CP_Master.c: 13:     SSPADD = (4000000/(4*c))-1;
 10224  1AC7  1283               	bcf	3,5	;RP0=0, select bank0
 10225  1AC8  1303               	bcf	3,6	;RP1=0, select bank0
 10226  1AC9  0825               	movf	I2C_Master_Init@c,w
 10227  1ACA  00A9               	movwf	??_I2C_Master_Init
 10228  1ACB  0826               	movf	I2C_Master_Init@c+1,w
 10229  1ACC  00AA               	movwf	??_I2C_Master_Init+1
 10230  1ACD  0827               	movf	I2C_Master_Init@c+2,w
 10231  1ACE  00AB               	movwf	??_I2C_Master_Init+2
 10232  1ACF  0828               	movf	I2C_Master_Init@c+3,w
 10233  1AD0  00AC               	movwf	??_I2C_Master_Init+3
 10234  1AD1  3002               	movlw	2
 10235  1AD2                     u5475:
 10236  1AD2  1003               	clrc
 10237  1AD3  0DA9               	rlf	??_I2C_Master_Init,f
 10238  1AD4  0DAA               	rlf	??_I2C_Master_Init+1,f
 10239  1AD5  0DAB               	rlf	??_I2C_Master_Init+2,f
 10240  1AD6  0DAC               	rlf	??_I2C_Master_Init+3,f
 10241  1AD7                     u5470:
 10242  1AD7  3EFF               	addlw	-1
 10243  1AD8  1D03               	skipz
 10244  1AD9  2AD2               	goto	u5475
 10245  1ADA  082C               	movf	??_I2C_Master_Init+3,w
 10246  1ADB  00F5               	movwf	___lldiv@divisor+3
 10247  1ADC  082B               	movf	??_I2C_Master_Init+2,w
 10248  1ADD  00F4               	movwf	___lldiv@divisor+2
 10249  1ADE  082A               	movf	??_I2C_Master_Init+1,w
 10250  1ADF  00F3               	movwf	___lldiv@divisor+1
 10251  1AE0  0829               	movf	??_I2C_Master_Init,w
 10252  1AE1  00F2               	movwf	___lldiv@divisor
 10253  1AE2  3000               	movlw	0
 10254  1AE3  00F9               	movwf	___lldiv@dividend+3
 10255  1AE4  303D               	movlw	61
 10256  1AE5  00F8               	movwf	___lldiv@dividend+2
 10257  1AE6  3009               	movlw	9
 10258  1AE7  00F7               	movwf	___lldiv@dividend+1
 10259  1AE8  3000               	movlw	0
 10260  1AE9  00F6               	movwf	___lldiv@dividend
 10261  1AEA  160A  158A  2553  160A  158A  	fcall	___lldiv
 10262  1AEF  0872               	movf	?___lldiv,w
 10263  1AF0  3EFF               	addlw	255
 10264  1AF1  1683               	bsf	3,5	;RP0=1, select bank1
 10265  1AF2  1303               	bcf	3,6	;RP1=0, select bank1
 10266  1AF3  0093               	movwf	19	;volatile
 10267  1AF4                     l3509:
 10268                           
 10269                           ;I2CP_Master.c: 14:     SSPSTAT = 0;
 10270  1AF4  0194               	clrf	20	;volatile
 10271  1AF5                     l3511:
 10272                           
 10273                           ;I2CP_Master.c: 15:     TRISCbits.TRISC3 = 1;
 10274  1AF5  1587               	bsf	7,3	;volatile
 10275  1AF6                     l3513:
 10276                           
 10277                           ;I2CP_Master.c: 16:     TRISCbits.TRISC4 = 1;
 10278  1AF6  1607               	bsf	7,4	;volatile
 10279  1AF7                     l220:
 10280  1AF7  0008               	return
 10281  1AF8                     __end_of_I2C_Master_Init:
 10282                           
 10283                           	psect	text28
 10284  1D53                     __ptext28:	
 10285 ;; *************** function ___lldiv *****************
 10286 ;; Defined at:
 10287 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10288 ;; Parameters:    Size  Location     Type
 10289 ;;  divisor         4    2[COMMON] unsigned long 
 10290 ;;  dividend        4    6[COMMON] unsigned long 
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;  quotient        4    0[BANK0 ] unsigned long 
 10293 ;;  counter         1    4[BANK0 ] unsigned char 
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  4    2[COMMON] unsigned long 
 10296 ;; Registers used:
 10297 ;;		wreg, status,2, status,0
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10303 ;;      Params:         8       0       0       0       0
 10304 ;;      Locals:         0       5       0       0       0
 10305 ;;      Temps:          1       0       0       0       0
 10306 ;;      Totals:         9       5       0       0       0
 10307 ;;Total ram usage:       14 bytes
 10308 ;; Hardware stack levels used:    1
 10309 ;; Hardware stack levels required when called:    1
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_I2C_Master_Init
 10314 ;;		_sprintf
 10315 ;; This function uses a non-reentrant model
 10316 ;;
 10317                           
 10318                           
 10319                           ;psect for function ___lldiv
 10320  1D53                     ___lldiv:
 10321  1D53                     l3071:	
 10322                           ;incstack = 0
 10323                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10324                           
 10325  1D53  3000               	movlw	0
 10326  1D54  1283               	bcf	3,5	;RP0=0, select bank0
 10327  1D55  1303               	bcf	3,6	;RP1=0, select bank0
 10328  1D56  00A3               	movwf	___lldiv@quotient+3
 10329  1D57  3000               	movlw	0
 10330  1D58  00A2               	movwf	___lldiv@quotient+2
 10331  1D59  3000               	movlw	0
 10332  1D5A  00A1               	movwf	___lldiv@quotient+1
 10333  1D5B  3000               	movlw	0
 10334  1D5C  00A0               	movwf	___lldiv@quotient
 10335  1D5D  0875               	movf	___lldiv@divisor+3,w
 10336  1D5E  0474               	iorwf	___lldiv@divisor+2,w
 10337  1D5F  0473               	iorwf	___lldiv@divisor+1,w
 10338  1D60  0472               	iorwf	___lldiv@divisor,w
 10339  1D61  1903               	skipnz
 10340  1D62  2D64               	goto	u4571
 10341  1D63  2D65               	goto	u4570
 10342  1D64                     u4571:
 10343  1D64  2DB2               	goto	l3091
 10344  1D65                     u4570:
 10345  1D65                     l3073:
 10346  1D65  01A4               	clrf	___lldiv@counter
 10347  1D66  0AA4               	incf	___lldiv@counter,f
 10348  1D67  2D75               	goto	l3077
 10349  1D68                     l3075:
 10350  1D68  3001               	movlw	1
 10351  1D69  00FA               	movwf	??___lldiv
 10352  1D6A                     u4585:
 10353  1D6A  1003               	clrc
 10354  1D6B  0DF2               	rlf	___lldiv@divisor,f
 10355  1D6C  0DF3               	rlf	___lldiv@divisor+1,f
 10356  1D6D  0DF4               	rlf	___lldiv@divisor+2,f
 10357  1D6E  0DF5               	rlf	___lldiv@divisor+3,f
 10358  1D6F  0BFA               	decfsz	??___lldiv,f
 10359  1D70  2D6A               	goto	u4585
 10360  1D71  3001               	movlw	1
 10361  1D72  00FA               	movwf	??___lldiv
 10362  1D73  087A               	movf	??___lldiv,w
 10363  1D74  07A4               	addwf	___lldiv@counter,f
 10364  1D75                     l3077:
 10365  1D75  1FF5               	btfss	___lldiv@divisor+3,7
 10366  1D76  2D78               	goto	u4591
 10367  1D77  2D79               	goto	u4590
 10368  1D78                     u4591:
 10369  1D78  2D68               	goto	l3075
 10370  1D79                     u4590:
 10371  1D79                     l3079:
 10372  1D79  3001               	movlw	1
 10373  1D7A  00FA               	movwf	??___lldiv
 10374  1D7B                     u4605:
 10375  1D7B  1003               	clrc
 10376  1D7C  0DA0               	rlf	___lldiv@quotient,f
 10377  1D7D  0DA1               	rlf	___lldiv@quotient+1,f
 10378  1D7E  0DA2               	rlf	___lldiv@quotient+2,f
 10379  1D7F  0DA3               	rlf	___lldiv@quotient+3,f
 10380  1D80  0BFA               	decfsz	??___lldiv,f
 10381  1D81  2D7B               	goto	u4605
 10382  1D82                     l3081:
 10383  1D82  0875               	movf	___lldiv@divisor+3,w
 10384  1D83  0279               	subwf	___lldiv@dividend+3,w
 10385  1D84  1D03               	skipz
 10386  1D85  2D90               	goto	u4615
 10387  1D86  0874               	movf	___lldiv@divisor+2,w
 10388  1D87  0278               	subwf	___lldiv@dividend+2,w
 10389  1D88  1D03               	skipz
 10390  1D89  2D90               	goto	u4615
 10391  1D8A  0873               	movf	___lldiv@divisor+1,w
 10392  1D8B  0277               	subwf	___lldiv@dividend+1,w
 10393  1D8C  1D03               	skipz
 10394  1D8D  2D90               	goto	u4615
 10395  1D8E  0872               	movf	___lldiv@divisor,w
 10396  1D8F  0276               	subwf	___lldiv@dividend,w
 10397  1D90                     u4615:
 10398  1D90  1C03               	skipc
 10399  1D91  2D93               	goto	u4611
 10400  1D92  2D94               	goto	u4610
 10401  1D93                     u4611:
 10402  1D93  2DA3               	goto	l3087
 10403  1D94                     u4610:
 10404  1D94                     l3083:
 10405  1D94  0872               	movf	___lldiv@divisor,w
 10406  1D95  02F6               	subwf	___lldiv@dividend,f
 10407  1D96  0873               	movf	___lldiv@divisor+1,w
 10408  1D97  1C03               	skipc
 10409  1D98  0F73               	incfsz	___lldiv@divisor+1,w
 10410  1D99  02F7               	subwf	___lldiv@dividend+1,f
 10411  1D9A  0874               	movf	___lldiv@divisor+2,w
 10412  1D9B  1C03               	skipc
 10413  1D9C  0F74               	incfsz	___lldiv@divisor+2,w
 10414  1D9D  02F8               	subwf	___lldiv@dividend+2,f
 10415  1D9E  0875               	movf	___lldiv@divisor+3,w
 10416  1D9F  1C03               	skipc
 10417  1DA0  0F75               	incfsz	___lldiv@divisor+3,w
 10418  1DA1  02F9               	subwf	___lldiv@dividend+3,f
 10419  1DA2                     l3085:
 10420  1DA2  1420               	bsf	___lldiv@quotient,0
 10421  1DA3                     l3087:
 10422  1DA3  3001               	movlw	1
 10423  1DA4                     u4625:
 10424  1DA4  1003               	clrc
 10425  1DA5  0CF5               	rrf	___lldiv@divisor+3,f
 10426  1DA6  0CF4               	rrf	___lldiv@divisor+2,f
 10427  1DA7  0CF3               	rrf	___lldiv@divisor+1,f
 10428  1DA8  0CF2               	rrf	___lldiv@divisor,f
 10429  1DA9  3EFF               	addlw	-1
 10430  1DAA  1D03               	skipz
 10431  1DAB  2DA4               	goto	u4625
 10432  1DAC                     l3089:
 10433  1DAC  3001               	movlw	1
 10434  1DAD  02A4               	subwf	___lldiv@counter,f
 10435  1DAE  1D03               	btfss	3,2
 10436  1DAF  2DB1               	goto	u4631
 10437  1DB0  2DB2               	goto	u4630
 10438  1DB1                     u4631:
 10439  1DB1  2D79               	goto	l3079
 10440  1DB2                     u4630:
 10441  1DB2                     l3091:
 10442  1DB2  0823               	movf	___lldiv@quotient+3,w
 10443  1DB3  00F5               	movwf	?___lldiv+3
 10444  1DB4  0822               	movf	___lldiv@quotient+2,w
 10445  1DB5  00F4               	movwf	?___lldiv+2
 10446  1DB6  0821               	movf	___lldiv@quotient+1,w
 10447  1DB7  00F3               	movwf	?___lldiv+1
 10448  1DB8  0820               	movf	___lldiv@quotient,w
 10449  1DB9  00F2               	movwf	?___lldiv
 10450  1DBA                     l470:
 10451  1DBA  0008               	return
 10452  1DBB                     __end_of___lldiv:
 10453                           
 10454                           	psect	text29
 10455  082D                     __ptext29:	
 10456 ;; *************** function _com_master *****************
 10457 ;; Defined at:
 10458 ;;		line 152 in file "main_proyectoMaster.c"
 10459 ;; Parameters:    Size  Location     Type
 10460 ;;		None
 10461 ;; Auto vars:     Size  Location     Type
 10462 ;;		None
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, status,2, status,0, pclath, cstack
 10467 ;; Tracked objects:
 10468 ;;		On entry : 0/0
 10469 ;;		On exit  : 0/0
 10470 ;;		Unchanged: 0/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10472 ;;      Params:         0       0       0       0       0
 10473 ;;      Locals:         0       0       0       0       0
 10474 ;;      Temps:          3       0       0       0       0
 10475 ;;      Totals:         3       0       0       0       0
 10476 ;;Total ram usage:        3 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; Hardware stack levels required when called:    3
 10479 ;; This function calls:
 10480 ;;		_I2C_Master_Read
 10481 ;;		_I2C_Master_Start
 10482 ;;		_I2C_Master_Stop
 10483 ;;		_I2C_Master_Write
 10484 ;; This function is called by:
 10485 ;;		_main
 10486 ;; This function uses a non-reentrant model
 10487 ;;
 10488                           
 10489                           
 10490                           ;psect for function _com_master
 10491  082D                     _com_master:
 10492  082D                     l3639:	
 10493                           ;incstack = 0
 10494                           ; Regs used in _com_master: [wreg+status,2+status,0+pclath+cstack]
 10495                           
 10496                           
 10497                           ;main_proyectoMaster.c: 154:     I2C_Master_Start();
 10498  082D  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10499                           
 10500                           ;main_proyectoMaster.c: 155:     I2C_Master_Write(0x50);
 10501  0832  3050               	movlw	80
 10502  0833  00F2               	movwf	I2C_Master_Write@d
 10503  0834  3000               	movlw	0
 10504  0835  00F3               	movwf	I2C_Master_Write@d+1
 10505  0836  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10506                           
 10507                           ;main_proyectoMaster.c: 156:     I2C_Master_Write(BanStart);
 10508  083B  087B               	movf	_BanStart,w
 10509  083C  00F8               	movwf	??_com_master
 10510  083D  01F9               	clrf	??_com_master+1
 10511  083E  0878               	movf	??_com_master,w
 10512  083F  00F2               	movwf	I2C_Master_Write@d
 10513  0840  0879               	movf	??_com_master+1,w
 10514  0841  00F3               	movwf	I2C_Master_Write@d+1
 10515  0842  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10516                           
 10517                           ;main_proyectoMaster.c: 157:     I2C_Master_Stop();
 10518  0847  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10519  084C                     l3641:
 10520                           
 10521                           ;main_proyectoMaster.c: 158:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10522  084C  3002               	movlw	2
 10523  084D  00FA               	movwf	??_com_master+2
 10524  084E  3004               	movlw	4
 10525  084F  00F9               	movwf	??_com_master+1
 10526  0850  30BA               	movlw	186
 10527  0851  00F8               	movwf	??_com_master
 10528  0852                     u6197:
 10529  0852  0BF8               	decfsz	??_com_master,f
 10530  0853  2852               	goto	u6197
 10531  0854  0BF9               	decfsz	??_com_master+1,f
 10532  0855  2852               	goto	u6197
 10533  0856  0BFA               	decfsz	??_com_master+2,f
 10534  0857  2852               	goto	u6197
 10535  0858  0000               	nop
 10536  0859                     l3643:
 10537                           
 10538                           ;main_proyectoMaster.c: 160:     I2C_Master_Start();
 10539  0859  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10540  085E                     l3645:
 10541                           
 10542                           ;main_proyectoMaster.c: 161:     I2C_Master_Write(0x51);
 10543  085E  3051               	movlw	81
 10544  085F  00F2               	movwf	I2C_Master_Write@d
 10545  0860  3000               	movlw	0
 10546  0861  00F3               	movwf	I2C_Master_Write@d+1
 10547  0862  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10548  0867                     l3647:
 10549                           
 10550                           ;main_proyectoMaster.c: 162:     POT = I2C_Master_Read(0);
 10551  0867  3000               	movlw	0
 10552  0868  00F2               	movwf	I2C_Master_Read@a
 10553  0869  00F3               	movwf	I2C_Master_Read@a+1
 10554  086A  120A  118A  27D0  120A  158A  	fcall	_I2C_Master_Read
 10555  086F  0873               	movf	?_I2C_Master_Read+1,w
 10556  0870  1683               	bsf	3,5	;RP0=1, select bank1
 10557  0871  1303               	bcf	3,6	;RP1=0, select bank1
 10558  0872  00D9               	movwf	(_POT+1)^(0+128)
 10559  0873  0872               	movf	?_I2C_Master_Read,w
 10560  0874  00D8               	movwf	_POT^(0+128)
 10561  0875                     l3649:
 10562                           
 10563                           ;main_proyectoMaster.c: 163:     I2C_Master_Stop();
 10564  0875  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10565  087A                     l3651:
 10566                           
 10567                           ;main_proyectoMaster.c: 164:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10568  087A  3002               	movlw	2
 10569  087B  00FA               	movwf	??_com_master+2
 10570  087C  3004               	movlw	4
 10571  087D  00F9               	movwf	??_com_master+1
 10572  087E  30BA               	movlw	186
 10573  087F  00F8               	movwf	??_com_master
 10574  0880                     u6207:
 10575  0880  0BF8               	decfsz	??_com_master,f
 10576  0881  2880               	goto	u6207
 10577  0882  0BF9               	decfsz	??_com_master+1,f
 10578  0883  2880               	goto	u6207
 10579  0884  0BFA               	decfsz	??_com_master+2,f
 10580  0885  2880               	goto	u6207
 10581  0886  0000               	nop
 10582                           
 10583                           ;main_proyectoMaster.c: 166:     I2C_Master_Start();
 10584  0887  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10585                           
 10586                           ;main_proyectoMaster.c: 167:     I2C_Master_Write(0x20);
 10587  088C  3020               	movlw	32
 10588  088D  00F2               	movwf	I2C_Master_Write@d
 10589  088E  3000               	movlw	0
 10590  088F  00F3               	movwf	I2C_Master_Write@d+1
 10591  0890  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10592                           
 10593                           ;main_proyectoMaster.c: 168:     I2C_Master_Write(BanStart);
 10594  0895  087B               	movf	_BanStart,w
 10595  0896  00F8               	movwf	??_com_master
 10596  0897  01F9               	clrf	??_com_master+1
 10597  0898  0878               	movf	??_com_master,w
 10598  0899  00F2               	movwf	I2C_Master_Write@d
 10599  089A  0879               	movf	??_com_master+1,w
 10600  089B  00F3               	movwf	I2C_Master_Write@d+1
 10601  089C  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10602                           
 10603                           ;main_proyectoMaster.c: 169:     I2C_Master_Stop();
 10604  08A1  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10605  08A6                     l3653:
 10606                           
 10607                           ;main_proyectoMaster.c: 170:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10608  08A6  3002               	movlw	2
 10609  08A7  00FA               	movwf	??_com_master+2
 10610  08A8  3004               	movlw	4
 10611  08A9  00F9               	movwf	??_com_master+1
 10612  08AA  30BA               	movlw	186
 10613  08AB  00F8               	movwf	??_com_master
 10614  08AC                     u6217:
 10615  08AC  0BF8               	decfsz	??_com_master,f
 10616  08AD  28AC               	goto	u6217
 10617  08AE  0BF9               	decfsz	??_com_master+1,f
 10618  08AF  28AC               	goto	u6217
 10619  08B0  0BFA               	decfsz	??_com_master+2,f
 10620  08B1  28AC               	goto	u6217
 10621  08B2  0000               	nop
 10622  08B3                     l3655:
 10623                           
 10624                           ;main_proyectoMaster.c: 172:     I2C_Master_Start();
 10625  08B3  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10626  08B8                     l3657:
 10627                           
 10628                           ;main_proyectoMaster.c: 173:     I2C_Master_Write(0x21);
 10629  08B8  3021               	movlw	33
 10630  08B9  00F2               	movwf	I2C_Master_Write@d
 10631  08BA  3000               	movlw	0
 10632  08BB  00F3               	movwf	I2C_Master_Write@d+1
 10633  08BC  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10634  08C1                     l3659:
 10635                           
 10636                           ;main_proyectoMaster.c: 174:     contRecipiente = I2C_Master_Read(0);
 10637  08C1  3000               	movlw	0
 10638  08C2  00F2               	movwf	I2C_Master_Read@a
 10639  08C3  00F3               	movwf	I2C_Master_Read@a+1
 10640  08C4  120A  118A  27D0  120A  158A  	fcall	_I2C_Master_Read
 10641  08C9  0873               	movf	?_I2C_Master_Read+1,w
 10642  08CA  1683               	bsf	3,5	;RP0=1, select bank1
 10643  08CB  1303               	bcf	3,6	;RP1=0, select bank1
 10644  08CC  00D7               	movwf	(_contRecipiente+1)^(0+128)
 10645  08CD  0872               	movf	?_I2C_Master_Read,w
 10646  08CE  00D6               	movwf	_contRecipiente^(0+128)
 10647  08CF                     l3661:
 10648                           
 10649                           ;main_proyectoMaster.c: 175:     I2C_Master_Stop();
 10650  08CF  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10651  08D4                     l3663:
 10652                           
 10653                           ;main_proyectoMaster.c: 176:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10654  08D4  3002               	movlw	2
 10655  08D5  00FA               	movwf	??_com_master+2
 10656  08D6  3004               	movlw	4
 10657  08D7  00F9               	movwf	??_com_master+1
 10658  08D8  30BA               	movlw	186
 10659  08D9  00F8               	movwf	??_com_master
 10660  08DA                     u6227:
 10661  08DA  0BF8               	decfsz	??_com_master,f
 10662  08DB  28DA               	goto	u6227
 10663  08DC  0BF9               	decfsz	??_com_master+1,f
 10664  08DD  28DA               	goto	u6227
 10665  08DE  0BFA               	decfsz	??_com_master+2,f
 10666  08DF  28DA               	goto	u6227
 10667  08E0  0000               	nop
 10668                           
 10669                           ;main_proyectoMaster.c: 178:     I2C_Master_Start();
 10670  08E1  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10671                           
 10672                           ;main_proyectoMaster.c: 179:     I2C_Master_Write(0x40);
 10673  08E6  3040               	movlw	64
 10674  08E7  00F2               	movwf	I2C_Master_Write@d
 10675  08E8  3000               	movlw	0
 10676  08E9  00F3               	movwf	I2C_Master_Write@d+1
 10677  08EA  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10678                           
 10679                           ;main_proyectoMaster.c: 180:     I2C_Master_Write(BanStart);
 10680  08EF  087B               	movf	_BanStart,w
 10681  08F0  00F8               	movwf	??_com_master
 10682  08F1  01F9               	clrf	??_com_master+1
 10683  08F2  0878               	movf	??_com_master,w
 10684  08F3  00F2               	movwf	I2C_Master_Write@d
 10685  08F4  0879               	movf	??_com_master+1,w
 10686  08F5  00F3               	movwf	I2C_Master_Write@d+1
 10687  08F6  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10688                           
 10689                           ;main_proyectoMaster.c: 181:     I2C_Master_Stop();
 10690  08FB  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10691  0900                     l3665:
 10692                           
 10693                           ;main_proyectoMaster.c: 182:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10694  0900  3002               	movlw	2
 10695  0901  00FA               	movwf	??_com_master+2
 10696  0902  3004               	movlw	4
 10697  0903  00F9               	movwf	??_com_master+1
 10698  0904  30BA               	movlw	186
 10699  0905  00F8               	movwf	??_com_master
 10700  0906                     u6237:
 10701  0906  0BF8               	decfsz	??_com_master,f
 10702  0907  2906               	goto	u6237
 10703  0908  0BF9               	decfsz	??_com_master+1,f
 10704  0909  2906               	goto	u6237
 10705  090A  0BFA               	decfsz	??_com_master+2,f
 10706  090B  2906               	goto	u6237
 10707  090C  0000               	nop
 10708  090D                     l3667:
 10709                           
 10710                           ;main_proyectoMaster.c: 184:     I2C_Master_Start();
 10711  090D  160A  158A  2152  120A  158A  	fcall	_I2C_Master_Start
 10712  0912                     l3669:
 10713                           
 10714                           ;main_proyectoMaster.c: 185:     I2C_Master_Write(0x41);
 10715  0912  3041               	movlw	65
 10716  0913  00F2               	movwf	I2C_Master_Write@d
 10717  0914  3000               	movlw	0
 10718  0915  00F3               	movwf	I2C_Master_Write@d+1
 10719  0916  160A  158A  2164  120A  158A  	fcall	_I2C_Master_Write
 10720  091B                     l3671:
 10721                           
 10722                           ;main_proyectoMaster.c: 186:     datUltrasonico = I2C_Master_Read(0);
 10723  091B  3000               	movlw	0
 10724  091C  00F2               	movwf	I2C_Master_Read@a
 10725  091D  00F3               	movwf	I2C_Master_Read@a+1
 10726  091E  120A  118A  27D0  120A  158A  	fcall	_I2C_Master_Read
 10727  0923  0873               	movf	?_I2C_Master_Read+1,w
 10728  0924  1683               	bsf	3,5	;RP0=1, select bank1
 10729  0925  1303               	bcf	3,6	;RP1=0, select bank1
 10730  0926  00D5               	movwf	(_datUltrasonico+1)^(0+128)
 10731  0927  0872               	movf	?_I2C_Master_Read,w
 10732  0928  00D4               	movwf	_datUltrasonico^(0+128)
 10733  0929                     l3673:
 10734                           
 10735                           ;main_proyectoMaster.c: 187:     I2C_Master_Stop();
 10736  0929  160A  158A  215B  120A  158A  	fcall	_I2C_Master_Stop
 10737  092E                     l3675:
 10738                           
 10739                           ;main_proyectoMaster.c: 188:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10740  092E  3002               	movlw	2
 10741  092F  00FA               	movwf	??_com_master+2
 10742  0930  3004               	movlw	4
 10743  0931  00F9               	movwf	??_com_master+1
 10744  0932  30BA               	movlw	186
 10745  0933  00F8               	movwf	??_com_master
 10746  0934                     u6247:
 10747  0934  0BF8               	decfsz	??_com_master,f
 10748  0935  2934               	goto	u6247
 10749  0936  0BF9               	decfsz	??_com_master+1,f
 10750  0937  2934               	goto	u6247
 10751  0938  0BFA               	decfsz	??_com_master+2,f
 10752  0939  2934               	goto	u6247
 10753  093A  0000               	nop
 10754  093B                     l191:
 10755  093B  0008               	return
 10756  093C                     __end_of_com_master:
 10757                           
 10758                           	psect	text30
 10759  1964                     __ptext30:	
 10760 ;; *************** function _I2C_Master_Write *****************
 10761 ;; Defined at:
 10762 ;;		line 58 in file "I2CP_Master.c"
 10763 ;; Parameters:    Size  Location     Type
 10764 ;;  d               2    2[COMMON] unsigned int 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;		None
 10767 ;; Return value:  Size  Location     Type
 10768 ;;                  1    wreg      void 
 10769 ;; Registers used:
 10770 ;;		wreg, status,2, status,0, pclath, cstack
 10771 ;; Tracked objects:
 10772 ;;		On entry : 0/0
 10773 ;;		On exit  : 0/0
 10774 ;;		Unchanged: 0/0
 10775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10776 ;;      Params:         2       0       0       0       0
 10777 ;;      Locals:         0       0       0       0       0
 10778 ;;      Temps:          0       0       0       0       0
 10779 ;;      Totals:         2       0       0       0       0
 10780 ;;Total ram usage:        2 bytes
 10781 ;; Hardware stack levels used:    1
 10782 ;; Hardware stack levels required when called:    2
 10783 ;; This function calls:
 10784 ;;		_I2C_Master_Wait
 10785 ;; This function is called by:
 10786 ;;		_com_master
 10787 ;; This function uses a non-reentrant model
 10788 ;;
 10789                           
 10790                           
 10791                           ;psect for function _I2C_Master_Write
 10792  1964                     _I2C_Master_Write:
 10793  1964                     l3533:	
 10794                           ;incstack = 0
 10795                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10796                           
 10797                           
 10798                           ;I2CP_Master.c: 58: void I2C_Master_Write(unsigned d);I2CP_Master.c: 59: {;I2CP_Master.c
      +                          : 60:     I2C_Master_Wait();
 10799  1964  160A  158A  2183  160A  158A  	fcall	_I2C_Master_Wait
 10800  1969                     l3535:
 10801                           
 10802                           ;I2CP_Master.c: 61:     SSPBUF = d;
 10803  1969  0872               	movf	I2C_Master_Write@d,w
 10804  196A  1283               	bcf	3,5	;RP0=0, select bank0
 10805  196B  1303               	bcf	3,6	;RP1=0, select bank0
 10806  196C  0093               	movwf	19	;volatile
 10807  196D                     l238:
 10808  196D  0008               	return
 10809  196E                     __end_of_I2C_Master_Write:
 10810                           
 10811                           	psect	text31
 10812  195B                     __ptext31:	
 10813 ;; *************** function _I2C_Master_Stop *****************
 10814 ;; Defined at:
 10815 ;;		line 48 in file "I2CP_Master.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;		None
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      void 
 10822 ;; Registers used:
 10823 ;;		wreg, status,2, status,0, pclath, cstack
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10829 ;;      Params:         0       0       0       0       0
 10830 ;;      Locals:         0       0       0       0       0
 10831 ;;      Temps:          0       0       0       0       0
 10832 ;;      Totals:         0       0       0       0       0
 10833 ;;Total ram usage:        0 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    2
 10836 ;; This function calls:
 10837 ;;		_I2C_Master_Wait
 10838 ;; This function is called by:
 10839 ;;		_com_master
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _I2C_Master_Stop
 10845  195B                     _I2C_Master_Stop:
 10846  195B                     l3537:	
 10847                           ;incstack = 0
 10848                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10849                           
 10850                           
 10851                           ;I2CP_Master.c: 50:     I2C_Master_Wait();
 10852  195B  160A  158A  2183  160A  158A  	fcall	_I2C_Master_Wait
 10853  1960                     l3539:
 10854                           
 10855                           ;I2CP_Master.c: 51:     SSPCON2bits.PEN = 1;
 10856  1960  1683               	bsf	3,5	;RP0=1, select bank1
 10857  1961  1303               	bcf	3,6	;RP1=0, select bank1
 10858  1962  1511               	bsf	17,2	;volatile
 10859  1963                     l235:
 10860  1963  0008               	return
 10861  1964                     __end_of_I2C_Master_Stop:
 10862                           
 10863                           	psect	text32
 10864  1952                     __ptext32:	
 10865 ;; *************** function _I2C_Master_Start *****************
 10866 ;; Defined at:
 10867 ;;		line 32 in file "I2CP_Master.c"
 10868 ;; Parameters:    Size  Location     Type
 10869 ;;		None
 10870 ;; Auto vars:     Size  Location     Type
 10871 ;;		None
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  1    wreg      void 
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0, pclath, cstack
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10881 ;;      Params:         0       0       0       0       0
 10882 ;;      Locals:         0       0       0       0       0
 10883 ;;      Temps:          0       0       0       0       0
 10884 ;;      Totals:         0       0       0       0       0
 10885 ;;Total ram usage:        0 bytes
 10886 ;; Hardware stack levels used:    1
 10887 ;; Hardware stack levels required when called:    2
 10888 ;; This function calls:
 10889 ;;		_I2C_Master_Wait
 10890 ;; This function is called by:
 10891 ;;		_com_master
 10892 ;; This function uses a non-reentrant model
 10893 ;;
 10894                           
 10895                           
 10896                           ;psect for function _I2C_Master_Start
 10897  1952                     _I2C_Master_Start:
 10898  1952                     l3529:	
 10899                           ;incstack = 0
 10900                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10901                           
 10902                           
 10903                           ;I2CP_Master.c: 34:     I2C_Master_Wait();
 10904  1952  160A  158A  2183  160A  158A  	fcall	_I2C_Master_Wait
 10905  1957                     l3531:
 10906                           
 10907                           ;I2CP_Master.c: 35:     SSPCON2bits.SEN = 1;
 10908  1957  1683               	bsf	3,5	;RP0=1, select bank1
 10909  1958  1303               	bcf	3,6	;RP1=0, select bank1
 10910  1959  1411               	bsf	17,0	;volatile
 10911  195A                     l229:
 10912  195A  0008               	return
 10913  195B                     __end_of_I2C_Master_Start:
 10914                           
 10915                           	psect	text33
 10916  07D0                     __ptext33:	
 10917 ;; *************** function _I2C_Master_Read *****************
 10918 ;; Defined at:
 10919 ;;		line 67 in file "I2CP_Master.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  a               2    2[COMMON] unsigned short 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;  temp            2    6[COMMON] unsigned short 
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  2    2[COMMON] unsigned short 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0, pclath, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10933 ;;      Params:         2       0       0       0       0
 10934 ;;      Locals:         2       0       0       0       0
 10935 ;;      Temps:          2       0       0       0       0
 10936 ;;      Totals:         6       0       0       0       0
 10937 ;;Total ram usage:        6 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; Hardware stack levels required when called:    2
 10940 ;; This function calls:
 10941 ;;		_I2C_Master_Wait
 10942 ;; This function is called by:
 10943 ;;		_com_master
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           
 10948                           ;psect for function _I2C_Master_Read
 10949  07D0                     _I2C_Master_Read:
 10950  07D0                     l3541:	
 10951                           ;incstack = 0
 10952                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10953                           
 10954                           
 10955                           ;I2CP_Master.c: 67: unsigned short I2C_Master_Read(unsigned short a);I2CP_Master.c: 68: 
      +                          {;I2CP_Master.c: 69:     unsigned short temp;;I2CP_Master.c: 70:     I2C_Master_Wait();
 10956  07D0  160A  158A  2183  120A  118A  	fcall	_I2C_Master_Wait
 10957  07D5                     l3543:
 10958                           
 10959                           ;I2CP_Master.c: 71:     SSPCON2bits.RCEN = 1;
 10960  07D5  1683               	bsf	3,5	;RP0=1, select bank1
 10961  07D6  1303               	bcf	3,6	;RP1=0, select bank1
 10962  07D7  1591               	bsf	17,3	;volatile
 10963                           
 10964                           ;I2CP_Master.c: 72:     I2C_Master_Wait();
 10965  07D8  160A  158A  2183  120A  118A  	fcall	_I2C_Master_Wait
 10966  07DD                     l3545:
 10967                           
 10968                           ;I2CP_Master.c: 73:     temp = SSPBUF;
 10969  07DD  1283               	bcf	3,5	;RP0=0, select bank0
 10970  07DE  1303               	bcf	3,6	;RP1=0, select bank0
 10971  07DF  0813               	movf	19,w	;volatile
 10972  07E0  00F4               	movwf	??_I2C_Master_Read
 10973  07E1  01F5               	clrf	??_I2C_Master_Read+1
 10974  07E2  0874               	movf	??_I2C_Master_Read,w
 10975  07E3  00F6               	movwf	I2C_Master_Read@temp
 10976  07E4  0875               	movf	??_I2C_Master_Read+1,w
 10977  07E5  00F7               	movwf	I2C_Master_Read@temp+1
 10978  07E6                     l3547:
 10979                           
 10980                           ;I2CP_Master.c: 74:     I2C_Master_Wait();
 10981  07E6  160A  158A  2183  120A  118A  	fcall	_I2C_Master_Wait
 10982  07EB                     l3549:
 10983                           
 10984                           ;I2CP_Master.c: 75:     if(a == 1){
 10985  07EB  0372               	decf	I2C_Master_Read@a,w
 10986  07EC  0473               	iorwf	I2C_Master_Read@a+1,w
 10987  07ED  1D03               	btfss	3,2
 10988  07EE  2FF0               	goto	u5481
 10989  07EF  2FF1               	goto	u5480
 10990  07F0                     u5481:
 10991  07F0  2FF5               	goto	l241
 10992  07F1                     u5480:
 10993  07F1                     l3551:
 10994                           
 10995                           ;I2CP_Master.c: 76:         SSPCON2bits.ACKDT = 0;
 10996  07F1  1683               	bsf	3,5	;RP0=1, select bank1
 10997  07F2  1303               	bcf	3,6	;RP1=0, select bank1
 10998  07F3  1291               	bcf	17,5	;volatile
 10999                           
 11000                           ;I2CP_Master.c: 77:     }
 11001  07F4  2FF8               	goto	l242
 11002  07F5                     l241:	
 11003                           ;I2CP_Master.c: 78:     else
 11004                           
 11005                           
 11006                           ;I2CP_Master.c: 79:     {;I2CP_Master.c: 80:         SSPCON2bits.ACKDT = 1;
 11007  07F5  1683               	bsf	3,5	;RP0=1, select bank1
 11008  07F6  1303               	bcf	3,6	;RP1=0, select bank1
 11009  07F7  1691               	bsf	17,5	;volatile
 11010  07F8                     l242:	
 11011                           ;I2CP_Master.c: 81:     }
 11012                           
 11013                           
 11014                           ;I2CP_Master.c: 82:     SSPCON2bits.ACKEN = 1;
 11015  07F8  1611               	bsf	17,4	;volatile
 11016  07F9                     l3553:
 11017                           
 11018                           ;I2CP_Master.c: 83:     return temp;
 11019  07F9  0877               	movf	I2C_Master_Read@temp+1,w
 11020  07FA  00F3               	movwf	?_I2C_Master_Read+1
 11021  07FB  0876               	movf	I2C_Master_Read@temp,w
 11022  07FC  00F2               	movwf	?_I2C_Master_Read
 11023  07FD                     l243:
 11024  07FD  0008               	return
 11025  07FE                     __end_of_I2C_Master_Read:
 11026                           
 11027                           	psect	text34
 11028  1983                     __ptext34:	
 11029 ;; *************** function _I2C_Master_Wait *****************
 11030 ;; Defined at:
 11031 ;;		line 25 in file "I2CP_Master.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;		None
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;		None
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      void 
 11038 ;; Registers used:
 11039 ;;		wreg, status,2
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11045 ;;      Params:         0       0       0       0       0
 11046 ;;      Locals:         0       0       0       0       0
 11047 ;;      Temps:          0       0       0       0       0
 11048 ;;      Totals:         0       0       0       0       0
 11049 ;;Total ram usage:        0 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; Hardware stack levels required when called:    1
 11052 ;; This function calls:
 11053 ;;		Nothing
 11054 ;; This function is called by:
 11055 ;;		_I2C_Master_Start
 11056 ;;		_I2C_Master_Stop
 11057 ;;		_I2C_Master_Write
 11058 ;;		_I2C_Master_Read
 11059 ;;		_I2C_Master_RepeatedStart
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           
 11064                           ;psect for function _I2C_Master_Wait
 11065  1983                     _I2C_Master_Wait:
 11066  1983                     l2879:	
 11067                           ;incstack = 0
 11068                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11069                           
 11070  1983                     l223:	
 11071                           ;I2CP_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11072                           
 11073  1983  1683               	bsf	3,5	;RP0=1, select bank1
 11074  1984  1303               	bcf	3,6	;RP1=0, select bank1
 11075  1985  1914               	btfsc	20,2	;volatile
 11076  1986  2988               	goto	u3981
 11077  1987  2989               	goto	u3980
 11078  1988                     u3981:
 11079  1988  2983               	goto	l223
 11080  1989                     u3980:
 11081  1989                     l2881:
 11082  1989  0811               	movf	17,w	;volatile
 11083  198A  391F               	andlw	31
 11084  198B  1D03               	btfss	3,2
 11085  198C  298E               	goto	u3991
 11086  198D  298F               	goto	u3990
 11087  198E                     u3991:
 11088  198E  2983               	goto	l223
 11089  198F                     u3990:
 11090  198F                     l226:
 11091  198F  0008               	return
 11092  1990                     __end_of_I2C_Master_Wait:
 11093                           
 11094                           	psect	text35
 11095  1B32                     __ptext35:	
 11096 ;; *************** function _Lcd_Write_String *****************
 11097 ;; Defined at:
 11098 ;;		line 76 in file "LCDP_Master.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  a               2    4[COMMON] PTR unsigned char 
 11101 ;;		 -> STR_7(3), STR_6(3), STR_5(3), s(20), 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  i               2    9[COMMON] int 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11113 ;;      Params:         2       0       0       0       0
 11114 ;;      Locals:         2       0       0       0       0
 11115 ;;      Temps:          3       0       0       0       0
 11116 ;;      Totals:         7       0       0       0       0
 11117 ;;Total ram usage:        7 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; Hardware stack levels required when called:    2
 11120 ;; This function calls:
 11121 ;;		_Lcd_Write_Char
 11122 ;; This function is called by:
 11123 ;;		_main
 11124 ;; This function uses a non-reentrant model
 11125 ;;
 11126                           
 11127                           
 11128                           ;psect for function _Lcd_Write_String
 11129  1B32                     _Lcd_Write_String:
 11130  1B32                     l3569:	
 11131                           ;incstack = 0
 11132                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11133                           
 11134                           
 11135                           ;LCDP_Master.c: 76: void Lcd_Write_String(char *a);LCDP_Master.c: 77: {;LCDP_Master.c: 7
      +                          8:  int i;;LCDP_Master.c: 79:  for(i=0;a[i]!='\0';i++)
 11136  1B32  01F9               	clrf	Lcd_Write_String@i
 11137  1B33  01FA               	clrf	Lcd_Write_String@i+1
 11138  1B34  2B57               	goto	l3575
 11139  1B35                     l3571:
 11140                           
 11141                           ;LCDP_Master.c: 80:      Lcd_Write_Char(a[i]);
 11142  1B35  0879               	movf	Lcd_Write_String@i,w
 11143  1B36  0774               	addwf	Lcd_Write_String@a,w
 11144  1B37  00F7               	movwf	??_Lcd_Write_String+1
 11145  1B38  0875               	movf	Lcd_Write_String@a+1,w
 11146  1B39  00F6               	movwf	??_Lcd_Write_String
 11147  1B3A  1803               	skipnc
 11148  1B3B  0AF6               	incf	??_Lcd_Write_String,f
 11149  1B3C  1FF9               	btfss	Lcd_Write_String@i,7
 11150  1B3D  2B3F               	goto	u5510
 11151  1B3E  03F6               	decf	??_Lcd_Write_String,f
 11152  1B3F                     u5510:
 11153  1B3F  0876               	movf	??_Lcd_Write_String,w
 11154  1B40  00F8               	movwf	??_Lcd_Write_String+2
 11155  1B41  0878               	movf	??_Lcd_Write_String+2,w
 11156  1B42  1283               	bcf	3,5	;RP0=0, select bank0
 11157  1B43  1303               	bcf	3,6	;RP1=0, select bank0
 11158  1B44  00FF               	movwf	btemp+1
 11159  1B45  0877               	movf	??_Lcd_Write_String+1,w
 11160  1B46  0084               	movwf	4
 11161  1B47  160A  118A  2000  160A  158A  	fcall	stringtab
 11162  1B4C  160A  158A  2190  160A  158A  	fcall	_Lcd_Write_Char
 11163  1B51                     l3573:
 11164  1B51  3001               	movlw	1
 11165  1B52  07F9               	addwf	Lcd_Write_String@i,f
 11166  1B53  1803               	skipnc
 11167  1B54  0AFA               	incf	Lcd_Write_String@i+1,f
 11168  1B55  3000               	movlw	0
 11169  1B56  07FA               	addwf	Lcd_Write_String@i+1,f
 11170  1B57                     l3575:
 11171  1B57  0879               	movf	Lcd_Write_String@i,w
 11172  1B58  0774               	addwf	Lcd_Write_String@a,w
 11173  1B59  00F7               	movwf	??_Lcd_Write_String+1
 11174  1B5A  0875               	movf	Lcd_Write_String@a+1,w
 11175  1B5B  00F6               	movwf	??_Lcd_Write_String
 11176  1B5C  1803               	skipnc
 11177  1B5D  0AF6               	incf	??_Lcd_Write_String,f
 11178  1B5E  1FF9               	btfss	Lcd_Write_String@i,7
 11179  1B5F  2B61               	goto	u5520
 11180  1B60  03F6               	decf	??_Lcd_Write_String,f
 11181  1B61                     u5520:
 11182  1B61  0876               	movf	??_Lcd_Write_String,w
 11183  1B62  00F8               	movwf	??_Lcd_Write_String+2
 11184  1B63  0878               	movf	??_Lcd_Write_String+2,w
 11185  1B64  1283               	bcf	3,5	;RP0=0, select bank0
 11186  1B65  1303               	bcf	3,6	;RP1=0, select bank0
 11187  1B66  00FF               	movwf	btemp+1
 11188  1B67  0877               	movf	??_Lcd_Write_String+1,w
 11189  1B68  0084               	movwf	4
 11190  1B69  160A  118A  2000  160A  158A  	fcall	stringtab
 11191  1B6E  3A00               	xorlw	0
 11192  1B6F  1D03               	skipz
 11193  1B70  2B72               	goto	u5531
 11194  1B71  2B73               	goto	u5530
 11195  1B72                     u5531:
 11196  1B72  2B35               	goto	l3571
 11197  1B73                     u5530:
 11198  1B73                     l27:
 11199  1B73  0008               	return
 11200  1B74                     __end_of_Lcd_Write_String:
 11201                           
 11202                           	psect	text36
 11203  1990                     __ptext36:	
 11204 ;; *************** function _Lcd_Write_Char *****************
 11205 ;; Defined at:
 11206 ;;		line 68 in file "LCDP_Master.c"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  a               1    wreg     unsigned char 
 11209 ;; Auto vars:     Size  Location     Type
 11210 ;;  a               1    3[COMMON] unsigned char 
 11211 ;; Return value:  Size  Location     Type
 11212 ;;                  1    wreg      void 
 11213 ;; Registers used:
 11214 ;;		wreg
 11215 ;; Tracked objects:
 11216 ;;		On entry : 0/0
 11217 ;;		On exit  : 0/0
 11218 ;;		Unchanged: 0/0
 11219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11220 ;;      Params:         0       0       0       0       0
 11221 ;;      Locals:         1       0       0       0       0
 11222 ;;      Temps:          1       0       0       0       0
 11223 ;;      Totals:         2       0       0       0       0
 11224 ;;Total ram usage:        2 bytes
 11225 ;; Hardware stack levels used:    1
 11226 ;; Hardware stack levels required when called:    1
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_Lcd_Write_String
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           
 11235                           ;psect for function _Lcd_Write_Char
 11236  1990                     _Lcd_Write_Char:
 11237                           
 11238                           ;incstack = 0
 11239                           ; Regs used in _Lcd_Write_Char: [wreg]
 11240                           ;Lcd_Write_Char@a stored from wreg
 11241  1990  00F3               	movwf	Lcd_Write_Char@a
 11242  1991                     l3249:
 11243                           
 11244                           ;LCDP_Master.c: 69:     PORTBbits.RB7 = 1;
 11245  1991  1283               	bcf	3,5	;RP0=0, select bank0
 11246  1992  1303               	bcf	3,6	;RP1=0, select bank0
 11247  1993  1786               	bsf	6,7	;volatile
 11248  1994                     l3251:
 11249                           
 11250                           ;LCDP_Master.c: 70:     PORTD = a;
 11251  1994  0873               	movf	Lcd_Write_Char@a,w
 11252  1995  0088               	movwf	8	;volatile
 11253  1996                     l3253:
 11254                           
 11255                           ;LCDP_Master.c: 71:     PORTBbits.RB6 = 1;
 11256  1996  1706               	bsf	6,6	;volatile
 11257                           
 11258                           ;LCDP_Master.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11259  1997  300D               	movlw	13
 11260  1998  00F2               	movwf	??_Lcd_Write_Char
 11261  1999                     u6257:
 11262  1999  0BF2               	decfsz	??_Lcd_Write_Char,f
 11263  199A  2999               	goto	u6257
 11264  199B                     l3255:
 11265                           
 11266                           ;LCDP_Master.c: 73:     PORTBbits.RB6 = 0;
 11267  199B  1283               	bcf	3,5	;RP0=0, select bank0
 11268  199C  1303               	bcf	3,6	;RP1=0, select bank0
 11269  199D  1306               	bcf	6,6	;volatile
 11270  199E                     l21:
 11271  199E  0008               	return
 11272  199F                     __end_of_Lcd_Write_Char:
 11273                           
 11274                           	psect	text37
 11275  1A10                     __ptext37:	
 11276 ;; *************** function _Lcd_Set_Cursor *****************
 11277 ;; Defined at:
 11278 ;;		line 47 in file "LCDP_Master.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  a               1    wreg     unsigned char 
 11281 ;;  b               1    5[COMMON] unsigned char 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;  a               1    7[COMMON] unsigned char 
 11284 ;;  temp            1    8[COMMON] unsigned char 
 11285 ;;  y               1    0        unsigned char 
 11286 ;;  z               1    0        unsigned char 
 11287 ;; Return value:  Size  Location     Type
 11288 ;;                  1    wreg      void 
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0, pclath, cstack
 11291 ;; Tracked objects:
 11292 ;;		On entry : 0/0
 11293 ;;		On exit  : 0/0
 11294 ;;		Unchanged: 0/0
 11295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11296 ;;      Params:         1       0       0       0       0
 11297 ;;      Locals:         2       0       0       0       0
 11298 ;;      Temps:          1       0       0       0       0
 11299 ;;      Totals:         4       0       0       0       0
 11300 ;;Total ram usage:        4 bytes
 11301 ;; Hardware stack levels used:    1
 11302 ;; Hardware stack levels required when called:    2
 11303 ;; This function calls:
 11304 ;;		_Lcd_Cmd
 11305 ;; This function is called by:
 11306 ;;		_main
 11307 ;; This function uses a non-reentrant model
 11308 ;;
 11309                           
 11310                           
 11311                           ;psect for function _Lcd_Set_Cursor
 11312  1A10                     _Lcd_Set_Cursor:
 11313                           
 11314                           ;incstack = 0
 11315                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11316                           ;Lcd_Set_Cursor@a stored from wreg
 11317  1A10  00F7               	movwf	Lcd_Set_Cursor@a
 11318  1A11                     l3557:
 11319                           
 11320                           ;LCDP_Master.c: 47: void Lcd_Set_Cursor(char a, char b);LCDP_Master.c: 48: {;LCDP_Master
      +                          .c: 49:  char temp,z,y;;LCDP_Master.c: 50:  if(a == 1)
 11321  1A11  0377               	decf	Lcd_Set_Cursor@a,w
 11322  1A12  1D03               	btfss	3,2
 11323  1A13  2A15               	goto	u5491
 11324  1A14  2A16               	goto	u5490
 11325  1A15                     u5491:
 11326  1A15  2A22               	goto	l3563
 11327  1A16                     u5490:
 11328  1A16                     l3559:
 11329                           
 11330                           ;LCDP_Master.c: 51:  {;LCDP_Master.c: 52:    temp = 0x80 + b - 1;
 11331  1A16  0875               	movf	Lcd_Set_Cursor@b,w
 11332  1A17  3E7F               	addlw	127
 11333  1A18  00F6               	movwf	??_Lcd_Set_Cursor
 11334  1A19  0876               	movf	??_Lcd_Set_Cursor,w
 11335  1A1A  00F8               	movwf	Lcd_Set_Cursor@temp
 11336  1A1B                     l3561:
 11337                           
 11338                           ;LCDP_Master.c: 55:   Lcd_Cmd(temp);
 11339  1A1B  0878               	movf	Lcd_Set_Cursor@temp,w
 11340  1A1C  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11341                           
 11342                           ;LCDP_Master.c: 57:  }
 11343  1A21  2A33               	goto	l18
 11344  1A22                     l3563:
 11345  1A22  3002               	movlw	2
 11346  1A23  0677               	xorwf	Lcd_Set_Cursor@a,w
 11347  1A24  1D03               	btfss	3,2
 11348  1A25  2A27               	goto	u5501
 11349  1A26  2A28               	goto	u5500
 11350  1A27                     u5501:
 11351  1A27  2A33               	goto	l18
 11352  1A28                     u5500:
 11353  1A28                     l3565:
 11354                           
 11355                           ;LCDP_Master.c: 59:  {;LCDP_Master.c: 60:   temp = 0xC0 + b - 1;
 11356  1A28  0875               	movf	Lcd_Set_Cursor@b,w
 11357  1A29  3EBF               	addlw	191
 11358  1A2A  00F6               	movwf	??_Lcd_Set_Cursor
 11359  1A2B  0876               	movf	??_Lcd_Set_Cursor,w
 11360  1A2C  00F8               	movwf	Lcd_Set_Cursor@temp
 11361  1A2D                     l3567:
 11362                           
 11363                           ;LCDP_Master.c: 63:   Lcd_Cmd(temp);
 11364  1A2D  0878               	movf	Lcd_Set_Cursor@temp,w
 11365  1A2E  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11366  1A33                     l18:
 11367  1A33  0008               	return
 11368  1A34                     __end_of_Lcd_Set_Cursor:
 11369                           
 11370                           	psect	text38
 11371  1A8B                     __ptext38:	
 11372 ;; *************** function _Lcd_Init *****************
 11373 ;; Defined at:
 11374 ;;		line 83 in file "LCDP_Master.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;		None
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0, pclath, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11388 ;;      Params:         0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0
 11390 ;;      Temps:          2       0       0       0       0
 11391 ;;      Totals:         2       0       0       0       0
 11392 ;;Total ram usage:        2 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    2
 11395 ;; This function calls:
 11396 ;;		_Lcd_Cmd
 11397 ;; This function is called by:
 11398 ;;		_main
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           
 11403                           ;psect for function _Lcd_Init
 11404  1A8B                     _Lcd_Init:
 11405  1A8B                     l3577:	
 11406                           ;incstack = 0
 11407                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11408                           
 11409                           
 11410                           ;LCDP_Master.c: 85:     PORTBbits.RB7 = 0;
 11411  1A8B  1283               	bcf	3,5	;RP0=0, select bank0
 11412  1A8C  1303               	bcf	3,6	;RP1=0, select bank0
 11413  1A8D  1386               	bcf	6,7	;volatile
 11414  1A8E                     l3579:
 11415                           
 11416                           ;LCDP_Master.c: 87:     Lcd_Cmd(0x00);
 11417  1A8E  3000               	movlw	0
 11418  1A8F  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11419  1A94                     l3581:
 11420                           
 11421                           ;LCDP_Master.c: 88:     _delay((unsigned long)((15)*(4000000/4000.0)));
 11422  1A94  3014               	movlw	20
 11423  1A95  00F6               	movwf	??_Lcd_Init+1
 11424  1A96  3079               	movlw	121
 11425  1A97  00F5               	movwf	??_Lcd_Init
 11426  1A98                     u6267:
 11427  1A98  0BF5               	decfsz	??_Lcd_Init,f
 11428  1A99  2A98               	goto	u6267
 11429  1A9A  0BF6               	decfsz	??_Lcd_Init+1,f
 11430  1A9B  2A98               	goto	u6267
 11431  1A9C  2A9D               	nop2
 11432  1A9D                     l3583:
 11433                           
 11434                           ;LCDP_Master.c: 91:     Lcd_Cmd(0x30);
 11435  1A9D  3030               	movlw	48
 11436  1A9E  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11437                           
 11438                           ;LCDP_Master.c: 92:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 11439  1AA3  3035               	movlw	53
 11440  1AA4  00F5               	movwf	??_Lcd_Init
 11441  1AA5                     u6277:
 11442  1AA5  0BF5               	decfsz	??_Lcd_Init,f
 11443  1AA6  2AA5               	goto	u6277
 11444  1AA7                     l3585:
 11445                           
 11446                           ;LCDP_Master.c: 94:     Lcd_Cmd(0x38);
 11447  1AA7  3038               	movlw	56
 11448  1AA8  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11449  1AAD                     l3587:
 11450                           
 11451                           ;LCDP_Master.c: 95:     Lcd_Cmd(0x01);
 11452  1AAD  3001               	movlw	1
 11453  1AAE  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11454  1AB3                     l3589:
 11455                           
 11456                           ;LCDP_Master.c: 96:     Lcd_Cmd(0x06);
 11457  1AB3  3006               	movlw	6
 11458  1AB4  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11459  1AB9                     l3591:
 11460                           
 11461                           ;LCDP_Master.c: 97:     Lcd_Cmd(0x0F);
 11462  1AB9  300F               	movlw	15
 11463  1ABA  160A  158A  21B1  160A  158A  	fcall	_Lcd_Cmd
 11464  1ABF                     l30:
 11465  1ABF  0008               	return
 11466  1AC0                     __end_of_Lcd_Init:
 11467                           
 11468                           	psect	text39
 11469  19B1                     __ptext39:	
 11470 ;; *************** function _Lcd_Cmd *****************
 11471 ;; Defined at:
 11472 ;;		line 33 in file "LCDP_Master.c"
 11473 ;; Parameters:    Size  Location     Type
 11474 ;;  a               1    wreg     unsigned char 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  a               1    4[COMMON] unsigned char 
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11486 ;;      Params:         0       0       0       0       0
 11487 ;;      Locals:         1       0       0       0       0
 11488 ;;      Temps:          2       0       0       0       0
 11489 ;;      Totals:         3       0       0       0       0
 11490 ;;Total ram usage:        3 bytes
 11491 ;; Hardware stack levels used:    1
 11492 ;; Hardware stack levels required when called:    1
 11493 ;; This function calls:
 11494 ;;		Nothing
 11495 ;; This function is called by:
 11496 ;;		_Lcd_Set_Cursor
 11497 ;;		_Lcd_Init
 11498 ;;		_Lcd_Clear
 11499 ;;		_Lcd_Shift_Right
 11500 ;;		_Lcd_Shift_Left
 11501 ;; This function uses a non-reentrant model
 11502 ;;
 11503                           
 11504                           
 11505                           ;psect for function _Lcd_Cmd
 11506  19B1                     _Lcd_Cmd:
 11507                           
 11508                           ;incstack = 0
 11509                           ; Regs used in _Lcd_Cmd: [wreg]
 11510                           ;Lcd_Cmd@a stored from wreg
 11511  19B1  00F4               	movwf	Lcd_Cmd@a
 11512  19B2                     l3241:
 11513                           
 11514                           ;LCDP_Master.c: 34:  PORTBbits.RB7 =0;
 11515  19B2  1283               	bcf	3,5	;RP0=0, select bank0
 11516  19B3  1303               	bcf	3,6	;RP1=0, select bank0
 11517  19B4  1386               	bcf	6,7	;volatile
 11518  19B5                     l3243:
 11519                           
 11520                           ;LCDP_Master.c: 35:  PORTD = a;
 11521  19B5  0874               	movf	Lcd_Cmd@a,w
 11522  19B6  0088               	movwf	8	;volatile
 11523  19B7                     l3245:
 11524                           
 11525                           ;LCDP_Master.c: 36:     PORTBbits.RB6 = 1;
 11526  19B7  1706               	bsf	6,6	;volatile
 11527                           
 11528                           ;LCDP_Master.c: 37:     _delay((unsigned long)((4)*(4000000/4000.0)));
 11529  19B8  3006               	movlw	6
 11530  19B9  00F3               	movwf	??_Lcd_Cmd+1
 11531  19BA  3030               	movlw	48
 11532  19BB  00F2               	movwf	??_Lcd_Cmd
 11533  19BC                     u6287:
 11534  19BC  0BF2               	decfsz	??_Lcd_Cmd,f
 11535  19BD  29BC               	goto	u6287
 11536  19BE  0BF3               	decfsz	??_Lcd_Cmd+1,f
 11537  19BF  29BC               	goto	u6287
 11538  19C0  0000               	nop
 11539  19C1                     l3247:
 11540                           
 11541                           ;LCDP_Master.c: 38:     PORTBbits.RB6 = 0;
 11542  19C1  1283               	bcf	3,5	;RP0=0, select bank0
 11543  19C2  1303               	bcf	3,6	;RP1=0, select bank0
 11544  19C3  1306               	bcf	6,6	;volatile
 11545  19C4                     l9:
 11546  19C4  0008               	return
 11547  19C5                     __end_of_Lcd_Cmd:
 11548                           
 11549                           	psect	text40
 11550  19C5                     __ptext40:	
 11551 ;; *************** function _isr *****************
 11552 ;; Defined at:
 11553 ;;		line 50 in file "main_proyectoMaster.c"
 11554 ;; Parameters:    Size  Location     Type
 11555 ;;		None
 11556 ;; Auto vars:     Size  Location     Type
 11557 ;;		None
 11558 ;; Return value:  Size  Location     Type
 11559 ;;                  1    wreg      void 
 11560 ;; Registers used:
 11561 ;;		None
 11562 ;; Tracked objects:
 11563 ;;		On entry : 0/0
 11564 ;;		On exit  : 0/0
 11565 ;;		Unchanged: 0/0
 11566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11567 ;;      Params:         0       0       0       0       0
 11568 ;;      Locals:         0       0       0       0       0
 11569 ;;      Temps:          2       0       0       0       0
 11570 ;;      Totals:         2       0       0       0       0
 11571 ;;Total ram usage:        2 bytes
 11572 ;; Hardware stack levels used:    1
 11573 ;; This function calls:
 11574 ;;		Nothing
 11575 ;; This function is called by:
 11576 ;;		Interrupt level 1
 11577 ;; This function uses a non-reentrant model
 11578 ;;
 11579                           
 11580                           
 11581                           ;psect for function _isr
 11582  19C5                     _isr:
 11583  19C5                     i1l2295:
 11584                           
 11585                           ;main_proyectoMaster.c: 52:     if(RBIF == 1)
 11586  19C5  1C0B               	btfss	11,0	;volatile
 11587  19C6  29C8               	goto	u276_21
 11588  19C7  29C9               	goto	u276_20
 11589  19C8                     u276_21:
 11590  19C8  29D2               	goto	i1l170
 11591  19C9                     u276_20:
 11592  19C9                     i1l2297:
 11593                           
 11594                           ;main_proyectoMaster.c: 53:     {;main_proyectoMaster.c: 54:         if(RB0 == 0)
 11595  19C9  1283               	bcf	3,5	;RP0=0, select bank0
 11596  19CA  1303               	bcf	3,6	;RP1=0, select bank0
 11597  19CB  1806               	btfsc	6,0	;volatile
 11598  19CC  29CE               	goto	u277_21
 11599  19CD  29CF               	goto	u277_20
 11600  19CE                     u277_21:
 11601  19CE  29D2               	goto	i1l170
 11602  19CF                     u277_20:
 11603  19CF                     i1l2299:
 11604                           
 11605                           ;main_proyectoMaster.c: 55:         {;main_proyectoMaster.c: 56:             BanStart = 
      +                          1;
 11606  19CF  01FB               	clrf	_BanStart
 11607  19D0  0AFB               	incf	_BanStart,f
 11608                           
 11609                           ;main_proyectoMaster.c: 57:             PORTAbits.RA0 = 1;
 11610  19D1  1405               	bsf	5,0	;volatile
 11611  19D2                     i1l170:	
 11612                           ;main_proyectoMaster.c: 59:     }
 11613                           
 11614                           
 11615                           ;main_proyectoMaster.c: 60:     INTCONbits.RBIF = 0;
 11616  19D2  100B               	bcf	11,0	;volatile
 11617  19D3                     i1l172:
 11618  19D3  0871               	movf	??_isr+1,w
 11619  19D4  008A               	movwf	10
 11620  19D5  0E70               	swapf	??_isr,w
 11621  19D6  0083               	movwf	3
 11622  19D7  0EFE               	swapf	btemp,f
 11623  19D8  0E7E               	swapf	btemp,w
 11624  19D9  0009               	retfie
 11625  19DA                     __end_of_isr:
 11626  007E                     btemp	set	126	;btemp
 11627  007E                     wtemp0	set	126
 11628                           
 11629                           	psect	intentry
 11630  0004                     __pintentry:	
 11631                           ;incstack = 0
 11632                           ; Regs used in _isr: []
 11633                           
 11634  0004                     interrupt_function:
 11635  007E                     saved_w	set	btemp
 11636  0004  00FE               	movwf	btemp
 11637  0005  0E03               	swapf	3,w
 11638  0006  00F0               	movwf	??_isr
 11639  0007  080A               	movf	10,w
 11640  0008  00F1               	movwf	??_isr+1
 11641  0009  160A  158A  29C5   	ljmp	_isr
 11642                           
 11643                           	psect	config
 11644                           
 11645                           ;Config register CONFIG1 @ 0x2007
 11646                           ;	Oscillator Selection bits
 11647                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11648                           ;	Watchdog Timer Enable bit
 11649                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11650                           ;	Power-up Timer Enable bit
 11651                           ;	PWRTE = OFF, PWRT disabled
 11652                           ;	RE3/MCLR pin function select bit
 11653                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11654                           ;	Code Protection bit
 11655                           ;	CP = OFF, Program memory code protection is disabled
 11656                           ;	Data Code Protection bit
 11657                           ;	CPD = OFF, Data memory code protection is disabled
 11658                           ;	Brown Out Reset Selection bits
 11659                           ;	BOREN = OFF, BOR disabled
 11660                           ;	Internal External Switchover bit
 11661                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11662                           ;	Fail-Safe Clock Monitor Enabled bit
 11663                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11664                           ;	Low Voltage Programming Enable bit
 11665                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11666                           ;	In-Circuit Debugger Mode bit
 11667                           ;	DEBUG = 0x1, unprogrammed default
 11668  2007                     	org	8199
 11669  2007  20D4               	dw	8404
 11670                           
 11671                           ;Config register CONFIG2 @ 0x2008
 11672                           ;	Brown-out Reset Selection bit
 11673                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11674                           ;	Flash Program Memory Self Write Enable bits
 11675                           ;	WRT = OFF, Write protection off
 11676  2008                     	org	8200
 11677  2008  3FFF               	dw	16383

Data Sizes:
    Strings     76
    Constant    144
    Data        0
    BSS         44
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     80      80
    BANK1            80     40      63
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[5]), STR_8(CODE[8]), STR_4(CODE[7]), STR_3(CODE[14]), 
		 -> STR_2(CODE[16]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena_caracteres@st	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), s(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->_com_master
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___llmod->___lldiv
    _cadena_caracteres->_Envio_caracter
    _I2C_Master_Init->___lldiv
    _com_master->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_valorsensores
    _valorsensores->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _valorsensores->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69754
                                             38 BANK1      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _com_master
                              _setup
                            _sprintf
                      _valorsensores
 ---------------------------------------------------------------------------------
 (1) _valorsensores                                        1     1      0   33458
                                             79 BANK0      1     1      0
                  _cadena_caracteres
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   33247
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     952
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _cadena_caracteres                                    4     4      0     211
                                              3 COMMON     4     4      0
                     _Envio_caracter
 ---------------------------------------------------------------------------------
 (3) _Envio_caracter                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     868
                    _I2C_Master_Init
                  _configuracionUART
 ---------------------------------------------------------------------------------
 (2) _configuracionUART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     770
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _com_master                                           3     3      0     979
                                              8 COMMON     3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     568
                                              4 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     612
                                              5 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _com_master
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _configuracionUART
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _valorsensores
     _cadena_caracteres
       _Envio_caracter
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AF       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      3F       7       78.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AF      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Sep 02 18:31:40 2021

                         l9 19C4                           _s 0190                           pc 0002  
                        l21 199E                          l30 1ABF                          l18 1A33  
                        l27 1B73                          l55 196F                          l64 1A0F  
                        l58 1977                          l67 1C03                ___awdiv@sign 0025  
                        _v1 00D0                          _v2 00CC                          _v3 00C8  
                        fsr 0004         ___wmul@multiplicand 0074         __Umul8_16@word_mpld 0078  
                       l220 1AF7                         l223 1983                         l241 07F5  
                       l226 198F                         l242 07F8                         l402 04B6  
                       l243 07FD                         l235 1963                         l229 195A  
                       l238 196D                         l430 07CF                         l191 093B  
                       l600 1D52                         l185 1A8A                         l409 04FA  
                       l434 1A40                         l178 128C                         l355 0FFF  
                       l188 19EE                         l620 1C22                         l436 1A58  
                       l604 1266                         l348 1577                         l621 1C3E  
                       l605 11CB                         l470 1DBA                         l622 1C53  
                       l374 00A8                         l615 1259                         l608 1229  
                       l625 1EBE                         l633 1982                         l803 17F3  
                       l651 11A8                         l628 1F2A                         l804 17FF  
                       l644 1E8A                         l652 111A                         l740 1BB9  
                       l629 1F43                         l637 1E9F                         l901 1F68  
                       l662 119B                         l750 1B31                         l807 1CA3  
                       l647 1E9F                         l903 1FFF                         l655 116B  
                       l761 15DB                         l921 19B0                         l690 1CF9  
                       l914 1FC9                         l915 1FD5                         l907 1FAD  
                       l587 1E23                         l765 1682                         l782 174D  
                       l774 17FF                         l767 1659                         l863 0C08  
                       l792 1793                         l857 0C9C                         l786 1771  
                       l795 17D1                         l876 081A                         l869 0C90  
                       l878 082C                         _GIE 005F                         _RB0 0030  
                       _POT 00D8                         _isr 19C5                         fsr0 0004  
                       indf 0000                ___awmod@sign 0078                ___flmul@aexp 003A  
              ___flmul@bexp 003B                ___flmul@sign 0035                ___flmul@temp 0040  
              ___flmul@prod 003C                ___fltol@exp1 005F                        l3001 11A0  
                      l3011 11BF                        l3101 1C50                        l3021 11E5  
                      l3005 11A9                        l3103 1C52                        l3111 1ED2  
                      l3031 1219                        l3023 11E7                        l3007 11B6  
                      l3121 1F40                        l3113 1EDA                        l3201 1F50  
                      l3033 121A                        l3025 11F0                        l3017 11CC  
                      l2401 0814                        l4001 06A6                        l3123 1F42  
                      l3115 1EDE                        l3107 1EA0                        l3131 1982  
                      l3211 1F7E                        l3203 1F60                        l3051 124E  
                      l3043 1235                        l3035 1223                        l3027 11F9  
                      l3019 11D4                        l2403 0823                        l2411 1DBE  
                      l4011 06C9                        l4003 06AA                        l3117 1F02  
                      l3109 1EB6                        l3141 1E3A                        l3061 1A3A  
                      l3221 1FB4                        l3213 1F8B                        l3205 1F70  
                      l3053 125E                        l3037 122D                        l3045 1247  
                      l3029 120B                        l2405 0828                        l2421 1DD2  
                      l2413 1DC2                        l4021 0702                        l4005 06B5  
                      l4101 1357                        l3071 1D53                        l3119 1F06  
                      l3127 1978                        l3151 1E5E                        l3143 1E4F  
                      l3135 1E24                        l3063 1A47                        l3231 1FED  
                      l3223 1FBF                        l3215 1F92                        l2431 1DE8  
                      l2423 1DD6                        l2415 1DC7                        l4031 0730  
                      l4023 070C                        l4007 06BB                        l4103 1362  
                      l3241 19B2                        l3081 1D82                        l3073 1D65  
                      l3129 1980                        l2601 1605                        l3145 1E50  
                      l3137 1E31                        l3065 1A4E                        l3057 1A34  
                      l3233 1FF2                        l3225 1FC3                        l3217 1F96  
                      l3209 1F79                        l2521 1B01                        l2441 1E08  
                      l2433 1DEC                        l2425 1DD8                        l2417 1DC9  
                      l2409 1DBB                        l4033 073E                        l4025 0717  
                      l4017 06CB                        l4009 06C3                        l3243 19B5  
                      l3251 1994                        l3083 1D94                        l3075 1D68  
                      l3091 1DB2                        l2611 1619                        l2603 1609  
                      l3147 1E58                        l3067 1A54                        l3059 1A36  
                      l3235 1FF6                        l3227 1FCD                        l3219 1FA4  
                      l2531 1B20                        l2523 1B08                        l2443 1E0F  
                      l2435 1DF0                        l2427 1DDE                        l2419 1DCD  
                      l4035 0745                        l4043 07A7                        l4027 0718  
                      l3245 19B7                        l3253 1996                        l3085 1DA2  
                      l3077 1D75                        l3261 19FE                        l2701 1790  
                      l2621 163D                        l2613 161D                        l2605 160D  
                      l2541 157F                        l3165 1E7F                        l3157 1E66  
                      l3149 1E5A                        l3237 1FF7                        l3229 1FD7  
                      l2533 1B27                        l2525 1B0C                        l2517 1AF8  
                      l2437 1E01                        l2429 1DE1                        l2445 1E15  
                      l2461 1D06                        l2453 1CFA                        l4037 074A  
                      l4029 0727                        l4045 07B5                        l4061 1BD4  
                      l3247 19C1                        l3255 199B                        l3087 1DA3  
                      l3079 1D79                        l3511 1AF5                        l3503 1AC0  
                      l3263 1A04                        l3095 1C04                        l2711 17AF  
                      l2631 166D                        l2623 165D                        l2615 1621  
                      l2607 1611                        l2551 1594                        l2543 1585  
                      l3191 1C54                        l3167 1E8F                        l3159 1E78  
                      l2527 1B10                        l2519 1AFE                        l2535 1B2D  
                      l2447 1E1A                        l2439 1E07                        l2471 1D1F  
                      l2463 1D0A                        l2455 1CFB                        l4039 079F  
                      l4047 07CB                        l4135 00C0                        l4063 1BEE  
                      l4071 126F                        l3249 1991                        l3089 1DAC  
                      l3513 1AF6                        l3505 1AC4                        l3521 19E6  
                      l3257 19F0                        l3097 1C1A                        l2721 17E8  
                      l2713 17CD                        l2705 1798                        l2633 1676  
                      l2625 1666                        l2609 1615                        l2617 1625  
                      l2561 15AC                        l2553 159C                        l2545 1589  
                      l3193 1C58                        l3169 1E94                        l2801 0AC6  
                      l2529 1B1A                        l2449 1E1F                        l2481 1D3E  
                      l2473 1D23                        l2465 1D0F                        l2457 1CFF  
                      l4065 1BFD                        l4057 1BBA                        l4081 12A9  
                      l4073 1274                        l3531 1957                        l3507 1AC7  
                      l3523 19E9                        l3515 19DA                        l3611 1A64  
                      l3603 1A59                        l3259 19F3                        l3099 1C36  
                      l2731 17FE                        l2723 17E9                        l2715 17D6  
                      l2707 179D                        l2651 16BC                        l2643 1694  
                      l2627 1668                        l2635 167A                        l2619 1626  
                      l2571 15BE                        l2563 15B2                        l2555 159D  
                      l2547 158A                        l2539 1578                        l2395 0807  
                      l2811 0B66                        l2803 0ADF                        l2475 1D27  
                      l2467 1D15                        l2483 1D44                        l2459 1D04  
                      l4059 1BCE                        l4091 12F0                        l4083 12B1  
                      l4075 1279                        l4067 1267                        l3541 07D0  
                      l3533 1964                        l3509 1AF4                        l3525 19EA  
                      l3517 19E1                        l3621 1A7B                        l3613 1A67  
                      l3605 1A60                        l2725 17ED                        l2717 17DB  
                      l2709 17AB                        l2653 16BE                        l2645 16AB  
                      l2637 1686                        l2661 16D1                        l2629 166C  
                      l2573 15C3                        l2581 15D3                        l2565 15B3  
                      l2549 158F                        l2557 159F                        l3197 1F47  
                      l2397 0809                        l2821 0BD4                        l2813 0B8C  
                      l2805 0AFC                        l2741 094E                        l2733 093C  
                      l2485 1D49                        l2477 1D31                        l2469 1D18  
                      l2901 0CA0                        l4093 12F9                        l4085 12C6  
                      l4077 1288                        l4069 126C                        l3551 07F1  
                      l3543 07D5                        l3535 1969                        l3527 19EB  
                      l3519 19E5                        l3631 1A86                        l3623 1A7C  
                      l3615 1A6A                        l3607 1A62                        l2727 17EF  
                      l2719 17E3                        l2663 16E7                        l2671 173F  
                      l2655 16C2                        l2647 16AF                        l2639 168B  
                      l2591 15F1                        l2583 15E1                        l2575 15C8  
                      l2567 15B9                        l2559 15A7                        l3199 1F4C  
                      l2399 0810                        l2831 0BEC                        l2823 0BD8  
                      l2815 0BB4                        l2807 0B29                        l2751 096A  
                      l2743 0953                        l2735 0943                        l2487 1D4E  
                      l2479 1D37                        l2903 0CA4                        l4095 1313  
                      l4087 12CF                        l4079 128F                        l3561 1A1B  
                      l3553 07F9                        l3545 07DD                        l3529 1952  
                      l3537 195B                        l3641 084C                        l3633 1A87  
                      l3625 1A7D                        l3617 1A6B                        l3609 1A63  
                      l2729 17FA                        l2681 176C                        l2673 1755  
                      l2665 1725                        l2657 16C3                        l2649 16B3  
                      l2593 15F5                        l2585 15E5                        l2577 15D0  
                      l2569 15BD                        l3801 1CAE                        l2841 0C0D  
                      l2833 0BED                        l2825 0BD9                        l2817 0BBD  
                      l2809 0B39                        l2761 097F                        l2753 096F  
                      l2745 0958                        l2737 0949                        l2913 0D97  
                      l2905 0CA6                        l4097 1342                        l4089 12E4  
                      l3563 1A22                        l3571 1B35                        l3547 07E6  
                      l3539 1960                        l3651 087A                        l3643 0859  
                      l3635 1A88                        l3627 1A7E                        l3619 1A78  
                      l2691 177F                        l2683 1770                        l2675 175A  
                      l2667 172B                        l2659 16CC                        l2595 15F9  
                      l2587 15E9                        l2579 15D1                        l3811 1CE2  
                      l3803 1CB1                        l2843 0C12                        l2851 0C43  
                      l2835 0BF1                        l2827 0BE2                        l2819 0BCB  
                      l2771 099B                        l2763 0984                        l2755 0975  
                      l2747 0960                        l2739 094D                        l2931 0F44  
                      l2915 0D9E                        l2907 0CAD                        l2923 0E53  
                      l4099 134E                        l3581 1A94                        l3565 1A28  
                      l3557 1A11                        l3573 1B51                        l3549 07EB  
                      l3661 08CF                        l3653 08A6                        l3645 085E  
                      l3637 1A89                        l3629 1A83                        l2685 1775  
                      l2693 1781                        l2669 1730                        l2597 15FD  
                      l2589 15ED                        l3813 1CEB                        l3805 1CBE  
                      l2861 0C76                        l2853 0C50                        l2845 0C20  
                      l2837 0C05                        l2829 0BE8                        l2781 09C6  
                      l2773 09A0                        l2765 098C                        l2757 0979  
                      l2749 0962                        l2941 19A0                        l2933 0F4B  
                      l2925 0E5A                        l3901 029D                        l3821 002E  
                      l3591 1AB9                        l3583 1A9D                        l3567 1A2D  
                      l3559 1A16                        l3575 1B57                        l3671 091B  
                      l3663 08D4                        l3655 08B3                        l3647 0867  
                      l3639 082D                        l2687 1778                        l2679 1763  
                      l2695 1785                        l2599 1601                        l3807 1CC2  
                      l3815 1CF1                        l2863 0C84                        l2855 0C5B  
                      l2847 0C24                        l2791 0A63                        l2783 09E3  
                      l2767 098E                        l2759 097A                        l2943 19A1  
                      l2919 0E26                        l3911 0318                        l3903 02AC  
                      l3831 0050                        l3823 0034                        l3585 1AA7  
                      l3577 1A8B                        l3569 1B32                        l2881 1989  
                      l3673 0929                        l3665 0900                        l3657 08B8  
                      l3649 0875                        l2873 196F                        l2697 1786  
                      l2689 177A                        l3809 1CD4                        l2953 10EC  
                      l2865 0C88                        l2857 0C6A                        l2849 0C3D  
                      l2793 0A6C                        l2785 09FF                        l2777 09A9  
                      l2769 0996                        l3761 1B81                        l2945 19A7  
                      l2937 0FD3                        l3921 0366                        l3913 0321  
                      l3905 02C7                        l3841 008A                        l3833 0053  
                      l3825 003B                        l3587 1AAD                        l3579 1A8E  
                      l3675 092E                        l3667 090D                        l3659 08C1  
                      l2875 1975                        l2699 178A                        l2971 1132  
                      l2955 10FF                        l2867 0C89                        l2859 0C74  
                      l2795 0A7C                        l2787 0A2B                        l2779 09B9  
                      l3771 1BA7                        l3763 1B88                        l3755 1B74  
                      l2947 19AD                        l3915 0329                        l3907 02EE  
                      l3923 036F                        l3851 00AA                        l3843 0090  
                      l3835 0059                        l3827 0040                        l3819 0029  
                      l3589 1AB3                        l3669 0912                        l2981 115D  
                      l2973 113B                        l2965 111B                        l2869 0C94  
                      l2797 0A99                        l2789 0A47                        l3773 1BA8  
                      l3765 1B8C                        l3757 1B78                        l3781 136E  
                      l2949 19AF                        l3941 0418                        l3925 03A4  
                      l3917 0347                        l3909 02FD                        l3861 00F0  
                      l3853 00CE                        l3837 005E                        l3845 00A2  
                      l3829 0042                        l2879 1983                        l2991 1177  
                      l2983 1165                        l2975 1144                        l2967 1121  
                      l2959 1108                        l2799 0AA9                        l3775 1BAF  
                      l3767 1B90                        l3759 1B7E                        l3791 1489  
                      l3783 1374                        l3951 04AA                        l3943 0424  
                      l3935 03D7                        l3927 03D3                        l3871 012E  
                      l3863 00F4                        l3855 00DA                        l3847 00A6  
                      l3839 0073                        l2985 116F                        l2993 1189  
                      l2977 1152                        l2969 1130                        l3769 1BA1  
                      l3777 1BB5                        l3961 04DE                        l3953 04BE  
                      l3945 042B                        l3929 03D5                        l3881 018E  
                      l3873 0147                        l3865 010D                        l3857 00DE  
                      l2979 115C                        l3795 1534                        l3971 050F  
                      l3963 04ED                        l3955 04C7                        l3947 0430  
                      l3939 040E                        l3891 021B                        l3883 0192  
                      l3875 0152                        l3867 0126                        l3859 00E2  
                      l3789 1483                        l3981 0606                        l3973 0513  
                      l3965 04F4                        l3957 04CB                        l3949 046B  
                      l3893 0224                        l3885 0198                        l3877 0158  
                      l3869 012A                        l3799 1CA4                        l2999 1190  
                      l3991 0680                        l3983 0612                        l3975 0531  
                      l3967 0503                        l3959 04D1                        l3895 023F  
                      l3887 01B7                        l3879 016B                        l3993 0686  
                      l3977 058C                        l3985 066D                        l3969 0508  
                      l3889 0202                        l3897 0247                        l3987 0675  
                      l3979 05C7                        l3899 0256                        l3995 068D  
                      ?_isr 0070                        l3997 069E                        l3989 067C  
                      l3999 06A2                        STR_1 10A0                        STR_2 10B1  
                      STR_3 10C1                        STR_4 10D7                        STR_5 10E3  
                      STR_6 10E6                        STR_7 10E9                        STR_8 10CF  
                      STR_9 10DE                        u3000 1D49                        u3001 1D48  
                      u3100 1B10                        u3101 1B0F                        u3110 1B1A  
                      u3111 1B19                        u3200 15C8                        u3201 15C7  
                      u3210 15E1                        u3130 1B2D                        u3211 15E0  
                      u3131 1B2C                        u3115 1B16                        u3300 1686  
                      u3220 15E5                        u3140 1589                        u3301 1685  
                      u3221 15E4                        u3141 1588                        u3125 1B21  
                      u3310 168B                        u3230 163D                        u3150 158F  
                      u3311 168A                        u3231 163C                        u3151 158E  
                      u3400 1730                        u3240 1648                        u3160 1594  
                      u5000 1FC9                        u3080 1AFE                        u3401 172F  
                      u3321 169D                        u3241 1646                        u3161 1593  
                      u5001 1FC8                        u3081 1AFD                        u4105 0CCF  
                      u3410 1755                        u3330 16AF                        u3322 16A4  
                      u3250 1649                        u3170 15B2                        u5010 1FCD  
                      u4210 0F4B                        u4130 0D9E                        u3411 1754  
                      u3331 16AE                        u3323 16AB                        u3235 1639  
                      u3171 15B1                        u5011 1FCC                        u4211 0F4A  
                      u4131 0D9D                        u4115 0D0B                        u3500 1797  
                      u3420 175A                        u3340 16B3                        u3260 165D  
                      u3180 15BD                        u5020 1FE2                        u4300 1152  
                      u3501 1796                        u3421 1759                        u3341 16B2  
                      u3261 165C                        u3181 15BC                        u4301 1151  
                      u4205 0F03                        u4125 0D56                        u3510 179D  
                      u3350 16C2                        u3270 166C                        u3190 15C3  
                      u5030 1FF2                        u3511 179C                        u3351 16C1  
                      u3271 166B                        u3191 15C2                        u5031 1FF1  
                      u3095 1B02                        u3520 17AF                        u3440 1770  
                      u5040 1FF6                        u4400 11B6                        u4320 116B  
                      u3600 094D                        u4080 0CA4                        u6000 0508  
                      u3521 17AE                        u3441 176F                        u5041 1FF5  
                      u5025 1FDD                        u4401 11B5                        u4321 116A  
                      u4305 114E                        u3601 094C                        u4225 0F5E  
                      u4145 0DB1                        u4081 0CA3                        u6001 0507  
                      u5050 1A0F                        u3530 17BE                        u3450 1775  
                      u3370 16E7                        u3290 1682                        u4410 11CA  
                      u4330 116F                        u2810 0828                        u3610 0953  
                      u4250 19A7                        u4170 0E5A                        u4090 0CAD  
                      u5051 1A0E                        u3451 1774                        u3435 1765  
                      u3371 16E6                        u3291 1681                        u4411 11C9  
                      u4331 116E                        u4315 115E                        u2811 0827  
                      u3611 0952                        u4251 19A6                        u4235 0F9A  
                      u4171 0E59                        u4155 0DED                        u4091 0CAC  
                      u3540 17CD                        u3460 177F                        u4500 124D  
                      u4340 1176                        u3620 0958                        u4260 19AD  
                      u2900 1E15                        u2820 1DC2                        u6100 070C  
                      u3541 17CC                        u3461 177E                        u3381 16FE  
                      u3373 16E3                        u3365 16C5                        u3285 166F  
                      u4501 124C                        u4341 1175                        u2805 081B  
                      u3701 0A39                        u3621 0957                        u4261 19AC  
                      u2901 1E14                        u2821 1DC1                        u4245 0FD6  
                      u4165 0E29                        u6101 070B                        u3550 17D6  
                      u3470 1785                        u3390 1712                        u3382 16FF  
                      u4430 120B                        u4270 10FF                        u3702 0A40  
                      u3630 0979                        u2910 1E1A                        u2830 1DCD  
                      u6110 0717                        u6030 0674                        u3551 17D5  
                      u3535 17B9                        u3471 1784                        u3391 1713  
                      u3383 1704                        u4431 120A                        u4271 10FE  
                      u3711 0A55                        u3703 0A47                        u3631 0978  
                      u2911 1E19                        u2831 1DCC                        u6111 0716  
                      u6031 0673                        u6015 058F                        u3560 17DB  
                      u3480 178A                        u3392 1718                        u3384 1705  
                      u4520 125E                        u4360 1188                        u4280 1119  
                      u3712 0A5C                        u3640 097F                        u2840 1DDE  
                      u2920 1CFF                        u6120 0727                        u6040 068C  
                      u3561 17DA                        u3481 1789                        u3393 1719  
                      u3385 170A                        u4521 125D                        u4425 11F2  
                      u4361 1187                        u4281 1118                        u3801 0B7E  
                      u3713 0A63                        u3641 097E                        u2841 1DDD  
                      u2921 1CFE                        u4185 0E7C                        u6121 0726  
                      u6041 068B                        u6025 0615                        u4610 1D94  
                      u3570 17E8                        u3490 1790                        u3386 170B  
                      u4530 1A3A                        u4450 1229                        u4370 118F  
                      u3810 0B9A                        u3802 0B85                        u3650 0984  
                      u2930 1D0A                        u6130 073E                        u6050 06A6  
                      u4611 1D93                        u3571 17E7                        u3491 178F  
                      u4531 1A39                        u4515 1250                        u4451 1228  
                      u4435 1207                        u4371 118E                        u4355 1178  
                      u3803 0B8C                        u3731 0A8B                        u3651 0983  
                      u2931 1D09                        u4195 0EB8                        u6131 073D  
                      u6115 0713                        u6051 06A5                        _PEIE 005E  
                      u5500 1A28                        u3580 17ED                        u4460 122D  
                      u3900 0C0C                        u3732 0A92                        u3660 099B  
                      u2860 1DF0                        u2940 1D15                        u6060 06BB  
                      u5501 1A27                        u4605 1D7B                        u4701 1EED  
                      u3581 17EC                        u4461 122C                        u4445 121C  
                      u3901 0C0B                        u3821 0BA6                        u3741 0AB8  
                      u3733 0A99                        u3725 0A65                        u3661 099A  
                      u2861 1DEF                        u2941 1D14                        u6125 0723  
                      u6061 06BA                        u5510 1B3F                        u4630 1DB2  
                      u4710 1F06                        u4702 1EEE                        u3590 17FE  
                      u4470 1234                        u4390 11A0                        u2790 0814  
                      u3910 0C12                        u3822 0BAD                        u3742 0ABF  
                      u3670 09A0                        u6150 07B5                        u6070 06C3  
                      u6207 0880                        u4631 1DB1                        u4615 1D90  
                      u4711 1F05                        u4703 1EF3                        u3591 17FD  
                      u4471 1233                        u4391 119F                        u4295 113D  
                      u2791 0813                        u3911 0C11                        u3823 0BB4  
                      u3815 0B95                        u3743 0AC6                        u3671 099F  
                      u2855 1DE2                        u6151 07B4                        u6071 06C2  
                      u5520 1B61                        u4640 1C1A                        u4704 1EF4  
                      u4800 1E77                        u4560 1A54                        u3920 0C24  
                      u2880 1E01                        u2960 1D27                        u6160 07CB  
                      _RBIF 0058                        u6217 08AC                        u4625 1DA4  
                      u4641 1C19                        u4721 1F15                        u4705 1EF9  
                      u4801 1E76                        u4561 1A53                        u4545 1A41  
                      u4385 1192                        u3921 0C23                        u3761 0AEE  
                      u3681 09F1                        u2881 1E00                        u2961 1D26  
                      u6161 07CA                        u6145 0759                        u5530 1B73  
                      u4570 1D65                        u4650 1C36                        u4730 1F40  
                      u4722 1F16                        u4706 1EFA                        u4810 1E7E  
                      u4490 1246                        u3930 0C33                        u3850 0BD8  
                      u3762 0AF5                        u3682 09F8                        u5610 1BB5  
                      u2970 1D31                        u6090 0701                        u6170 1288  
                      u5531 1B72                        u6227 08DA                        u4571 1D64  
                      u4651 1C35                        u4731 1F3F                        u4723 1F1B  
                      u4811 1E7D                        u4555 1A48                        u4491 1245  
                      u3851 0BD7                        u3835 0BB6                        u3771 0B1B  
                      u3763 0AFC                        u3755 0AC8                        u3691 0A0D  
                      u3683 09FF                        u5611 1BB4                        u2875 1DF1  
                      u2971 1D30                        u2955 1D19                        u6091 0700  
                      u6171 1287                        u4660 1C50                        u4724 1F1C  
                      u4740 1980                        u5700 1CAE                        u3940 0C50  
                      u3772 0B22                        u3692 0A14                        u5620 1374  
                      u6237 0906                        u4661 1C4F                        u4725 1F21  
                      u4741 197F                        u5701 1CAD                        u4485 1236  
                      u3941 0C4F                        u3845 0BCD                        u3781 0B48  
                      u3773 0B29                        u3693 0A1B                        u5605 1BA9  
                      u5621 1373                        u2885 1DFD                        u6085 06CE  
                      u4590 1D79                        u5470 1AD7                        u4726 1F22  
                      u4670 1EB6                        u4830 1E8F                        u4750 1E31  
                      u4910 1F4C                        u3950 0C6A                        u3870 0BEC  
                      u3790 0B72                        u3782 0B4F                        u5550 1B7E  
                      u2990 1D44                        u6247 0934                        u4591 1D78  
                      u4735 1F3C                        u4671 1EB5                        u4831 1E8E  
                      u4751 1E30                        u4911 1F4B                        u3951 0C69  
                      u3935 0C2E                        u3871 0BEB                        u3783 0B56  
                      u5551 1B7D                        u2895 1E09                        u2991 1D43  
                      u2975 1D2D                        u6095 06FD                        u6175 1284  
                      u5480 07F1                        u4680 1ED2                        u4840 1E94  
                      u4760 1E48                        u5720 1CC2                        u4920 1F50  
                      u3960 0C88                        u3880 0BF1                        u5800 00DE  
                      u6257 1999                        u5481 07F0                        u4585 1D6A  
                      u4665 1C4C                        u4681 1ED1                        u4841 1E93  
                      u4825 1E81                        u5721 1CC1                        u4921 1F4F  
                      u3961 0C87                        u3945 0C4C                        u3881 0BF0  
                      u3865 0BDB                        u2985 1D38                        u5801 00DD  
                      u5490 1A16                        u3970 1975                        u4690 1EDE  
                      u4770 1E5E                        u5730 1CD4                        u4930 1F70  
                      u3890 0C05                        u5570 1B90                        u5810 010D  
           ??_valorsensores 006F                        u6267 1A98                        u5491 1A15  
                      u5475 1AD2                        u3971 1974                        u4691 1EDD  
                      u4771 1E5D                        u5731 1CD3                        u5715 1CB3  
                      u4931 1F6F                        u3955 0C66                        u3891 0C04  
                      u3795 0B6D                        u5571 1B8F                        u5635 1391  
                      u5811 010C                        u6187 135D                        u3980 1989  
                      u4780 1E65                        u5660 1489                        u5900 02FD  
                      u5820 0147                        u6277 1AA5                        u3981 1988  
                      u6197 0852                        u4781 1E64                        u4765 1E43  
                      u5565 1B82                        u5661 1488                        u5645 13ED  
                      u5901 02FC                        u5821 0146                        u3990 198F  
                      u5750 1CF1                        u4950 1F91                        u5590 1BA1  
                      u5910 0318                        u5830 0192                        u6287 19BC  
                      u3991 198E                        u5751 1CF0                        u5735 1CD0  
                      u4951 1F90                        u5591 1BA0                        u5655 1442  
                      u5911 0317                        u5831 0191                        u5840 021B  
                      u5760 0034                        u5745 1CE3                        u4945 1F83  
                      u5585 1B91                        u5905 02F9                        u5841 021A  
                      u5761 0033                        u4970 1FB3                        u5930 040D  
                      u5850 023F                        u5770 0050                        u4795 1E67  
                      u4971 1FB2                        u5595 1B9D                        u5675 14A6  
                      u5931 040C                        u5851 023E                        u5771 004F  
                      u5940 0418                        u5860 0256                        u5780 00A1  
                      u4965 1FA5                        u5685 14F3                        u5941 0417  
                      u5925 03DA                        u5861 0255                        u5781 00A0  
                      u4990 1FC3                        u5950 0424                        u5870 02AC  
                      u5790 00DA                        u4991 1FC2                        u5695 153F  
                      u5951 0423                        u5935 0409                        u5871 02AB  
                      u5791 00D9                        u5880 02C7                        u4985 1FB8  
                      u5881 02C6                        u5865 0252                        u5970 04BD  
                      u5890 02EE                        u5971 04BC                        u5891 02ED  
                      u5875 02A8                        u5980 04DE                        u5981 04DD  
                      u5965 0433                        u5990 04ED                        u5991 04EC  
                      u5985 04DA                        u5995 04E9                        _TXIF 0064  
                      _WPUB 0095           ?_Lcd_Write_String 0074                        _main 1267  
                      _var1 00DC                        _var2 00DA                        btemp 007E  
                      start 000C          ??_Lcd_Write_String 0076              _Envio_caracter 196E  
              _sprintf$1310 00AD             __end_of_Lcd_Cmd 19C5              _datUltrasonico 00D4  
                     ??_isr 0070            ?_I2C_Master_Init 0025            ?_I2C_Master_Read 0072  
          ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070               ___fltol@sign1 005E  
           __end_of___fladd 1800                       ?_main 0070             __end_of___awdiv 1E24  
           __end_of___flneg 1983             __end_of___awmod 1D53             __end_of___flmul 0C9D  
           __end_of___flsub 1CA4             __end_of___fltol 1EA0                       _ANSEL 0188  
           __end_of___lldiv 1DBB             ___awdiv@divisor 0020             __end_of___llmod 1CFA  
           __end_of___lwdiv 1BBA                       i1l170 19D2                       i1l172 19D3  
           __end_of___lwmod 1B32             ___awdiv@counter 0024                       _SPBRG 0099  
                     _PORTA 0005                       _PORTD 0008                       _PORTE 0009  
   __size_of_Lcd_Set_Cursor 0024                       _TRISA 0085                       _TRISB 0086  
                     _TRISD 0088                       _SSPIE 0463                       _TRISE 0089  
                     _SSPIF 0063                       _TXREG 0019             __end_of_dpowers 10A0  
                     _scale 0C9D             __end_of_isdigit 19B1                       _setup 1A59  
                     pclath 000A                       status 0003      __end_of_Envio_caracter 1978  
                     wtemp0 007E             __end_of_sprintf 07D0            __end_of_Lcd_Init 1AC0  
           __initialization 000F                __end_of_main 136B                      ??_main 00C6  
      __size_of__tdiv_to_l_ 00BD           ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0072  
        ??_I2C_Master_Start 0072          ??_I2C_Master_Write 0074            ___llmod@dividend 0029  
                    ?_scale 0042            ___awdiv@dividend 0022                      ?_setup 0070  
                    _ANSELH 0189                      i1l2295 19C5                      i1l2297 19C9  
                    i1l2299 19CF                      u276_20 19C9                      u276_21 19C8  
                    u277_20 19CF                      u277_21 19CE                   ??_Lcd_Cmd 0072  
                    _SPBRGH 009A     __size_of_Lcd_Write_Char 000F                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013             ?_Envio_caracter 0070            __end_of___xxtofl 2000  
          __end_of__powers_ 1044                      ___flge 1EA0                      ___fleq 1C04  
                 ??___fladd 005E                      ___wmul 1A34                   ??___awdiv 0079  
                 ??___flneg 0076           _configuracionUART 19DA                   ??___awmod 0076  
                 ??___flmul 0030                   ??___flsub 007B                   ??___fltol 0059  
                 ??___lldiv 007A                   ??___llmod 002D                   ??___lwdiv 0078  
                 ??___lwmod 0076                      _fround 136B          ?_configuracionUART 0070  
          ___awdiv@quotient 0026             ___awmod@divisor 0072             ___awmod@counter 0077  
                 ??_isdigit 0072          __size_of__Umul8_16 0027         ??_configuracionUART 0072  
                    saved_w 007E                   ??_sprintf 00A8             Lcd_Set_Cursor@a 0077  
           Lcd_Set_Cursor@b 0075                  ___flge@ff1 0072                  ___flge@ff2 0076  
              ___xxtofl@arg 0022                ___xxtofl@exp 0021                ___xxtofl@val 0072  
                ___fleq@ff1 0072                  ___fleq@ff2 0076     __end_of__initialization 0022  
                ___flneg@f1 0072                  ___fltol@f1 0055   __end_of_configuracionUART 19EF  
            __pcstackCOMMON 0070               __end_of_scale 1000               __end_of_setup 1A8B  
            _Lcd_Set_Cursor 1A10                  __div_to_l_ 11A9              _OPTION_REGbits 0081  
                 ?_Lcd_Init 0070             __div_to_l_@exp1 0025             __div_to_l_@cntr 0024  
                   ??_scale 0046             __div_to_l_@quot 0020                     ??_setup 007B  
                __pbssBANK1 00C8                  __pbssBANK3 0190               __div_to_l_@f1 0072  
             __div_to_l_@f2 0076           __end_of__Umul8_16 082D                  __pmaintext 1267  
                   ?___flge 0072                     ?___fleq 0072                     ?___wmul 0072  
                __pintentry 0004                     ?_fround 0042   __size_of_Lcd_Write_String 0042  
    __end_of_Lcd_Set_Cursor 1A34                  _com_master 082D                   ?___xxtofl 0072  
                ??_Lcd_Init 0075                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 1000              _Lcd_Write_Char 1990                     _Lcd_Cmd 19B1  
     __end_of_valorsensores 1C04           __end_of__npowers_ 1078                  _scale$1309 0050  
__size_of_configuracionUART 0015          cadena_caracteres@i 0074             __size_of___flge 00A4  
           __size_of___fleq 0050                     ___fladd 1578                     ___awdiv 1DBB  
                   ___flneg 1978                     ___awmod 1CFA                     ___flmul 093C  
                   ___flsub 1C54                     ___fltol 1E24                     ___lldiv 1D53  
           __size_of___wmul 0025                     ___llmod 1CA4                     ___lwdiv 1B74  
                   ___lwmod 1AF8             __size_of_fround 020D             ?_Lcd_Set_Cursor 0075  
                   __ptext1 1BBA                     __ptext2 0026                     __ptext3 0C9D  
                   __ptext4 1CFA                     __ptext5 1DBB                     __ptext6 199F  
                   __ptext7 136B                     __ptext8 1AF8                     __ptext9 1B74  
               ?__div_to_l_ 0072                     _dpowers 1078                     _isdigit 199F  
              __size_of_isr 0015                  ??___xxtofl 0076            ___awmod@dividend 0074  
  __size_of_I2C_Master_Init 0038    __size_of_I2C_Master_Read 002E    __size_of_I2C_Master_Wait 000D  
  __size_of_I2C_Master_Stop 0009            ??_Envio_caracter 0072                     _sprintf 0026  
         _cadena_caracteres 19EF                     clrloop0 194B      __end_of_Lcd_Write_Char 199F  
      end_of_initialization 0022          ?_cadena_caracteres 0070   __size_of_I2C_Master_Start 0009  
 __size_of_I2C_Master_Write 000A             ___lldiv@divisor 0072             ___lldiv@counter 0024  
       ??_cadena_caracteres 0073                   _RCSTAbits 0018            I2C_Master_Init@c 0025  
          I2C_Master_Read@a 0072              __tdiv_to_l_@f1 0072              __tdiv_to_l_@f2 0076  
             ??__tdiv_to_l_ 0020                   _PORTAbits 0005                   _PORTBbits 0006  
                 _PORTEbits 0009                 ?_com_master 0070                 ___fladd@grs 0069  
             ___xxtofl@sign 0020                   _TRISBbits 0086   __end_of_cadena_caracteres 1A10  
                 _TRISCbits 0087             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0074  
         Lcd_Write_String@i 0079                 ___flmul@grs 0036                   _TXSTAbits 0098  
       __size_of__div_to_l_ 00BE              __end_of___flge 1F44              __end_of___fleq 1C54  
            __end_of___wmul 1A59            _Lcd_Write_String 1B32                 _BAUDCTLbits 0187  
            __end_of_fround 1578         start_initialization 000F         __end_of__tdiv_to_l_ 11A9  
               __end_of_isr 19DA           __size_of_Lcd_Init 0035           ??_I2C_Master_Init 0029  
         ??_I2C_Master_Read 0074           ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072  
           ___llmod@divisor 0025             ___llmod@counter 002E         __size_of_com_master 010F  
                  ??___flge 0020                    ??___fleq 0020                    ??___wmul 0076  
                 __Umul8_16 0806             Lcd_Write_Char@a 0073                    ??_fround 0046  
             sprintf@tmpval 00B6                   ___fladd@a 005A                   ___fladd@b 0056  
                fround@prec 0055                   ___flmul@a 002C                   ___flmul@b 0028  
               __pbssCOMMON 007B                   ___flsub@a 00A0                   ___flsub@b 00A4  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00A0  
__size_of_cadena_caracteres 0021           __size_of___xxtofl 00BC                _isdigit$1105 0072  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00B2                 sprintf@eexp 00B4  
               sprintf@fval 00BE                 sprintf@prec 00C2            _I2C_Master_Start 1952  
          _I2C_Master_Write 1964            ___lwdiv@dividend 0022      Envio_caracter@caracter 0072  
          ??_Lcd_Set_Cursor 0076                    ?___fladd 0056                    ?___awdiv 0020  
                  ?___flneg 0072                    ?___awmod 0072                    ?___flmul 0028  
                  ?___flsub 00A0                    ?___fltol 0055                    ?___lldiv 0072  
                  ?___llmod 0025                   __npowers_ 1044                  ?__Umul8_16 0072  
                  ?___lwdiv 0020                    ?___lwmod 0072                   __pstrings 1000  
               __tdiv_to_l_ 10EC                ??__div_to_l_ 007A                    ?_isdigit 0070  
          ___lwdiv@quotient 0025                    ?_sprintf 006A              __size_of_scale 0363  
            __size_of_setup 0032           interrupt_function 0004              ___wmul@product 0076  
                  _IOCBbits 0096                   clear_ram0 194A                    Lcd_Cmd@a 0074  
        __end_of__div_to_l_ 1267                 __stringbase 100F                    _BanStart 007B  
         ___wmul@multiplier 0072      __size_of_valorsensores 004A                ??_com_master 0078  
          ??_Lcd_Write_Char 0072                    _Lcd_Init 1A8B         I2C_Master_Read@temp 0076  
  __end_of_Lcd_Write_String 1B74            __size_of_Lcd_Cmd 0014          __end_of_com_master 093C  
       cadena_caracteres@st 0076                 ??__Umul8_16 0074            __size_of___fladd 0288  
          __size_of___awdiv 0069            __size_of___flneg 000B            __size_of___awmod 0059  
          __size_of___flmul 0361            __size_of___flsub 0050            __size_of___fltol 007C  
          __size_of___lldiv 0068            __size_of___llmod 0056            __size_of___lwdiv 0046  
          __size_of___lwmod 003A                 _fround$1307 0051                 _fround$1308 004D  
        __end_of__stringtab 1010                  sprintf@val 00BA             _I2C_Master_Init 1AC0  
           _I2C_Master_Read 07D0                    ___xxtofl 1F44             _I2C_Master_Wait 1983  
           _I2C_Master_Stop 195B            __size_of_isdigit 0012             ___lwdiv@divisor 0020  
           ___lwdiv@counter 0024                    __ptext10 093C                    __ptext11 0806  
                  __ptext20 1978                    __ptext12 10EC                    __ptext21 1EA0  
                  __ptext13 11A9                    __ptext30 1964                    __ptext22 1C04  
                  __ptext14 1F44                    __ptext31 195B                    __ptext23 19EF  
                  __ptext15 1A34                    __ptext40 19C5                    __ptext32 1952  
                  __ptext24 196E                    __ptext16 1CA4                    __ptext33 07D0  
                  __ptext25 1A59                    __ptext17 1E24                    __ptext34 1983  
                  __ptext26 19DA                    __ptext18 1C54                    __ptext35 1B32  
                  __ptext27 1AC0                    __ptext19 1578                    __ptext36 1990  
                  __ptext28 1D53                    __ptext37 1A10                    __ptext29 082D  
                  __ptext38 1A8B                    __ptext39 19B1                    __powers_ 1010  
                  _contador 00DE            __size_of_sprintf 07AA               __size_of_main 0104  
             _valorsensores 1BBA     __size_of_Envio_caracter 000A    __end_of_I2C_Master_Start 195B  
  __end_of_I2C_Master_Write 196E                  _INTCONbits 000B              _contRecipiente 00D6  
                  isdigit@c 0073                    scale@scl 0054                    intlevel1 0000  
                 sprintf@ap 00B1            __tdiv_to_l_@exp1 0029            __tdiv_to_l_@cntr 0028  
                 sprintf@sp 00C4            __tdiv_to_l_@quot 0024            ___lwmod@dividend 0074  
            ?_valorsensores 0070            ___lldiv@dividend 0076                   stringcode 100A  
                _OSCCONbits 008F     __end_of_I2C_Master_Init 1AF8     __end_of_I2C_Master_Read 07FE  
   __end_of_I2C_Master_Wait 1990     __end_of_I2C_Master_Stop 1964          Lcd_Set_Cursor@temp 0078  
              ?__tdiv_to_l_ 0072      __Umul8_16@multiplicand 0072                    sprintf@c 00C5  
                  sprintf@f 006A            ___lldiv@quotient 0020           I2C_Master_Write@d 0072  
           ___lwmod@divisor 0072             ___lwmod@counter 0077                    stringdir 100A  
                  stringtab 1000                 _SSPCON2bits 0091               ___fladd@signs 0066  
              ___fladd@aexp 0067                ___fladd@bexp 0068        __Umul8_16@multiplier 007A  
         __Umul8_16@product 0076  

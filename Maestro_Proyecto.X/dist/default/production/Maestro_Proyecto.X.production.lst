

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Sep 03 16:50:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F887 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0000                     	;# 
   171  0001                     	;# 
   172  0002                     	;# 
   173  0003                     	;# 
   174  0004                     	;# 
   175  0005                     	;# 
   176  0006                     	;# 
   177  0007                     	;# 
   178  0008                     	;# 
   179  0009                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000D                     	;# 
   184  000E                     	;# 
   185  000E                     	;# 
   186  000F                     	;# 
   187  0010                     	;# 
   188  0011                     	;# 
   189  0012                     	;# 
   190  0013                     	;# 
   191  0014                     	;# 
   192  0015                     	;# 
   193  0015                     	;# 
   194  0016                     	;# 
   195  0017                     	;# 
   196  0018                     	;# 
   197  0019                     	;# 
   198  001A                     	;# 
   199  001B                     	;# 
   200  001B                     	;# 
   201  001C                     	;# 
   202  001D                     	;# 
   203  001E                     	;# 
   204  001F                     	;# 
   205  0081                     	;# 
   206  0085                     	;# 
   207  0086                     	;# 
   208  0087                     	;# 
   209  0088                     	;# 
   210  0089                     	;# 
   211  008C                     	;# 
   212  008D                     	;# 
   213  008E                     	;# 
   214  008F                     	;# 
   215  0090                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0095                     	;# 
   223  0096                     	;# 
   224  0097                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009A                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  0105                     	;# 
   234  0107                     	;# 
   235  0108                     	;# 
   236  0109                     	;# 
   237  010C                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0185                     	;# 
   243  0187                     	;# 
   244  0188                     	;# 
   245  0189                     	;# 
   246  018C                     	;# 
   247  018D                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  000E                     	;# 
   263  000E                     	;# 
   264  000F                     	;# 
   265  0010                     	;# 
   266  0011                     	;# 
   267  0012                     	;# 
   268  0013                     	;# 
   269  0014                     	;# 
   270  0015                     	;# 
   271  0015                     	;# 
   272  0016                     	;# 
   273  0017                     	;# 
   274  0018                     	;# 
   275  0019                     	;# 
   276  001A                     	;# 
   277  001B                     	;# 
   278  001B                     	;# 
   279  001C                     	;# 
   280  001D                     	;# 
   281  001E                     	;# 
   282  001F                     	;# 
   283  0081                     	;# 
   284  0085                     	;# 
   285  0086                     	;# 
   286  0087                     	;# 
   287  0088                     	;# 
   288  0089                     	;# 
   289  008C                     	;# 
   290  008D                     	;# 
   291  008E                     	;# 
   292  008F                     	;# 
   293  0090                     	;# 
   294  0091                     	;# 
   295  0092                     	;# 
   296  0093                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0094                     	;# 
   300  0095                     	;# 
   301  0096                     	;# 
   302  0097                     	;# 
   303  0098                     	;# 
   304  0099                     	;# 
   305  009A                     	;# 
   306  009B                     	;# 
   307  009C                     	;# 
   308  009D                     	;# 
   309  009E                     	;# 
   310  009F                     	;# 
   311  0105                     	;# 
   312  0107                     	;# 
   313  0108                     	;# 
   314  0109                     	;# 
   315  010C                     	;# 
   316  010C                     	;# 
   317  010D                     	;# 
   318  010E                     	;# 
   319  010F                     	;# 
   320  0185                     	;# 
   321  0187                     	;# 
   322  0188                     	;# 
   323  0189                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  000E                     	;# 
   342  000F                     	;# 
   343  0010                     	;# 
   344  0011                     	;# 
   345  0012                     	;# 
   346  0013                     	;# 
   347  0014                     	;# 
   348  0015                     	;# 
   349  0015                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001B                     	;# 
   357  001C                     	;# 
   358  001D                     	;# 
   359  001E                     	;# 
   360  001F                     	;# 
   361  0081                     	;# 
   362  0085                     	;# 
   363  0086                     	;# 
   364  0087                     	;# 
   365  0088                     	;# 
   366  0089                     	;# 
   367  008C                     	;# 
   368  008D                     	;# 
   369  008E                     	;# 
   370  008F                     	;# 
   371  0090                     	;# 
   372  0091                     	;# 
   373  0092                     	;# 
   374  0093                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0095                     	;# 
   379  0096                     	;# 
   380  0097                     	;# 
   381  0098                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009C                     	;# 
   386  009D                     	;# 
   387  009E                     	;# 
   388  009F                     	;# 
   389  0105                     	;# 
   390  0107                     	;# 
   391  0108                     	;# 
   392  0109                     	;# 
   393  010C                     	;# 
   394  010C                     	;# 
   395  010D                     	;# 
   396  010E                     	;# 
   397  010F                     	;# 
   398  0185                     	;# 
   399  0187                     	;# 
   400  0188                     	;# 
   401  0189                     	;# 
   402  018C                     	;# 
   403  018D                     	;# 
   404  0000                     	;# 
   405  0001                     	;# 
   406  0002                     	;# 
   407  0003                     	;# 
   408  0004                     	;# 
   409  0005                     	;# 
   410  0006                     	;# 
   411  0007                     	;# 
   412  0008                     	;# 
   413  0009                     	;# 
   414  000A                     	;# 
   415  000B                     	;# 
   416  000C                     	;# 
   417  000D                     	;# 
   418  000E                     	;# 
   419  000E                     	;# 
   420  000F                     	;# 
   421  0010                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0015                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001B                     	;# 
   435  001C                     	;# 
   436  001D                     	;# 
   437  001E                     	;# 
   438  001F                     	;# 
   439  0081                     	;# 
   440  0085                     	;# 
   441  0086                     	;# 
   442  0087                     	;# 
   443  0088                     	;# 
   444  0089                     	;# 
   445  008C                     	;# 
   446  008D                     	;# 
   447  008E                     	;# 
   448  008F                     	;# 
   449  0090                     	;# 
   450  0091                     	;# 
   451  0092                     	;# 
   452  0093                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0094                     	;# 
   456  0095                     	;# 
   457  0096                     	;# 
   458  0097                     	;# 
   459  0098                     	;# 
   460  0099                     	;# 
   461  009A                     	;# 
   462  009B                     	;# 
   463  009C                     	;# 
   464  009D                     	;# 
   465  009E                     	;# 
   466  009F                     	;# 
   467  0105                     	;# 
   468  0107                     	;# 
   469  0108                     	;# 
   470  0109                     	;# 
   471  010C                     	;# 
   472  010C                     	;# 
   473  010D                     	;# 
   474  010E                     	;# 
   475  010F                     	;# 
   476  0185                     	;# 
   477  0187                     	;# 
   478  0188                     	;# 
   479  0189                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482                           
   483                           	psect	strings
   484  1000                     __pstrings:
   485  1000                     stringtab:
   486  1000                     __stringtab:
   487                           
   488                           ;	String table - string pointers are 1 byte each
   489  1000  1BFF               	btfsc	btemp+1,7
   490  1001  280A               	ljmp	stringcode
   491  1002  1383               	bcf	3,7
   492  1003  187F               	btfsc	btemp+1,0
   493  1004  1783               	bsf	3,7
   494  1005  0800               	movf	0,w
   495  1006  0A84               	incf	4,f
   496  1007  1903               	skipnz
   497  1008  0AFF               	incf	btemp+1,f
   498  1009  0008               	return
   499  100A                     stringcode:
   500  100A                     stringdir:
   501  100A  3010               	movlw	high stringdir
   502  100B  008A               	movwf	10
   503  100C  0804               	movf	4,w
   504  100D  0A84               	incf	4,f
   505  100E  0782               	addwf	2,f
   506  100F                     __stringbase:
   507  100F  3400               	retlw	0
   508  1010                     __end_of__stringtab:
   509  1010                     __powers_:
   510  1010  3400               	retlw	0
   511  1011  3400               	retlw	0
   512  1012  3480               	retlw	128
   513  1013  343F               	retlw	63
   514  1014  3400               	retlw	0
   515  1015  3400               	retlw	0
   516  1016  3420               	retlw	32
   517  1017  3441               	retlw	65
   518  1018  3400               	retlw	0
   519  1019  3400               	retlw	0
   520  101A  34C8               	retlw	200
   521  101B  3442               	retlw	66
   522  101C  3400               	retlw	0
   523  101D  3400               	retlw	0
   524  101E  347A               	retlw	122
   525  101F  3444               	retlw	68
   526  1020  3400               	retlw	0
   527  1021  3440               	retlw	64
   528  1022  341C               	retlw	28
   529  1023  3446               	retlw	70
   530  1024  3400               	retlw	0
   531  1025  3450               	retlw	80
   532  1026  34C3               	retlw	195
   533  1027  3447               	retlw	71
   534  1028  3400               	retlw	0
   535  1029  3424               	retlw	36
   536  102A  3474               	retlw	116
   537  102B  3449               	retlw	73
   538  102C  3480               	retlw	128
   539  102D  3496               	retlw	150
   540  102E  3418               	retlw	24
   541  102F  344B               	retlw	75
   542  1030  3420               	retlw	32
   543  1031  34BC               	retlw	188
   544  1032  34BE               	retlw	190
   545  1033  344C               	retlw	76
   546  1034  3428               	retlw	40
   547  1035  346B               	retlw	107
   548  1036  346E               	retlw	110
   549  1037  344E               	retlw	78
   550  1038  34F9               	retlw	249
   551  1039  3402               	retlw	2
   552  103A  3415               	retlw	21
   553  103B  3450               	retlw	80
   554  103C  34EC               	retlw	236
   555  103D  3478               	retlw	120
   556  103E  34AD               	retlw	173
   557  103F  3460               	retlw	96
   558  1040  34CA               	retlw	202
   559  1041  34F2               	retlw	242
   560  1042  3449               	retlw	73
   561  1043  3471               	retlw	113
   562  1044                     __end_of__powers_:
   563  1044                     __npowers_:
   564  1044  3400               	retlw	0
   565  1045  3400               	retlw	0
   566  1046  3480               	retlw	128
   567  1047  343F               	retlw	63
   568  1048  34CD               	retlw	205
   569  1049  34CC               	retlw	204
   570  104A  34CC               	retlw	204
   571  104B  343D               	retlw	61
   572  104C  340A               	retlw	10
   573  104D  34D7               	retlw	215
   574  104E  3423               	retlw	35
   575  104F  343C               	retlw	60
   576  1050  346F               	retlw	111
   577  1051  3412               	retlw	18
   578  1052  3483               	retlw	131
   579  1053  343A               	retlw	58
   580  1054  3417               	retlw	23
   581  1055  34B7               	retlw	183
   582  1056  34D1               	retlw	209
   583  1057  3438               	retlw	56
   584  1058  34AC               	retlw	172
   585  1059  34C5               	retlw	197
   586  105A  3427               	retlw	39
   587  105B  3437               	retlw	55
   588  105C  34BD               	retlw	189
   589  105D  3437               	retlw	55
   590  105E  3486               	retlw	134
   591  105F  3435               	retlw	53
   592  1060  3495               	retlw	149
   593  1061  34BF               	retlw	191
   594  1062  34D6               	retlw	214
   595  1063  3433               	retlw	51
   596  1064  3477               	retlw	119
   597  1065  34CC               	retlw	204
   598  1066  342B               	retlw	43
   599  1067  3432               	retlw	50
   600  1068  345F               	retlw	95
   601  1069  3470               	retlw	112
   602  106A  3489               	retlw	137
   603  106B  3430               	retlw	48
   604  106C  34FF               	retlw	255
   605  106D  34E6               	retlw	230
   606  106E  34DB               	retlw	219
   607  106F  342E               	retlw	46
   608  1070  3408               	retlw	8
   609  1071  34E5               	retlw	229
   610  1072  343C               	retlw	60
   611  1073  341E               	retlw	30
   612  1074  3460               	retlw	96
   613  1075  3442               	retlw	66
   614  1076  34A2               	retlw	162
   615  1077  340D               	retlw	13
   616  1078                     __end_of__npowers_:
   617  1078                     _dpowers:
   618  1078  3401               	retlw	1
   619  1079  3400               	retlw	0
   620  107A  3400               	retlw	0
   621  107B  3400               	retlw	0
   622  107C  340A               	retlw	10
   623  107D  3400               	retlw	0
   624  107E  3400               	retlw	0
   625  107F  3400               	retlw	0
   626  1080  3464               	retlw	100
   627  1081  3400               	retlw	0
   628  1082  3400               	retlw	0
   629  1083  3400               	retlw	0
   630  1084  34E8               	retlw	232
   631  1085  3403               	retlw	3
   632  1086  3400               	retlw	0
   633  1087  3400               	retlw	0
   634  1088  3410               	retlw	16
   635  1089  3427               	retlw	39
   636  108A  3400               	retlw	0
   637  108B  3400               	retlw	0
   638  108C  34A0               	retlw	160
   639  108D  3486               	retlw	134
   640  108E  3401               	retlw	1
   641  108F  3400               	retlw	0
   642  1090  3440               	retlw	64
   643  1091  3442               	retlw	66
   644  1092  340F               	retlw	15
   645  1093  3400               	retlw	0
   646  1094  3480               	retlw	128
   647  1095  3496               	retlw	150
   648  1096  3498               	retlw	152
   649  1097  3400               	retlw	0
   650  1098  3400               	retlw	0
   651  1099  34E1               	retlw	225
   652  109A  34F5               	retlw	245
   653  109B  3405               	retlw	5
   654  109C  3400               	retlw	0
   655  109D  34CA               	retlw	202
   656  109E  349A               	retlw	154
   657  109F  343B               	retlw	59
   658  10A0                     __end_of_dpowers:
   659  0013                     _SSPBUF	set	19
   660  0014                     _SSPCON	set	20
   661  0018                     _RCSTAbits	set	24
   662  0009                     _PORTE	set	9
   663  0005                     _PORTA	set	5
   664  0009                     _PORTEbits	set	9
   665  000B                     _INTCONbits	set	11
   666  0019                     _TXREG	set	25
   667  0008                     _PORTD	set	8
   668  0006                     _PORTBbits	set	6
   669  0063                     _SSPIF	set	99
   670  005E                     _PEIE	set	94
   671  005F                     _GIE	set	95
   672  0030                     _RB0	set	48
   673  0058                     _RBIF	set	88
   674  0064                     _TXIF	set	100
   675  0091                     _SSPCON2bits	set	145
   676  0087                     _TRISCbits	set	135
   677  0094                     _SSPSTAT	set	148
   678  0093                     _SSPADD	set	147
   679  0091                     _SSPCON2	set	145
   680  009A                     _SPBRGH	set	154
   681  0099                     _SPBRG	set	153
   682  0098                     _TXSTAbits	set	152
   683  0096                     _IOCBbits	set	150
   684  008F                     _OSCCONbits	set	143
   685  0095                     _WPUB	set	149
   686  0081                     _OPTION_REGbits	set	129
   687  0086                     _TRISBbits	set	134
   688  0089                     _TRISE	set	137
   689  0086                     _TRISB	set	134
   690  0085                     _TRISA	set	133
   691  0088                     _TRISD	set	136
   692  0463                     _SSPIE	set	1123
   693  043C                     _TRISC4	set	1084
   694  043B                     _TRISC3	set	1083
   695  0187                     _BAUDCTLbits	set	391
   696  0189                     _ANSELH	set	393
   697  0188                     _ANSEL	set	392
   698  10A0                     STR_1:
   699  10A0  340D               	retlw	13
   700  10A1  3420               	retlw	32	;' '
   701  10A2  3476               	retlw	118	;'v'
   702  10A3  3461               	retlw	97	;'a'
   703  10A4  346C               	retlw	108	;'l'
   704  10A5  346F               	retlw	111	;'o'
   705  10A6  3472               	retlw	114	;'r'
   706  10A7  3453               	retlw	83	;'S'
   707  10A8  3431               	retlw	49	;'1'
   708  10A9  343D               	retlw	61	;'='
   709  10AA  3425               	retlw	37	;'%'
   710  10AB  342E               	retlw	46	;'.'
   711  10AC  3432               	retlw	50	;'2'
   712  10AD  3466               	retlw	102	;'f'
   713  10AE  3420               	retlw	32	;' '
   714  10AF  340A               	retlw	10
   715  10B0  3400               	retlw	0
   716  10B1                     STR_2:
   717  10B1  340A               	retlw	10
   718  10B2  3420               	retlw	32	;' '
   719  10B3  3476               	retlw	118	;'v'
   720  10B4  3461               	retlw	97	;'a'
   721  10B5  346C               	retlw	108	;'l'
   722  10B6  346F               	retlw	111	;'o'
   723  10B7  3472               	retlw	114	;'r'
   724  10B8  3453               	retlw	83	;'S'
   725  10B9  3432               	retlw	50	;'2'
   726  10BA  343D               	retlw	61	;'='
   727  10BB  3425               	retlw	37	;'%'
   728  10BC  342E               	retlw	46	;'.'
   729  10BD  3432               	retlw	50	;'2'
   730  10BE  3466               	retlw	102	;'f'
   731  10BF  340A               	retlw	10
   732  10C0  3400               	retlw	0
   733  10C1                     STR_3:
   734  10C1  340A               	retlw	10
   735  10C2  3420               	retlw	32	;' '
   736  10C3  3463               	retlw	99	;'c'
   737  10C4  346F               	retlw	111	;'o'
   738  10C5  346E               	retlw	110	;'n'
   739  10C6  3474               	retlw	116	;'t'
   740  10C7  3461               	retlw	97	;'a'
   741  10C8  3464               	retlw	100	;'d'
   742  10C9  346F               	retlw	111	;'o'
   743  10CA  3472               	retlw	114	;'r'
   744  10CB  343D               	retlw	61	;'='
   745  10CC  3425               	retlw	37	;'%'
   746  10CD  3464               	retlw	100	;'d'
   747  10CE  3400               	retlw	0
   748  10CF                     STR_8:
   749  10CF  3425               	retlw	37	;'%'
   750  10D0  342E               	retlw	46	;'.'
   751  10D1  3432               	retlw	50	;'2'
   752  10D2  3464               	retlw	100	;'d'
   753  10D3  3455               	retlw	85	;'U'
   754  10D4  346E               	retlw	110	;'n'
   755  10D5  3469               	retlw	105	;'i'
   756  10D6  3400               	retlw	0
   757  10D7                     STR_9:
   758  10D7  3425               	retlw	37	;'%'
   759  10D8  342E               	retlw	46	;'.'
   760  10D9  3432               	retlw	50	;'2'
   761  10DA  3464               	retlw	100	;'d'
   762  10DB  346B               	retlw	107	;'k'
   763  10DC  3467               	retlw	103	;'g'
   764  10DD  3400               	retlw	0
   765  10DE                     STR_6:
   766  10DE  3445               	retlw	69	;'E'
   767  10DF  346E               	retlw	110	;'n'
   768  10E0  3476               	retlw	118	;'v'
   769  10E1  3461               	retlw	97	;'a'
   770  10E2  3400               	retlw	0
   771  10E3                     STR_4:
   772  10E3  3425               	retlw	37	;'%'
   773  10E4  3464               	retlw	100	;'d'
   774  10E5  3463               	retlw	99	;'c'
   775  10E6  346D               	retlw	109	;'m'
   776  10E7  3400               	retlw	0
   777  10E8                     STR_7:
   778  10E8  3450               	retlw	80	;'P'
   779  10E9  3465               	retlw	101	;'e'
   780  10EA  3473               	retlw	115	;'s'
   781  10EB  346F               	retlw	111	;'o'
   782  10EC  3400               	retlw	0
   783  10ED                     STR_5:
   784  10ED  3455               	retlw	85	;'U'
   785  10EE  346C               	retlw	108	;'l'
   786  10EF  3474               	retlw	116	;'t'
   787  10F0  3472               	retlw	114	;'r'
   788  10F1  3400               	retlw	0
   789                           
   790                           	psect	cinit
   791  000F                     start_initialization:	
   792                           ; #config settings
   793                           
   794  000F                     __initialization:
   795                           
   796                           ; Clear objects allocated to COMMON
   797  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   798                           
   799                           ; Clear objects allocated to BANK1
   800  0010  1383               	bcf	3,7	;select IRP bank0
   801  0011  30C8               	movlw	low __pbssBANK1
   802  0012  0084               	movwf	4
   803  0013  30E3               	movlw	low (__pbssBANK1+27)
   804  0014  160A  158A  2117  120A  118A  	fcall	clear_ram0
   805                           
   806                           ; Clear objects allocated to BANK3
   807  0019  1783               	bsf	3,7	;select IRP bank2
   808  001A  3090               	movlw	low __pbssBANK3
   809  001B  0084               	movwf	4
   810  001C  30A4               	movlw	low (__pbssBANK3+20)
   811  001D  160A  158A  2117  120A  118A  	fcall	clear_ram0
   812  0022                     end_of_initialization:	
   813                           ;End of C runtime variable initialization code
   814                           
   815  0022                     __end_of__initialization:
   816  0022  0183               	clrf	3
   817  0023  120A  158A  2818   	ljmp	_main	;jump to C main() function
   818                           
   819                           	psect	bssCOMMON
   820  007B                     __pbssCOMMON:
   821  007B                     _BanStart:
   822  007B                     	ds	1
   823                           
   824                           	psect	bssBANK1
   825  00C8                     __pbssBANK1:
   826  00C8                     _v3:
   827  00C8                     	ds	4
   828  00CC                     _v2:
   829  00CC                     	ds	4
   830  00D0                     _v1:
   831  00D0                     	ds	4
   832  00D4                     _datPeso:
   833  00D4                     	ds	2
   834  00D6                     _datUltrasonico:
   835  00D6                     	ds	2
   836  00D8                     _contRecipiente:
   837  00D8                     	ds	2
   838  00DA                     _start:
   839  00DA                     	ds	2
   840  00DC                     _POT:
   841  00DC                     	ds	2
   842  00DE                     _var2:
   843  00DE                     	ds	2
   844  00E0                     _var1:
   845  00E0                     	ds	2
   846  00E2                     _contador:
   847  00E2                     	ds	1
   848                           
   849                           	psect	bssBANK3
   850  0190                     __pbssBANK3:
   851  0190                     _s:
   852  0190                     	ds	20
   853                           
   854                           	psect	clrtext
   855  1917                     clear_ram0:	
   856                           ;	Called with FSR containing the base address, and
   857                           ;	W with the last address+1
   858                           
   859  1917  0064               	clrwdt	;clear the watchdog before getting into this loop
   860  1918                     clrloop0:
   861  1918  0180               	clrf	0	;clear RAM location pointed to by FSR
   862  1919  0A84               	incf	4,f	;increment pointer
   863  191A  0604               	xorwf	4,w	;XOR with final address
   864  191B  1903               	btfsc	3,2	;have we reached the end yet?
   865  191C  3400               	retlw	0	;all done for this memory range, return
   866  191D  0604               	xorwf	4,w	;XOR again to restore value
   867  191E  2918               	goto	clrloop0	;do the next byte
   868                           
   869                           	psect	cstackBANK1
   870  00A0                     __pcstackBANK1:
   871  00A0                     ?___flsub:
   872  00A0                     ___flsub@a:	
   873                           ; 4 bytes @ 0x0
   874                           
   875                           
   876                           ; 4 bytes @ 0x0
   877  00A0                     	ds	4
   878  00A4                     ___flsub@b:
   879                           
   880                           ; 4 bytes @ 0x4
   881  00A4                     	ds	4
   882  00A8                     ??_sprintf:
   883                           
   884                           ; 1 bytes @ 0x8
   885  00A8                     	ds	5
   886  00AD                     _sprintf$1283:
   887                           
   888                           ; 4 bytes @ 0xD
   889  00AD                     	ds	4
   890  00B1                     sprintf@ap:
   891                           
   892                           ; 1 bytes @ 0x11
   893  00B1                     	ds	1
   894  00B2                     sprintf@flag:
   895                           
   896                           ; 2 bytes @ 0x12
   897  00B2                     	ds	2
   898  00B4                     sprintf@eexp:
   899                           
   900                           ; 2 bytes @ 0x14
   901  00B4                     	ds	2
   902  00B6                     sprintf@tmpval:
   903                           
   904                           ; 4 bytes @ 0x16
   905  00B6                     	ds	4
   906  00BA                     sprintf@val:
   907                           
   908                           ; 4 bytes @ 0x1A
   909  00BA                     	ds	4
   910  00BE                     sprintf@fval:
   911                           
   912                           ; 4 bytes @ 0x1E
   913  00BE                     	ds	4
   914  00C2                     sprintf@prec:
   915                           
   916                           ; 2 bytes @ 0x22
   917  00C2                     	ds	2
   918  00C4                     sprintf@sp:
   919                           
   920                           ; 1 bytes @ 0x24
   921  00C4                     	ds	1
   922  00C5                     sprintf@c:
   923                           
   924                           ; 1 bytes @ 0x25
   925  00C5                     	ds	1
   926  00C6                     ??_main:
   927                           
   928                           ; 1 bytes @ 0x26
   929  00C6                     	ds	2
   930                           
   931                           	psect	cstackCOMMON
   932  0070                     __pcstackCOMMON:
   933  0070                     ?_isdigit:
   934  0070                     ?_setup:	
   935                           ; 1 bit 
   936                           
   937  0070                     ?_com_master:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     ?_configuracionUART:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ?_I2C_Master_Start:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ?_I2C_Master_Stop:	
   947                           ; 1 bytes @ 0x0
   948                           
   949  0070                     ?_Lcd_Cmd:	
   950                           ; 1 bytes @ 0x0
   951                           
   952  0070                     ?_Lcd_Write_Char:	
   953                           ; 1 bytes @ 0x0
   954                           
   955  0070                     ?_Lcd_Init:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     ?_Envio_caracter:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     ?_cadena_caracteres:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ?_valorsensores:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ?_isr:	
   968                           ; 1 bytes @ 0x0
   969                           
   970  0070                     ??_isr:	
   971                           ; 1 bytes @ 0x0
   972                           
   973  0070                     ?_main:	
   974                           ; 1 bytes @ 0x0
   975                           
   976  0070                     ?_I2C_Master_Wait:	
   977                           ; 1 bytes @ 0x0
   978                           
   979                           
   980                           ; 1 bytes @ 0x0
   981  0070                     	ds	2
   982  0072                     ?___fleq:
   983  0072                     ?___flge:	
   984                           ; 1 bit 
   985                           
   986  0072                     ??_configuracionUART:	
   987                           ; 1 bit 
   988                           
   989  0072                     ??_I2C_Master_Start:	
   990                           ; 1 bytes @ 0x2
   991                           
   992  0072                     ?_I2C_Master_Write:	
   993                           ; 1 bytes @ 0x2
   994                           
   995  0072                     ??_I2C_Master_Stop:	
   996                           ; 1 bytes @ 0x2
   997                           
   998  0072                     ??_isdigit:	
   999                           ; 1 bytes @ 0x2
  1000                           
  1001  0072                     ??_Lcd_Cmd:	
  1002                           ; 1 bytes @ 0x2
  1003                           
  1004  0072                     ??_Lcd_Write_Char:	
  1005                           ; 1 bytes @ 0x2
  1006                           
  1007  0072                     ??_Envio_caracter:	
  1008                           ; 1 bytes @ 0x2
  1009                           
  1010  0072                     ??_I2C_Master_Wait:	
  1011                           ; 1 bytes @ 0x2
  1012                           
  1013  0072                     ?_I2C_Master_Read:	
  1014                           ; 1 bytes @ 0x2
  1015                           
  1016  0072                     ?__Umul8_16:	
  1017                           ; 2 bytes @ 0x2
  1018                           
  1019  0072                     ?___wmul:	
  1020                           ; 2 bytes @ 0x2
  1021                           
  1022  0072                     ?___awmod:	
  1023                           ; 2 bytes @ 0x2
  1024                           
  1025  0072                     ?___lwmod:	
  1026                           ; 2 bytes @ 0x2
  1027                           
  1028  0072                     ?__tdiv_to_l_:	
  1029                           ; 2 bytes @ 0x2
  1030                           
  1031  0072                     ?__div_to_l_:	
  1032                           ; 4 bytes @ 0x2
  1033                           
  1034  0072                     ?___lldiv:	
  1035                           ; 4 bytes @ 0x2
  1036                           
  1037  0072                     ?___flneg:	
  1038                           ; 4 bytes @ 0x2
  1039                           
  1040  0072                     ?___xxtofl:	
  1041                           ; 4 bytes @ 0x2
  1042                           
  1043  0072                     Envio_caracter@caracter:	
  1044                           ; 4 bytes @ 0x2
  1045                           
  1046  0072                     __Umul8_16@multiplicand:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049  0072                     _isdigit$1078:	
  1050                           ; 1 bytes @ 0x2
  1051                           
  1052  0072                     I2C_Master_Write@d:	
  1053                           ; 1 bytes @ 0x2
  1054                           
  1055  0072                     I2C_Master_Read@a:	
  1056                           ; 2 bytes @ 0x2
  1057                           
  1058  0072                     ___wmul@multiplier:	
  1059                           ; 2 bytes @ 0x2
  1060                           
  1061  0072                     ___awmod@divisor:	
  1062                           ; 2 bytes @ 0x2
  1063                           
  1064  0072                     ___lwmod@divisor:	
  1065                           ; 2 bytes @ 0x2
  1066                           
  1067  0072                     ___lldiv@divisor:	
  1068                           ; 2 bytes @ 0x2
  1069                           
  1070  0072                     __div_to_l_@f1:	
  1071                           ; 4 bytes @ 0x2
  1072                           
  1073  0072                     ___fleq@ff1:	
  1074                           ; 4 bytes @ 0x2
  1075                           
  1076  0072                     ___flge@ff1:	
  1077                           ; 4 bytes @ 0x2
  1078                           
  1079  0072                     ___flneg@f1:	
  1080                           ; 4 bytes @ 0x2
  1081                           
  1082  0072                     __tdiv_to_l_@f1:	
  1083                           ; 4 bytes @ 0x2
  1084                           
  1085  0072                     ___xxtofl@val:	
  1086                           ; 4 bytes @ 0x2
  1087                           
  1088                           
  1089                           ; 4 bytes @ 0x2
  1090  0072                     	ds	1
  1091  0073                     ??_cadena_caracteres:
  1092  0073                     Lcd_Write_Char@a:	
  1093                           ; 1 bytes @ 0x3
  1094                           
  1095  0073                     isdigit@c:	
  1096                           ; 1 bytes @ 0x3
  1097                           
  1098                           
  1099                           ; 1 bytes @ 0x3
  1100  0073                     	ds	1
  1101  0074                     ??_I2C_Master_Write:
  1102  0074                     ??_I2C_Master_Read:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     ??__Umul8_16:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0074                     ?_Lcd_Write_String:	
  1109                           ; 1 bytes @ 0x4
  1110                           
  1111  0074                     Lcd_Cmd@a:	
  1112                           ; 1 bytes @ 0x4
  1113                           
  1114  0074                     Lcd_Write_String@a:	
  1115                           ; 1 bytes @ 0x4
  1116                           
  1117  0074                     cadena_caracteres@i:	
  1118                           ; 2 bytes @ 0x4
  1119                           
  1120  0074                     ___wmul@multiplicand:	
  1121                           ; 2 bytes @ 0x4
  1122                           
  1123  0074                     ___awmod@dividend:	
  1124                           ; 2 bytes @ 0x4
  1125                           
  1126  0074                     ___lwmod@dividend:	
  1127                           ; 2 bytes @ 0x4
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x4
  1131  0074                     	ds	1
  1132  0075                     ?_Lcd_Set_Cursor:
  1133  0075                     ??_Lcd_Init:	
  1134                           ; 1 bytes @ 0x5
  1135                           
  1136  0075                     Lcd_Set_Cursor@b:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x5
  1141  0075                     	ds	1
  1142  0076                     ??_Lcd_Set_Cursor:
  1143  0076                     ??_Lcd_Write_String:	
  1144                           ; 1 bytes @ 0x6
  1145                           
  1146  0076                     ??___wmul:	
  1147                           ; 1 bytes @ 0x6
  1148                           
  1149  0076                     ??___awmod:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0076                     ??___flneg:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0076                     ??___lwmod:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158  0076                     ??___xxtofl:	
  1159                           ; 1 bytes @ 0x6
  1160                           
  1161  0076                     cadena_caracteres@st:	
  1162                           ; 1 bytes @ 0x6
  1163                           
  1164  0076                     I2C_Master_Read@temp:	
  1165                           ; 1 bytes @ 0x6
  1166                           
  1167  0076                     ___wmul@product:	
  1168                           ; 2 bytes @ 0x6
  1169                           
  1170  0076                     __Umul8_16@product:	
  1171                           ; 2 bytes @ 0x6
  1172                           
  1173  0076                     ___lldiv@dividend:	
  1174                           ; 2 bytes @ 0x6
  1175                           
  1176  0076                     __div_to_l_@f2:	
  1177                           ; 4 bytes @ 0x6
  1178                           
  1179  0076                     ___fleq@ff2:	
  1180                           ; 4 bytes @ 0x6
  1181                           
  1182  0076                     ___flge@ff2:	
  1183                           ; 4 bytes @ 0x6
  1184                           
  1185  0076                     __tdiv_to_l_@f2:	
  1186                           ; 4 bytes @ 0x6
  1187                           
  1188                           
  1189                           ; 4 bytes @ 0x6
  1190  0076                     	ds	1
  1191  0077                     Lcd_Set_Cursor@a:
  1192  0077                     ___awmod@counter:	
  1193                           ; 1 bytes @ 0x7
  1194                           
  1195  0077                     ___lwmod@counter:	
  1196                           ; 1 bytes @ 0x7
  1197                           
  1198                           
  1199                           ; 1 bytes @ 0x7
  1200  0077                     	ds	1
  1201  0078                     ??_com_master:
  1202  0078                     ??___lwdiv:	
  1203                           ; 1 bytes @ 0x8
  1204                           
  1205  0078                     Lcd_Set_Cursor@temp:	
  1206                           ; 1 bytes @ 0x8
  1207                           
  1208  0078                     ___awmod@sign:	
  1209                           ; 1 bytes @ 0x8
  1210                           
  1211  0078                     __Umul8_16@word_mpld:	
  1212                           ; 1 bytes @ 0x8
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x8
  1216  0078                     	ds	1
  1217  0079                     ??___awdiv:
  1218  0079                     Lcd_Write_String@i:	
  1219                           ; 1 bytes @ 0x9
  1220                           
  1221                           
  1222                           ; 2 bytes @ 0x9
  1223  0079                     	ds	1
  1224  007A                     ??__div_to_l_:
  1225  007A                     ??___lldiv:	
  1226                           ; 1 bytes @ 0xA
  1227                           
  1228  007A                     __Umul8_16@multiplier:	
  1229                           ; 1 bytes @ 0xA
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0xA
  1233  007A                     	ds	1
  1234  007B                     ??_setup:
  1235  007B                     ??___flsub:	
  1236                           ; 1 bytes @ 0xB
  1237                           
  1238                           
  1239                           	psect	cstackBANK0
  1240  0020                     __pcstackBANK0:	
  1241                           ; 1 bytes @ 0xB
  1242                           
  1243  0020                     ??__tdiv_to_l_:
  1244  0020                     ??___fleq:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0020                     ??___flge:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0020                     ?___awdiv:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0020                     ?___lwdiv:	
  1254                           ; 2 bytes @ 0x0
  1255                           
  1256  0020                     ___xxtofl@sign:	
  1257                           ; 2 bytes @ 0x0
  1258                           
  1259  0020                     ___awdiv@divisor:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0020                     ___lwdiv@divisor:	
  1263                           ; 2 bytes @ 0x0
  1264                           
  1265  0020                     ___lldiv@quotient:	
  1266                           ; 2 bytes @ 0x0
  1267                           
  1268  0020                     __div_to_l_@quot:	
  1269                           ; 4 bytes @ 0x0
  1270                           
  1271                           
  1272                           ; 4 bytes @ 0x0
  1273  0020                     	ds	1
  1274  0021                     ___xxtofl@exp:
  1275                           
  1276                           ; 1 bytes @ 0x1
  1277  0021                     	ds	1
  1278  0022                     ___awdiv@dividend:
  1279  0022                     ___lwdiv@dividend:	
  1280                           ; 2 bytes @ 0x2
  1281                           
  1282  0022                     ___xxtofl@arg:	
  1283                           ; 2 bytes @ 0x2
  1284                           
  1285                           
  1286                           ; 4 bytes @ 0x2
  1287  0022                     	ds	2
  1288  0024                     ___lldiv@counter:
  1289  0024                     ___awdiv@counter:	
  1290                           ; 1 bytes @ 0x4
  1291                           
  1292  0024                     __div_to_l_@cntr:	
  1293                           ; 1 bytes @ 0x4
  1294                           
  1295  0024                     ___lwdiv@counter:	
  1296                           ; 1 bytes @ 0x4
  1297                           
  1298  0024                     __tdiv_to_l_@quot:	
  1299                           ; 1 bytes @ 0x4
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x4
  1303  0024                     	ds	1
  1304  0025                     ?_I2C_Master_Init:
  1305  0025                     ?___llmod:	
  1306                           ; 1 bytes @ 0x5
  1307                           
  1308  0025                     ___awdiv@sign:	
  1309                           ; 4 bytes @ 0x5
  1310                           
  1311  0025                     __div_to_l_@exp1:	
  1312                           ; 1 bytes @ 0x5
  1313                           
  1314  0025                     ___lwdiv@quotient:	
  1315                           ; 1 bytes @ 0x5
  1316                           
  1317  0025                     I2C_Master_Init@c:	
  1318                           ; 2 bytes @ 0x5
  1319                           
  1320  0025                     ___llmod@divisor:	
  1321                           ; 4 bytes @ 0x5
  1322                           
  1323                           
  1324                           ; 4 bytes @ 0x5
  1325  0025                     	ds	1
  1326  0026                     ___awdiv@quotient:
  1327                           
  1328                           ; 2 bytes @ 0x6
  1329  0026                     	ds	2
  1330  0028                     ?___flmul:
  1331  0028                     __tdiv_to_l_@cntr:	
  1332                           ; 4 bytes @ 0x8
  1333                           
  1334  0028                     ___flmul@b:	
  1335                           ; 1 bytes @ 0x8
  1336                           
  1337                           
  1338                           ; 4 bytes @ 0x8
  1339  0028                     	ds	1
  1340  0029                     ??_I2C_Master_Init:
  1341  0029                     __tdiv_to_l_@exp1:	
  1342                           ; 1 bytes @ 0x9
  1343                           
  1344  0029                     ___llmod@dividend:	
  1345                           ; 1 bytes @ 0x9
  1346                           
  1347                           
  1348                           ; 4 bytes @ 0x9
  1349  0029                     	ds	3
  1350  002C                     ___flmul@a:
  1351                           
  1352                           ; 4 bytes @ 0xC
  1353  002C                     	ds	1
  1354  002D                     ??___llmod:
  1355                           
  1356                           ; 1 bytes @ 0xD
  1357  002D                     	ds	1
  1358  002E                     ___llmod@counter:
  1359                           
  1360                           ; 1 bytes @ 0xE
  1361  002E                     	ds	2
  1362  0030                     ??___flmul:
  1363                           
  1364                           ; 1 bytes @ 0x10
  1365  0030                     	ds	5
  1366  0035                     ___flmul@sign:
  1367                           
  1368                           ; 1 bytes @ 0x15
  1369  0035                     	ds	1
  1370  0036                     ___flmul@grs:
  1371                           
  1372                           ; 4 bytes @ 0x16
  1373  0036                     	ds	4
  1374  003A                     ___flmul@aexp:
  1375                           
  1376                           ; 1 bytes @ 0x1A
  1377  003A                     	ds	1
  1378  003B                     ___flmul@bexp:
  1379                           
  1380                           ; 1 bytes @ 0x1B
  1381  003B                     	ds	1
  1382  003C                     ___flmul@prod:
  1383                           
  1384                           ; 4 bytes @ 0x1C
  1385  003C                     	ds	4
  1386  0040                     ___flmul@temp:
  1387                           
  1388                           ; 2 bytes @ 0x20
  1389  0040                     	ds	2
  1390  0042                     ?_fround:
  1391  0042                     ?_scale:	
  1392                           ; 4 bytes @ 0x22
  1393                           
  1394                           
  1395                           ; 4 bytes @ 0x22
  1396  0042                     	ds	4
  1397  0046                     ??_fround:
  1398  0046                     ??_scale:	
  1399                           ; 1 bytes @ 0x26
  1400                           
  1401                           
  1402                           ; 1 bytes @ 0x26
  1403  0046                     	ds	7
  1404  004D                     _fround$1281:
  1405                           
  1406                           ; 4 bytes @ 0x2D
  1407  004D                     	ds	3
  1408  0050                     _scale$1282:
  1409                           
  1410                           ; 4 bytes @ 0x30
  1411  0050                     	ds	1
  1412  0051                     _fround$1280:
  1413                           
  1414                           ; 4 bytes @ 0x31
  1415  0051                     	ds	3
  1416  0054                     scale@scl:
  1417                           
  1418                           ; 1 bytes @ 0x34
  1419  0054                     	ds	1
  1420  0055                     ?___fltol:
  1421  0055                     fround@prec:	
  1422                           ; 4 bytes @ 0x35
  1423                           
  1424  0055                     ___fltol@f1:	
  1425                           ; 1 bytes @ 0x35
  1426                           
  1427                           
  1428                           ; 4 bytes @ 0x35
  1429  0055                     	ds	1
  1430  0056                     ?___fladd:
  1431  0056                     ___fladd@b:	
  1432                           ; 4 bytes @ 0x36
  1433                           
  1434                           
  1435                           ; 4 bytes @ 0x36
  1436  0056                     	ds	3
  1437  0059                     ??___fltol:
  1438                           
  1439                           ; 1 bytes @ 0x39
  1440  0059                     	ds	1
  1441  005A                     ___fladd@a:
  1442                           
  1443                           ; 4 bytes @ 0x3A
  1444  005A                     	ds	4
  1445  005E                     ??___fladd:
  1446  005E                     ___fltol@sign1:	
  1447                           ; 1 bytes @ 0x3E
  1448                           
  1449                           
  1450                           ; 1 bytes @ 0x3E
  1451  005E                     	ds	1
  1452  005F                     ___fltol@exp1:
  1453                           
  1454                           ; 1 bytes @ 0x3F
  1455  005F                     	ds	7
  1456  0066                     ___fladd@signs:
  1457                           
  1458                           ; 1 bytes @ 0x46
  1459  0066                     	ds	1
  1460  0067                     ___fladd@aexp:
  1461                           
  1462                           ; 1 bytes @ 0x47
  1463  0067                     	ds	1
  1464  0068                     ___fladd@bexp:
  1465                           
  1466                           ; 1 bytes @ 0x48
  1467  0068                     	ds	1
  1468  0069                     ___fladd@grs:
  1469                           
  1470                           ; 1 bytes @ 0x49
  1471  0069                     	ds	1
  1472  006A                     ?_sprintf:
  1473  006A                     sprintf@f:	
  1474                           ; 2 bytes @ 0x4A
  1475                           
  1476                           
  1477                           ; 1 bytes @ 0x4A
  1478  006A                     	ds	5
  1479  006F                     ??_valorsensores:
  1480                           
  1481                           ; 1 bytes @ 0x4F
  1482  006F                     	ds	1
  1483                           
  1484                           	psect	maintext
  1485  0818                     __pmaintext:	
  1486 ;;
  1487 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1488 ;;
  1489 ;; *************** function _main *****************
  1490 ;; Defined at:
  1491 ;;		line 68 in file "main_proyectoMaster.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;		None
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  a               2    0        unsigned int 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      void 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : B00/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          0       0       2       0       0
  1508 ;;      Totals:         0       0       2       0       0
  1509 ;;Total ram usage:        2 bytes
  1510 ;; Hardware stack levels required when called:    6
  1511 ;; This function calls:
  1512 ;;		_Lcd_Init
  1513 ;;		_Lcd_Set_Cursor
  1514 ;;		_Lcd_Write_String
  1515 ;;		_com_master
  1516 ;;		_setup
  1517 ;;		_sprintf
  1518 ;;		_valorsensores
  1519 ;; This function is called by:
  1520 ;;		Startup code after reset
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _main
  1526  0818                     _main:
  1527  0818                     l4124:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1530                           
  1531                           
  1532                           ;main_proyectoMaster.c: 69:     setup();
  1533  0818  160A  158A  2240  120A  158A  	fcall	_setup
  1534  081D                     l4126:
  1535                           
  1536                           ;main_proyectoMaster.c: 70:     unsigned int a;;main_proyectoMaster.c: 71:     TRISD = 0
      +                          x00;
  1537  081D  1683               	bsf	3,5	;RP0=1, select bank1
  1538  081E  1303               	bcf	3,6	;RP1=0, select bank1
  1539  081F  0188               	clrf	8	;volatile
  1540  0820                     l4128:
  1541                           
  1542                           ;main_proyectoMaster.c: 72:     Lcd_Init();
  1543  0820  160A  158A  2272  120A  158A  	fcall	_Lcd_Init
  1544  0825                     l4130:
  1545                           
  1546                           ;main_proyectoMaster.c: 75:     {;main_proyectoMaster.c: 76:         com_master();
  1547  0825  160A  118A  225D  120A  158A  	fcall	_com_master
  1548  082A                     l4132:
  1549                           
  1550                           ;main_proyectoMaster.c: 77:         PORTEbits.RE2 = start;
  1551  082A  1683               	bsf	3,5	;RP0=1, select bank1
  1552  082B  1303               	bcf	3,6	;RP1=0, select bank1
  1553  082C  0C5A               	rrf	_start^(0+128),w
  1554  082D  1283               	bcf	3,5	;RP0=0, select bank0
  1555  082E  1303               	bcf	3,6	;RP1=0, select bank0
  1556  082F  1C03               	skipc
  1557  0830  1109               	bcf	9,2	;volatile
  1558  0831  1803               	skipnc
  1559  0832  1509               	bsf	9,2	;volatile
  1560  0833                     l4134:
  1561                           
  1562                           ;main_proyectoMaster.c: 79:         if (datUltrasonico == 1 | contRecipiente == 6)
  1563  0833  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0834  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0835  0356               	decf	_datUltrasonico^(0+128),w
  1566  0836  0457               	iorwf	(_datUltrasonico+1)^(0+128),w
  1567  0837  1903               	btfsc	3,2
  1568  0838  283A               	goto	u6271
  1569  0839  283B               	goto	u6270
  1570  083A                     u6271:
  1571  083A  2842               	goto	l183
  1572  083B                     u6270:
  1573  083B                     l4136:
  1574  083B  3006               	movlw	6
  1575  083C  0658               	xorwf	_contRecipiente^(0+128),w
  1576  083D  0459               	iorwf	(_contRecipiente+1)^(0+128),w
  1577  083E  1D03               	btfss	3,2
  1578  083F  2841               	goto	u6281
  1579  0840  2842               	goto	u6280
  1580  0841                     u6281:
  1581  0841  284B               	goto	l181
  1582  0842                     u6280:
  1583  0842                     l183:
  1584                           
  1585                           ;main_proyectoMaster.c: 80:         {;main_proyectoMaster.c: 81:             PORTEbits.R
      +                          E0 = 1;
  1586  0842  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0843  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0844  1409               	bsf	9,0	;volatile
  1589  0845                     l4138:
  1590                           
  1591                           ;main_proyectoMaster.c: 82:             start = 0;
  1592  0845  1683               	bsf	3,5	;RP0=1, select bank1
  1593  0846  1303               	bcf	3,6	;RP1=0, select bank1
  1594  0847  01DA               	clrf	_start^(0+128)
  1595  0848  01DB               	clrf	(_start+1)^(0+128)
  1596                           
  1597                           ;main_proyectoMaster.c: 83:             BanStart = 0;
  1598  0849  01FB               	clrf	_BanStart
  1599                           
  1600                           ;main_proyectoMaster.c: 84:         }
  1601  084A  284E               	goto	l4140
  1602  084B                     l181:	
  1603                           ;main_proyectoMaster.c: 85:         else
  1604                           
  1605                           
  1606                           ;main_proyectoMaster.c: 86:         {;main_proyectoMaster.c: 87:             PORTEbits.R
      +                          E0 = 0;
  1607  084B  1283               	bcf	3,5	;RP0=0, select bank0
  1608  084C  1303               	bcf	3,6	;RP1=0, select bank0
  1609  084D  1009               	bcf	9,0	;volatile
  1610  084E                     l4140:
  1611                           
  1612                           ;main_proyectoMaster.c: 90:         if (contRecipiente == 6)
  1613  084E  3006               	movlw	6
  1614  084F  1683               	bsf	3,5	;RP0=1, select bank1
  1615  0850  1303               	bcf	3,6	;RP1=0, select bank1
  1616  0851  0658               	xorwf	_contRecipiente^(0+128),w
  1617  0852  0459               	iorwf	(_contRecipiente+1)^(0+128),w
  1618  0853  1D03               	btfss	3,2
  1619  0854  2856               	goto	u6291
  1620  0855  2857               	goto	u6290
  1621  0856                     u6291:
  1622  0856  285B               	goto	l185
  1623  0857                     u6290:
  1624  0857                     l4142:
  1625                           
  1626                           ;main_proyectoMaster.c: 91:         {;main_proyectoMaster.c: 92:             PORTEbits.R
      +                          E1 = 1;
  1627  0857  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0858  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0859  1489               	bsf	9,1	;volatile
  1630                           
  1631                           ;main_proyectoMaster.c: 93:         }
  1632  085A  285E               	goto	l4144
  1633  085B                     l185:	
  1634                           ;main_proyectoMaster.c: 94:         else
  1635                           
  1636                           
  1637                           ;main_proyectoMaster.c: 95:         {;main_proyectoMaster.c: 96:             PORTEbits.R
      +                          E1 = 0;
  1638  085B  1283               	bcf	3,5	;RP0=0, select bank0
  1639  085C  1303               	bcf	3,6	;RP1=0, select bank0
  1640  085D  1089               	bcf	9,1	;volatile
  1641  085E                     l4144:
  1642                           
  1643                           ;main_proyectoMaster.c: 98:         PORTA = datPeso;
  1644  085E  1683               	bsf	3,5	;RP0=1, select bank1
  1645  085F  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0860  0854               	movf	_datPeso^(0+128),w
  1647  0861  1283               	bcf	3,5	;RP0=0, select bank0
  1648  0862  1303               	bcf	3,6	;RP1=0, select bank0
  1649  0863  0085               	movwf	5	;volatile
  1650  0864                     l4146:
  1651                           
  1652                           ;main_proyectoMaster.c: 100:         sprintf(s, "%dcm", datUltrasonico);
  1653  0864  30D4               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1654  0865  1683               	bsf	3,5	;RP0=1, select bank1
  1655  0866  1303               	bcf	3,6	;RP1=0, select bank1
  1656  0867  00C6               	movwf	??_main^(0+128)
  1657  0868  0846               	movf	??_main^(0+128),w
  1658  0869  1283               	bcf	3,5	;RP0=0, select bank0
  1659  086A  1303               	bcf	3,6	;RP1=0, select bank0
  1660  086B  00EA               	movwf	sprintf@f
  1661  086C  1683               	bsf	3,5	;RP0=1, select bank1
  1662  086D  1303               	bcf	3,6	;RP1=0, select bank1
  1663  086E  0857               	movf	(_datUltrasonico+1)^(0+128),w
  1664  086F  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0870  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0871  00EC               	movwf	?_sprintf+2
  1667  0872  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0873  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0874  0856               	movf	_datUltrasonico^(0+128),w
  1670  0875  1283               	bcf	3,5	;RP0=0, select bank0
  1671  0876  1303               	bcf	3,6	;RP1=0, select bank0
  1672  0877  00EB               	movwf	?_sprintf+1
  1673  0878  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1674  0879  120A  118A  2026  120A  158A  	fcall	_sprintf
  1675  087E                     l4148:
  1676                           
  1677                           ;main_proyectoMaster.c: 101:         Lcd_Set_Cursor(2,1);
  1678  087E  01F5               	clrf	Lcd_Set_Cursor@b
  1679  087F  0AF5               	incf	Lcd_Set_Cursor@b,f
  1680  0880  3002               	movlw	2
  1681  0881  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1682  0886                     l4150:
  1683                           
  1684                           ;main_proyectoMaster.c: 102:         Lcd_Write_String(s);
  1685  0886  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1686  0887  00F4               	movwf	Lcd_Write_String@a
  1687  0888  3001               	movlw	1
  1688  0889  00F5               	movwf	Lcd_Write_String@a+1
  1689  088A  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1690  088F                     l4152:
  1691                           
  1692                           ;main_proyectoMaster.c: 104:         Lcd_Set_Cursor(1,1);
  1693  088F  01F5               	clrf	Lcd_Set_Cursor@b
  1694  0890  0AF5               	incf	Lcd_Set_Cursor@b,f
  1695  0891  3001               	movlw	1
  1696  0892  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1697  0897                     l4154:
  1698                           
  1699                           ;main_proyectoMaster.c: 105:         Lcd_Write_String("Ultr");
  1700  0897  30DE               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1701  0898  00F4               	movwf	Lcd_Write_String@a
  1702  0899  3080               	movlw	128
  1703  089A  00F5               	movwf	Lcd_Write_String@a+1
  1704  089B  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1705  08A0                     l4156:
  1706                           
  1707                           ;main_proyectoMaster.c: 106:         Lcd_Set_Cursor(1,7);
  1708  08A0  3007               	movlw	7
  1709  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1710  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1711  08A3  00C6               	movwf	??_main^(0+128)
  1712  08A4  0846               	movf	??_main^(0+128),w
  1713  08A5  00F5               	movwf	Lcd_Set_Cursor@b
  1714  08A6  3001               	movlw	1
  1715  08A7  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1716  08AC                     l4158:
  1717                           
  1718                           ;main_proyectoMaster.c: 107:         Lcd_Write_String("Enva");
  1719  08AC  30CF               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1720  08AD  00F4               	movwf	Lcd_Write_String@a
  1721  08AE  3080               	movlw	128
  1722  08AF  00F5               	movwf	Lcd_Write_String@a+1
  1723  08B0  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1724  08B5                     l4160:
  1725                           
  1726                           ;main_proyectoMaster.c: 108:         Lcd_Set_Cursor(1,14);
  1727  08B5  300E               	movlw	14
  1728  08B6  1683               	bsf	3,5	;RP0=1, select bank1
  1729  08B7  1303               	bcf	3,6	;RP1=0, select bank1
  1730  08B8  00C6               	movwf	??_main^(0+128)
  1731  08B9  0846               	movf	??_main^(0+128),w
  1732  08BA  00F5               	movwf	Lcd_Set_Cursor@b
  1733  08BB  3001               	movlw	1
  1734  08BC  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1735  08C1                     l4162:
  1736                           
  1737                           ;main_proyectoMaster.c: 109:         Lcd_Write_String("Peso");
  1738  08C1  30D9               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1739  08C2  00F4               	movwf	Lcd_Write_String@a
  1740  08C3  3080               	movlw	128
  1741  08C4  00F5               	movwf	Lcd_Write_String@a+1
  1742  08C5  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1743  08CA                     l4164:
  1744                           
  1745                           ;main_proyectoMaster.c: 111:         sprintf(s, "%.2dUni", contRecipiente);
  1746  08CA  30C0               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1747  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  1748  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  1749  08CD  00C6               	movwf	??_main^(0+128)
  1750  08CE  0846               	movf	??_main^(0+128),w
  1751  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  1752  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  1753  08D1  00EA               	movwf	sprintf@f
  1754  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  1755  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  1756  08D4  0859               	movf	(_contRecipiente+1)^(0+128),w
  1757  08D5  1283               	bcf	3,5	;RP0=0, select bank0
  1758  08D6  1303               	bcf	3,6	;RP1=0, select bank0
  1759  08D7  00EC               	movwf	?_sprintf+2
  1760  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  1761  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  1762  08DA  0858               	movf	_contRecipiente^(0+128),w
  1763  08DB  1283               	bcf	3,5	;RP0=0, select bank0
  1764  08DC  1303               	bcf	3,6	;RP1=0, select bank0
  1765  08DD  00EB               	movwf	?_sprintf+1
  1766  08DE  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1767  08DF  120A  118A  2026  120A  158A  	fcall	_sprintf
  1768  08E4                     l4166:
  1769                           
  1770                           ;main_proyectoMaster.c: 112:         Lcd_Set_Cursor(2,7);
  1771  08E4  3007               	movlw	7
  1772  08E5  1683               	bsf	3,5	;RP0=1, select bank1
  1773  08E6  1303               	bcf	3,6	;RP1=0, select bank1
  1774  08E7  00C6               	movwf	??_main^(0+128)
  1775  08E8  0846               	movf	??_main^(0+128),w
  1776  08E9  00F5               	movwf	Lcd_Set_Cursor@b
  1777  08EA  3002               	movlw	2
  1778  08EB  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1779  08F0                     l4168:
  1780                           
  1781                           ;main_proyectoMaster.c: 113:         Lcd_Write_String(s);
  1782  08F0  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1783  08F1  00F4               	movwf	Lcd_Write_String@a
  1784  08F2  3001               	movlw	1
  1785  08F3  00F5               	movwf	Lcd_Write_String@a+1
  1786  08F4  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1787  08F9                     l4170:
  1788                           
  1789                           ;main_proyectoMaster.c: 115:         sprintf(s, "%.2dkg", datPeso);
  1790  08F9  30C8               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1791  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  1792  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  1793  08FC  00C6               	movwf	??_main^(0+128)
  1794  08FD  0846               	movf	??_main^(0+128),w
  1795  08FE  1283               	bcf	3,5	;RP0=0, select bank0
  1796  08FF  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0900  00EA               	movwf	sprintf@f
  1798  0901  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0902  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0903  0855               	movf	(_datPeso+1)^(0+128),w
  1801  0904  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0905  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0906  00EC               	movwf	?_sprintf+2
  1804  0907  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0908  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0909  0854               	movf	_datPeso^(0+128),w
  1807  090A  1283               	bcf	3,5	;RP0=0, select bank0
  1808  090B  1303               	bcf	3,6	;RP1=0, select bank0
  1809  090C  00EB               	movwf	?_sprintf+1
  1810  090D  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1811  090E  120A  118A  2026  120A  158A  	fcall	_sprintf
  1812  0913                     l4172:
  1813                           
  1814                           ;main_proyectoMaster.c: 116:         Lcd_Set_Cursor(2,13);
  1815  0913  300D               	movlw	13
  1816  0914  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0915  1303               	bcf	3,6	;RP1=0, select bank1
  1818  0916  00C6               	movwf	??_main^(0+128)
  1819  0917  0846               	movf	??_main^(0+128),w
  1820  0918  00F5               	movwf	Lcd_Set_Cursor@b
  1821  0919  3002               	movlw	2
  1822  091A  160A  158A  21AA  120A  158A  	fcall	_Lcd_Set_Cursor
  1823  091F                     l4174:
  1824                           
  1825                           ;main_proyectoMaster.c: 117:         Lcd_Write_String(s);
  1826  091F  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1827  0920  00F4               	movwf	Lcd_Write_String@a
  1828  0921  3001               	movlw	1
  1829  0922  00F5               	movwf	Lcd_Write_String@a+1
  1830  0923  160A  158A  2319  120A  158A  	fcall	_Lcd_Write_String
  1831  0928                     l4176:
  1832                           
  1833                           ;main_proyectoMaster.c: 118:         _delay((unsigned long)((80)*(4000000/4000.0)));
  1834  0928  3068               	movlw	104
  1835  0929  1683               	bsf	3,5	;RP0=1, select bank1
  1836  092A  1303               	bcf	3,6	;RP1=0, select bank1
  1837  092B  00C7               	movwf	(??_main^(0+128)+1)
  1838  092C  30E3               	movlw	227
  1839  092D  00C6               	movwf	??_main^(0+128)
  1840  092E                     u6307:
  1841  092E  0BC6               	decfsz	??_main^(0+128),f
  1842  092F  292E               	goto	u6307
  1843  0930  0BC7               	decfsz	(??_main^(0+128)+1),f
  1844  0931  292E               	goto	u6307
  1845  0932  2933               	nop2
  1846                           
  1847                           ;main_proyectoMaster.c: 119:         valorsensores();
  1848  0933  160A  158A  23A1  120A  158A  	fcall	_valorsensores
  1849  0938  2825               	goto	l4130
  1850  0939  120A  118A  280C   	ljmp	start
  1851  093C                     __end_of_main:
  1852                           
  1853                           	psect	text1
  1854  1BA1                     __ptext1:	
  1855 ;; *************** function _valorsensores *****************
  1856 ;; Defined at:
  1857 ;;		line 38 in file "UARTP_Master.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;		None
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;		None
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1871 ;;      Params:         0       0       0       0       0
  1872 ;;      Locals:         0       0       0       0       0
  1873 ;;      Temps:          0       1       0       0       0
  1874 ;;      Totals:         0       1       0       0       0
  1875 ;;Total ram usage:        1 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    5
  1878 ;; This function calls:
  1879 ;;		_cadena_caracteres
  1880 ;;		_sprintf
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _valorsensores
  1888  1BA1                     _valorsensores:
  1889  1BA1                     l4114:	
  1890                           ;incstack = 0
  1891                           ; Regs used in _valorsensores: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1892                           
  1893                           
  1894                           ;UARTP_Master.c: 40:     sprintf(s, "\r valorS1=%.2f \n", v1);
  1895  1BA1  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1896  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  1897  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  1898  1BA4  00EF               	movwf	??_valorsensores
  1899  1BA5  086F               	movf	??_valorsensores,w
  1900  1BA6  00EA               	movwf	sprintf@f
  1901  1BA7  3000               	movlw	0
  1902  1BA8  00EE               	movwf	?_sprintf+4
  1903  1BA9  3000               	movlw	0
  1904  1BAA  00ED               	movwf	?_sprintf+3
  1905  1BAB  3000               	movlw	0
  1906  1BAC  00EC               	movwf	?_sprintf+2
  1907  1BAD  3000               	movlw	0
  1908  1BAE  00EB               	movwf	?_sprintf+1
  1909  1BAF  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1910  1BB0  120A  118A  2026  160A  158A  	fcall	_sprintf
  1911  1BB5                     l4116:
  1912                           
  1913                           ;UARTP_Master.c: 41:     cadena_caracteres(s);
  1914  1BB5  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1915  1BB6  160A  158A  2189  160A  158A  	fcall	_cadena_caracteres
  1916  1BBB                     l4118:
  1917                           
  1918                           ;UARTP_Master.c: 43:     sprintf(s, "\n valorS2=%.2f\n", v2);
  1919  1BBB  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1920  1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  1921  1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  1922  1BBE  00EF               	movwf	??_valorsensores
  1923  1BBF  086F               	movf	??_valorsensores,w
  1924  1BC0  00EA               	movwf	sprintf@f
  1925  1BC1  3000               	movlw	0
  1926  1BC2  00EE               	movwf	?_sprintf+4
  1927  1BC3  3000               	movlw	0
  1928  1BC4  00ED               	movwf	?_sprintf+3
  1929  1BC5  3000               	movlw	0
  1930  1BC6  00EC               	movwf	?_sprintf+2
  1931  1BC7  3000               	movlw	0
  1932  1BC8  00EB               	movwf	?_sprintf+1
  1933  1BC9  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1934  1BCA  120A  118A  2026  160A  158A  	fcall	_sprintf
  1935                           
  1936                           ;UARTP_Master.c: 44:     cadena_caracteres(s);
  1937  1BCF  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1938  1BD0  160A  158A  2189  160A  158A  	fcall	_cadena_caracteres
  1939  1BD5                     l4120:
  1940                           
  1941                           ;UARTP_Master.c: 46:     sprintf(s, "\n contador=%d", contador);
  1942  1BD5  30B2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1943  1BD6  1283               	bcf	3,5	;RP0=0, select bank0
  1944  1BD7  1303               	bcf	3,6	;RP1=0, select bank0
  1945  1BD8  00EF               	movwf	??_valorsensores
  1946  1BD9  086F               	movf	??_valorsensores,w
  1947  1BDA  00EA               	movwf	sprintf@f
  1948  1BDB  3000               	movlw	0
  1949  1BDC  00EB               	movwf	?_sprintf+1
  1950  1BDD  00EC               	movwf	?_sprintf+2
  1951  1BDE  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1952  1BDF  120A  118A  2026  160A  158A  	fcall	_sprintf
  1953  1BE4                     l4122:
  1954                           
  1955                           ;UARTP_Master.c: 47:     cadena_caracteres(s);
  1956  1BE4  3090               	movlw	(low (_s| (0+256)))& (0+255)
  1957  1BE5  160A  158A  2189  160A  158A  	fcall	_cadena_caracteres
  1958  1BEA                     l67:
  1959  1BEA  0008               	return
  1960  1BEB                     __end_of_valorsensores:
  1961                           
  1962                           	psect	text2
  1963  0026                     __ptext2:	
  1964 ;; *************** function _sprintf *****************
  1965 ;; Defined at:
  1966 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  sp              1    wreg     PTR unsigned char 
  1969 ;;		 -> s(20), 
  1970 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1971 ;;		 -> STR_9(7), STR_8(8), STR_4(5), STR_3(14), 
  1972 ;;		 -> STR_2(16), STR_1(17), 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1975 ;;		 -> s(20), 
  1976 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1977 ;;  val             4   26[BANK1 ] unsigned long 
  1978 ;;  tmpval          4   22[BANK1 ] struct .
  1979 ;;  prec            2   34[BANK1 ] int 
  1980 ;;  eexp            2   20[BANK1 ] int 
  1981 ;;  flag            2   18[BANK1 ] unsigned short 
  1982 ;;  cp              2    0        PTR const unsigned char 
  1983 ;;  len             2    0        unsigned int 
  1984 ;;  width           2    0        int 
  1985 ;;  c               1   37[BANK1 ] unsigned char 
  1986 ;;  ap              1   17[BANK1 ] PTR void [1]
  1987 ;;		 -> ?_sprintf(2), 
  1988 ;;  d               1    0        unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  2   74[BANK0 ] int 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1998 ;;      Params:         0       5       0       0       0
  1999 ;;      Locals:         0       0      25       0       0
  2000 ;;      Temps:          0       0       5       0       0
  2001 ;;      Totals:         0       5      30       0       0
  2002 ;;Total ram usage:       35 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    4
  2005 ;; This function calls:
  2006 ;;		___awdiv
  2007 ;;		___fladd
  2008 ;;		___fleq
  2009 ;;		___flge
  2010 ;;		___flmul
  2011 ;;		___flneg
  2012 ;;		___flsub
  2013 ;;		___fltol
  2014 ;;		___lldiv
  2015 ;;		___llmod
  2016 ;;		___wmul
  2017 ;;		___xxtofl
  2018 ;;		__div_to_l_
  2019 ;;		__tdiv_to_l_
  2020 ;;		_fround
  2021 ;;		_isdigit
  2022 ;;		_scale
  2023 ;; This function is called by:
  2024 ;;		_valorsensores
  2025 ;;		_main
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _sprintf
  2031  0026                     _sprintf:
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2035                           ;sprintf@sp stored from wreg
  2036  0026  1683               	bsf	3,5	;RP0=1, select bank1
  2037  0027  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0028  00C4               	movwf	sprintf@sp^(0+128)
  2039  0029                     l3876:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2042  0029  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2043  002A  00A8               	movwf	??_sprintf^(0+128)
  2044  002B  0828               	movf	??_sprintf^(0+128),w
  2045  002C  00B1               	movwf	sprintf@ap^(0+128)
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2048  002D  2FB5               	goto	l4102
  2049  002E                     l3878:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2052  002E  3025               	movlw	37
  2053  002F  0645               	xorwf	sprintf@c^(0+128),w
  2054  0030  1903               	btfsc	3,2
  2055  0031  2833               	goto	u5861
  2056  0032  2834               	goto	u5860
  2057  0033                     u5861:
  2058  0033  2840               	goto	l3884
  2059  0034                     u5860:
  2060  0034                     l3880:
  2061                           
  2062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2063  0034  0845               	movf	sprintf@c^(0+128),w
  2064  0035  00A8               	movwf	??_sprintf^(0+128)
  2065  0036  0844               	movf	sprintf@sp^(0+128),w
  2066  0037  0084               	movwf	4
  2067  0038  0828               	movf	??_sprintf^(0+128),w
  2068  0039  1783               	bsf	3,7	;select IRP bank2
  2069  003A  0080               	movwf	0
  2070  003B                     l3882:
  2071  003B  3001               	movlw	1
  2072  003C  00A8               	movwf	??_sprintf^(0+128)
  2073  003D  0828               	movf	??_sprintf^(0+128),w
  2074  003E  07C4               	addwf	sprintf@sp^(0+128),f
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2077  003F  2FB5               	goto	l4102
  2078  0040                     l3884:
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2081  0040  01B2               	clrf	sprintf@flag^(0+128)
  2082  0041  01B3               	clrf	(sprintf@flag+1)^(0+128)
  2083  0042                     l3886:
  2084                           
  2085                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2086  0042  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0043  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0044  086A               	movf	sprintf@f,w
  2089  0045  0084               	movwf	4
  2090  0046  160A  118A  200A  120A  118A  	fcall	stringdir
  2091  004B  3A2E               	xorlw	46
  2092  004C  1D03               	skipz
  2093  004D  284F               	goto	u5871
  2094  004E  2850               	goto	u5870
  2095  004F                     u5871:
  2096  004F  28A2               	goto	l3902
  2097  0050                     u5870:
  2098  0050                     l3888:
  2099                           
  2100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2101  0050  1683               	bsf	3,5	;RP0=1, select bank1
  2102  0051  1303               	bcf	3,6	;RP1=0, select bank1
  2103  0052  1733               	bsf	(sprintf@flag^(0+128)+1),6
  2104  0053                     l3890:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2107  0053  3001               	movlw	1
  2108  0054  00A8               	movwf	??_sprintf^(0+128)
  2109  0055  0828               	movf	??_sprintf^(0+128),w
  2110  0056  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0057  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0058  07EA               	addwf	sprintf@f,f
  2113  0059                     l3892:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2116  0059  1683               	bsf	3,5	;RP0=1, select bank1
  2117  005A  1303               	bcf	3,6	;RP1=0, select bank1
  2118  005B  01C2               	clrf	sprintf@prec^(0+128)
  2119  005C  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2122  005D  2890               	goto	l3900
  2123  005E                     l3894:
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2126  005E  300A               	movlw	10
  2127  005F  00F2               	movwf	___wmul@multiplier
  2128  0060  3000               	movlw	0
  2129  0061  00F3               	movwf	___wmul@multiplier+1
  2130  0062  1683               	bsf	3,5	;RP0=1, select bank1
  2131  0063  1303               	bcf	3,6	;RP1=0, select bank1
  2132  0064  0843               	movf	(sprintf@prec+1)^(0+128),w
  2133  0065  00F5               	movwf	___wmul@multiplicand+1
  2134  0066  0842               	movf	sprintf@prec^(0+128),w
  2135  0067  00F4               	movwf	___wmul@multiplicand
  2136  0068  160A  158A  21CE  120A  118A  	fcall	___wmul
  2137  006D  0873               	movf	?___wmul+1,w
  2138  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2139  006F  1303               	bcf	3,6	;RP1=0, select bank1
  2140  0070  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2141  0071  0872               	movf	?___wmul,w
  2142  0072  00C2               	movwf	sprintf@prec^(0+128)
  2143  0073                     l3896:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2146  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2147  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2148  0075  086A               	movf	sprintf@f,w
  2149  0076  0084               	movwf	4
  2150  0077  160A  118A  200A  120A  118A  	fcall	stringdir
  2151  007C  3ED0               	addlw	208
  2152  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2153  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2154  007F  00A8               	movwf	??_sprintf^(0+128)
  2155  0080  30FF               	movlw	255
  2156  0081  1803               	skipnc
  2157  0082  3000               	movlw	0
  2158  0083  00A9               	movwf	(??_sprintf^(0+128)+1)
  2159  0084  0828               	movf	??_sprintf^(0+128),w
  2160  0085  07C2               	addwf	sprintf@prec^(0+128),f
  2161  0086  1803               	skipnc
  2162  0087  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2163  0088  0829               	movf	(??_sprintf+1)^(0+128),w
  2164  0089  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2165  008A                     l3898:
  2166  008A  3001               	movlw	1
  2167  008B  00A8               	movwf	??_sprintf^(0+128)
  2168  008C  0828               	movf	??_sprintf^(0+128),w
  2169  008D  1283               	bcf	3,5	;RP0=0, select bank0
  2170  008E  1303               	bcf	3,6	;RP1=0, select bank0
  2171  008F  07EA               	addwf	sprintf@f,f
  2172  0090                     l3900:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2175  0090  1283               	bcf	3,5	;RP0=0, select bank0
  2176  0091  086A               	movf	sprintf@f,w
  2177  0092  0084               	movwf	4
  2178  0093  160A  118A  200A  120A  118A  	fcall	stringdir
  2179  0098  160A  158A  2163  120A  118A  	fcall	_isdigit
  2180  009D  1803               	btfsc	3,0
  2181  009E  28A0               	goto	u5881
  2182  009F  28A1               	goto	u5880
  2183  00A0                     u5881:
  2184  00A0  285E               	goto	l3894
  2185  00A1                     u5880:
  2186  00A1  28AA               	goto	l3908
  2187  00A2                     l3902:
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2190  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  2191  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  2192  00A4  01C2               	clrf	sprintf@prec^(0+128)
  2193  00A5  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2194  00A6                     l3904:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2197  00A6  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2198  00A7  28AA               	goto	l3908
  2199  00A8                     l381:	
  2200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2201                           
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2204  00A8  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2207  00A9  28CE               	goto	l3910
  2208  00AA                     l3908:
  2209  00AA  3001               	movlw	1
  2210  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  2211  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  2212  00AD  07EA               	addwf	sprintf@f,f
  2213  00AE  30FF               	movlw	-1
  2214  00AF  076A               	addwf	sprintf@f,w
  2215  00B0  0084               	movwf	4
  2216  00B1  160A  118A  200A  120A  118A  	fcall	stringdir
  2217  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  2218  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  2219  00B8  00C5               	movwf	sprintf@c^(0+128)
  2220  00B9  00A8               	movwf	??_sprintf^(0+128)
  2221  00BA  01A9               	clrf	(??_sprintf^(0+128)+1)
  2222                           
  2223                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2224                           ; Switch size 1, requested type "simple"
  2225                           ; Number of cases is 1, Range of values is 0 to 0
  2226                           ; switch strategies available:
  2227                           ; Name         Instructions Cycles
  2228                           ; simple_byte            4     3 (average)
  2229                           ; direct_byte           11     8 (fixed)
  2230                           ; jumptable            260     6 (fixed)
  2231                           ;	Chosen strategy is simple_byte
  2232  00BB  0829               	movf	(??_sprintf+1)^(0+128),w
  2233  00BC  3A00               	xorlw	0	; case 0
  2234  00BD  1903               	skipnz
  2235  00BE  28C0               	goto	l4208
  2236  00BF  2FB5               	goto	l4102
  2237  00C0                     l4208:
  2238                           
  2239                           ; Switch size 1, requested type "simple"
  2240                           ; Number of cases is 4, Range of values is 0 to 105
  2241                           ; switch strategies available:
  2242                           ; Name         Instructions Cycles
  2243                           ; simple_byte           13     7 (average)
  2244                           ; jumptable            260     6 (fixed)
  2245                           ;	Chosen strategy is simple_byte
  2246  00C0  0828               	movf	??_sprintf^(0+128),w
  2247  00C1  3A00               	xorlw	0	; case 0
  2248  00C2  1903               	skipnz
  2249  00C3  2FCB               	goto	l4104
  2250  00C4  3A64               	xorlw	100	; case 100
  2251  00C5  1903               	skipnz
  2252  00C6  28CE               	goto	l3910
  2253  00C7  3A02               	xorlw	2	; case 102
  2254  00C8  1903               	skipnz
  2255  00C9  28A8               	goto	l381
  2256  00CA  3A0F               	xorlw	15	; case 105
  2257  00CB  1903               	skipnz
  2258  00CC  28CE               	goto	l3910
  2259  00CD  2FB5               	goto	l4102
  2260  00CE                     l3910:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2263  00CE  3000               	movlw	0
  2264  00CF  0532               	andwf	sprintf@flag^(0+128),w
  2265  00D0  00A8               	movwf	??_sprintf^(0+128)
  2266  00D1  3007               	movlw	7
  2267  00D2  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2268  00D3  00A9               	movwf	(??_sprintf+1)^(0+128)
  2269  00D4  0828               	movf	??_sprintf^(0+128),w
  2270  00D5  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2271  00D6  1903               	btfsc	3,2
  2272  00D7  28D9               	goto	u5891
  2273  00D8  28DA               	goto	u5890
  2274  00D9                     u5891:
  2275  00D9  2E8D               	goto	l4052
  2276  00DA                     u5890:
  2277  00DA                     l3912:
  2278                           
  2279                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2280  00DA  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2281  00DB  28DD               	goto	u5901
  2282  00DC  28DE               	goto	u5900
  2283  00DD                     u5901:
  2284  00DD  28E2               	goto	l3916
  2285  00DE                     u5900:
  2286  00DE                     l3914:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2289  00DE  3006               	movlw	6
  2290  00DF  00C2               	movwf	sprintf@prec^(0+128)
  2291  00E0  3000               	movlw	0
  2292  00E1  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2293  00E2                     l3916:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2296  00E2  0831               	movf	sprintf@ap^(0+128),w
  2297  00E3  0084               	movwf	4
  2298  00E4  1383               	bcf	3,7	;select IRP bank0
  2299  00E5  0800               	movf	0,w
  2300  00E6  00BE               	movwf	sprintf@fval^(0+128)
  2301  00E7  0A84               	incf	4,f
  2302  00E8  0800               	movf	0,w
  2303  00E9  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2304  00EA  0A84               	incf	4,f
  2305  00EB  0800               	movf	0,w
  2306  00EC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2307  00ED  0A84               	incf	4,f
  2308  00EE  0800               	movf	0,w
  2309  00EF  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2310  00F0                     l3918:
  2311  00F0  3004               	movlw	4
  2312  00F1  00A8               	movwf	??_sprintf^(0+128)
  2313  00F2  0828               	movf	??_sprintf^(0+128),w
  2314  00F3  07B1               	addwf	sprintf@ap^(0+128),f
  2315  00F4                     l3920:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2318  00F4  0841               	movf	(sprintf@fval+3)^(0+128),w
  2319  00F5  00F5               	movwf	___flge@ff1+3
  2320  00F6  0840               	movf	(sprintf@fval+2)^(0+128),w
  2321  00F7  00F4               	movwf	___flge@ff1+2
  2322  00F8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2323  00F9  00F3               	movwf	___flge@ff1+1
  2324  00FA  083E               	movf	sprintf@fval^(0+128),w
  2325  00FB  00F2               	movwf	___flge@ff1
  2326  00FC  3000               	movlw	0
  2327  00FD  00F9               	movwf	___flge@ff2+3
  2328  00FE  3000               	movlw	0
  2329  00FF  00F8               	movwf	___flge@ff2+2
  2330  0100  3000               	movlw	0
  2331  0101  00F7               	movwf	___flge@ff2+1
  2332  0102  3000               	movlw	0
  2333  0103  00F6               	movwf	___flge@ff2
  2334  0104  160A  118A  20FB  120A  118A  	fcall	___flge
  2335  0109  1803               	btfsc	3,0
  2336  010A  290C               	goto	u5911
  2337  010B  290D               	goto	u5910
  2338  010C                     u5911:
  2339  010C  292A               	goto	l3926
  2340  010D                     u5910:
  2341  010D                     l3922:
  2342                           
  2343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2344  010D  1683               	bsf	3,5	;RP0=1, select bank1
  2345  010E  1303               	bcf	3,6	;RP1=0, select bank1
  2346  010F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2347  0110  00F5               	movwf	___flneg@f1+3
  2348  0111  0840               	movf	(sprintf@fval+2)^(0+128),w
  2349  0112  00F4               	movwf	___flneg@f1+2
  2350  0113  083F               	movf	(sprintf@fval+1)^(0+128),w
  2351  0114  00F3               	movwf	___flneg@f1+1
  2352  0115  083E               	movf	sprintf@fval^(0+128),w
  2353  0116  00F2               	movwf	___flneg@f1
  2354  0117  160A  158A  213C  120A  118A  	fcall	___flneg
  2355  011C  0875               	movf	?___flneg+3,w
  2356  011D  1683               	bsf	3,5	;RP0=1, select bank1
  2357  011E  1303               	bcf	3,6	;RP1=0, select bank1
  2358  011F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2359  0120  0874               	movf	?___flneg+2,w
  2360  0121  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2361  0122  0873               	movf	?___flneg+1,w
  2362  0123  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2363  0124  0872               	movf	?___flneg,w
  2364  0125  00BE               	movwf	sprintf@fval^(0+128)
  2365  0126                     l3924:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2368  0126  3003               	movlw	3
  2369  0127  04B2               	iorwf	sprintf@flag^(0+128),f
  2370  0128  3000               	movlw	0
  2371  0129  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2372  012A                     l3926:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2375  012A  1683               	bsf	3,5	;RP0=1, select bank1
  2376  012B  1303               	bcf	3,6	;RP1=0, select bank1
  2377  012C  01B4               	clrf	sprintf@eexp^(0+128)
  2378  012D  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  2379  012E                     l3928:
  2380                           
  2381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2382  012E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2383  012F  00F5               	movwf	___fleq@ff1+3
  2384  0130  0840               	movf	(sprintf@fval+2)^(0+128),w
  2385  0131  00F4               	movwf	___fleq@ff1+2
  2386  0132  083F               	movf	(sprintf@fval+1)^(0+128),w
  2387  0133  00F3               	movwf	___fleq@ff1+1
  2388  0134  083E               	movf	sprintf@fval^(0+128),w
  2389  0135  00F2               	movwf	___fleq@ff1
  2390  0136  3000               	movlw	0
  2391  0137  00F9               	movwf	___fleq@ff2+3
  2392  0138  3000               	movlw	0
  2393  0139  00F8               	movwf	___fleq@ff2+2
  2394  013A  3000               	movlw	0
  2395  013B  00F7               	movwf	___fleq@ff2+1
  2396  013C  3000               	movlw	0
  2397  013D  00F6               	movwf	___fleq@ff2
  2398  013E  160A  158A  23EB  120A  118A  	fcall	___fleq
  2399  0143  1803               	btfsc	3,0
  2400  0144  2946               	goto	u5921
  2401  0145  2947               	goto	u5920
  2402  0146                     u5921:
  2403  0146  2A47               	goto	l3954
  2404  0147                     u5920:
  2405  0147                     l3930:
  2406                           
  2407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2408  0147  1003               	clrc
  2409  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2411  014A  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2412  014B  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2413  014C  3E82               	addlw	130
  2414  014D  00B4               	movwf	sprintf@eexp^(0+128)
  2415  014E  30FF               	movlw	255
  2416  014F  1803               	skipnc
  2417  0150  3000               	movlw	0
  2418  0151  00B5               	movwf	(sprintf@eexp^(0+128)+1)
  2419  0152                     l3932:
  2420                           
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2422  0152  30FF               	movlw	255
  2423  0153  07B4               	addwf	sprintf@eexp^(0+128),f
  2424  0154  1803               	skipnc
  2425  0155  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2426  0156  30FF               	movlw	255
  2427  0157  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2428  0158                     l3934:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2431  0158  3003               	movlw	3
  2432  0159  00F2               	movwf	___wmul@multiplier
  2433  015A  3000               	movlw	0
  2434  015B  00F3               	movwf	___wmul@multiplier+1
  2435  015C  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2436  015D  00F5               	movwf	___wmul@multiplicand+1
  2437  015E  0834               	movf	sprintf@eexp^(0+128),w
  2438  015F  00F4               	movwf	___wmul@multiplicand
  2439  0160  160A  158A  21CE  120A  118A  	fcall	___wmul
  2440  0165  0873               	movf	?___wmul+1,w
  2441  0166  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0167  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0168  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2444  0169  0872               	movf	?___wmul,w
  2445  016A  00B4               	movwf	sprintf@eexp^(0+128)
  2446  016B                     l3936:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2449  016B  300A               	movlw	10
  2450  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2451  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2452  016E  00A0               	movwf	___awdiv@divisor
  2453  016F  3000               	movlw	0
  2454  0170  00A1               	movwf	___awdiv@divisor+1
  2455  0171  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0172  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0173  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2458  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0176  00A3               	movwf	___awdiv@dividend+1
  2461  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0179  0834               	movf	sprintf@eexp^(0+128),w
  2464  017A  1283               	bcf	3,5	;RP0=0, select bank0
  2465  017B  1303               	bcf	3,6	;RP1=0, select bank0
  2466  017C  00A2               	movwf	___awdiv@dividend
  2467  017D  160A  158A  25A2  120A  118A  	fcall	___awdiv
  2468  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2469  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2470  0184  0821               	movf	?___awdiv+1,w
  2471  0185  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0186  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0187  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2474  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2476  018A  0820               	movf	?___awdiv,w
  2477  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2478  018C  1303               	bcf	3,6	;RP1=0, select bank1
  2479  018D  00B4               	movwf	sprintf@eexp^(0+128)
  2480  018E                     l3938:
  2481                           
  2482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2483  018E  1FB5               	btfss	(sprintf@eexp+1)^(0+128),7
  2484  018F  2991               	goto	u5931
  2485  0190  2992               	goto	u5930
  2486  0191                     u5931:
  2487  0191  2998               	goto	l3942
  2488  0192                     u5930:
  2489  0192                     l3940:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2492  0192  30FF               	movlw	255
  2493  0193  07B4               	addwf	sprintf@eexp^(0+128),f
  2494  0194  1803               	skipnc
  2495  0195  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2496  0196  30FF               	movlw	255
  2497  0197  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2498  0198                     l3942:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2501  0198  0334               	decf	sprintf@eexp^(0+128),w
  2502  0199  3AFF               	xorlw	255
  2503  019A  120A  158A  249D  120A  118A  	fcall	_scale
  2504  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2505  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2506  01A1  0845               	movf	?_scale+3,w
  2507  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  2508  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  2509  01A4  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2510  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2511  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2512  01A7  0844               	movf	?_scale+2,w
  2513  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2514  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2515  01AA  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2516  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2517  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2518  01AD  0843               	movf	?_scale+1,w
  2519  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2520  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2521  01B0  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2522  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2523  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  2524  01B3  0842               	movf	?_scale,w
  2525  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2526  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2527  01B6  00B6               	movwf	sprintf@tmpval^(0+128)
  2528  01B7                     l3944:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2531  01B7  0841               	movf	(sprintf@fval+3)^(0+128),w
  2532  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2533  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2534  01BA  00AB               	movwf	___flmul@b+3
  2535  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2536  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2537  01BD  0840               	movf	(sprintf@fval+2)^(0+128),w
  2538  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2539  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2540  01C0  00AA               	movwf	___flmul@b+2
  2541  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2542  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2543  01C3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2544  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2545  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2546  01C6  00A9               	movwf	___flmul@b+1
  2547  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2548  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2549  01C9  083E               	movf	sprintf@fval^(0+128),w
  2550  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2551  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2552  01CC  00A8               	movwf	___flmul@b
  2553  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2554  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2555  01CF  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2556  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2557  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2558  01D2  00AF               	movwf	___flmul@a+3
  2559  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2560  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2561  01D5  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2562  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2563  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2564  01D8  00AE               	movwf	___flmul@a+2
  2565  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2566  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2567  01DB  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2568  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2569  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2570  01DE  00AD               	movwf	___flmul@a+1
  2571  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  2572  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  2573  01E1  0836               	movf	sprintf@tmpval^(0+128),w
  2574  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2575  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2576  01E4  00AC               	movwf	___flmul@a
  2577  01E5  120A  158A  213C  120A  118A  	fcall	___flmul
  2578  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2579  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2580  01EC  082B               	movf	?___flmul+3,w
  2581  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2582  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2583  01EF  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2584  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2585  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2586  01F2  082A               	movf	?___flmul+2,w
  2587  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2588  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2589  01F5  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2590  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2591  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2592  01F8  0829               	movf	?___flmul+1,w
  2593  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2594  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2595  01FB  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2596  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2597  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2598  01FE  0828               	movf	?___flmul,w
  2599  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2600  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2601  0201  00B6               	movwf	sprintf@tmpval^(0+128)
  2602  0202                     l3946:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2605  0202  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2606  0203  00F5               	movwf	___flge@ff1+3
  2607  0204  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2608  0205  00F4               	movwf	___flge@ff1+2
  2609  0206  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2610  0207  00F3               	movwf	___flge@ff1+1
  2611  0208  0836               	movf	sprintf@tmpval^(0+128),w
  2612  0209  00F2               	movwf	___flge@ff1
  2613  020A  303F               	movlw	63
  2614  020B  00F9               	movwf	___flge@ff2+3
  2615  020C  3080               	movlw	128
  2616  020D  00F8               	movwf	___flge@ff2+2
  2617  020E  3000               	movlw	0
  2618  020F  00F7               	movwf	___flge@ff2+1
  2619  0210  3000               	movlw	0
  2620  0211  00F6               	movwf	___flge@ff2
  2621  0212  160A  118A  20FB  120A  118A  	fcall	___flge
  2622  0217  1803               	btfsc	3,0
  2623  0218  2A1A               	goto	u5941
  2624  0219  2A1B               	goto	u5940
  2625  021A                     u5941:
  2626  021A  2A24               	goto	l3950
  2627  021B                     u5940:
  2628  021B                     l3948:
  2629                           
  2630                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2631  021B  30FF               	movlw	255
  2632  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2633  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2634  021E  07B4               	addwf	sprintf@eexp^(0+128),f
  2635  021F  1803               	skipnc
  2636  0220  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2637  0221  30FF               	movlw	255
  2638  0222  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2639  0223  2A47               	goto	l3954
  2640  0224                     l3950:
  2641  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0226  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2644  0227  00F5               	movwf	___flge@ff1+3
  2645  0228  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2646  0229  00F4               	movwf	___flge@ff1+2
  2647  022A  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2648  022B  00F3               	movwf	___flge@ff1+1
  2649  022C  0836               	movf	sprintf@tmpval^(0+128),w
  2650  022D  00F2               	movwf	___flge@ff1
  2651  022E  3041               	movlw	65
  2652  022F  00F9               	movwf	___flge@ff2+3
  2653  0230  3020               	movlw	32
  2654  0231  00F8               	movwf	___flge@ff2+2
  2655  0232  3000               	movlw	0
  2656  0233  00F7               	movwf	___flge@ff2+1
  2657  0234  3000               	movlw	0
  2658  0235  00F6               	movwf	___flge@ff2
  2659  0236  160A  118A  20FB  120A  118A  	fcall	___flge
  2660  023B  1C03               	btfss	3,0
  2661  023C  2A3E               	goto	u5951
  2662  023D  2A3F               	goto	u5950
  2663  023E                     u5951:
  2664  023E  2A47               	goto	l3954
  2665  023F                     u5950:
  2666  023F                     l3952:
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2669  023F  3001               	movlw	1
  2670  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0242  07B4               	addwf	sprintf@eexp^(0+128),f
  2673  0243  1803               	skipnc
  2674  0244  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2675  0245  3000               	movlw	0
  2676  0246  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2677  0247                     l3954:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2680  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2681  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2682  0249  0843               	movf	(sprintf@prec+1)^(0+128),w
  2683  024A  3A80               	xorlw	128
  2684  024B  00FF               	movwf	btemp+1
  2685  024C  3080               	movlw	128
  2686  024D  027F               	subwf	btemp+1,w
  2687  024E  1D03               	skipz
  2688  024F  2A52               	goto	u5965
  2689  0250  300D               	movlw	13
  2690  0251  0242               	subwf	sprintf@prec^(0+128),w
  2691  0252                     u5965:
  2692  0252  1803               	skipnc
  2693  0253  2A55               	goto	u5961
  2694  0254  2A56               	goto	u5960
  2695  0255                     u5961:
  2696  0255  2A9D               	goto	l3958
  2697  0256                     u5960:
  2698  0256                     l3956:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2701  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2702  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2703  0258  0842               	movf	sprintf@prec^(0+128),w
  2704  0259  160A  118A  236B  120A  118A  	fcall	_fround
  2705  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2706  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0260  0845               	movf	?_fround+3,w
  2708  0261  00D9               	movwf	___fladd@b+3
  2709  0262  0844               	movf	?_fround+2,w
  2710  0263  00D8               	movwf	___fladd@b+2
  2711  0264  0843               	movf	?_fround+1,w
  2712  0265  00D7               	movwf	___fladd@b+1
  2713  0266  0842               	movf	?_fround,w
  2714  0267  00D6               	movwf	___fladd@b
  2715  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2717  026A  0841               	movf	(sprintf@fval+3)^(0+128),w
  2718  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2719  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2720  026D  00DD               	movwf	___fladd@a+3
  2721  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2722  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0270  0840               	movf	(sprintf@fval+2)^(0+128),w
  2724  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0273  00DC               	movwf	___fladd@a+2
  2727  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0276  083F               	movf	(sprintf@fval+1)^(0+128),w
  2730  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0279  00DB               	movwf	___fladd@a+1
  2733  027A  1683               	bsf	3,5	;RP0=1, select bank1
  2734  027B  1303               	bcf	3,6	;RP1=0, select bank1
  2735  027C  083E               	movf	sprintf@fval^(0+128),w
  2736  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2737  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2738  027F  00DA               	movwf	___fladd@a
  2739  0280  160A  118A  2578  120A  118A  	fcall	___fladd
  2740  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0287  0859               	movf	?___fladd+3,w
  2743  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2745  028A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2746  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2747  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2748  028D  0858               	movf	?___fladd+2,w
  2749  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2750  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2751  0290  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2752  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0293  0857               	movf	?___fladd+1,w
  2755  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2756  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2757  0296  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2758  0297  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0298  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0299  0856               	movf	?___fladd,w
  2761  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2762  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2763  029C  00BE               	movwf	sprintf@fval^(0+128)
  2764  029D                     l3958:
  2765                           
  2766                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2767  029D  1683               	bsf	3,5	;RP0=1, select bank1
  2768  029E  1303               	bcf	3,6	;RP1=0, select bank1
  2769  029F  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2770  02A0  3A80               	xorlw	128
  2771  02A1  00FF               	movwf	btemp+1
  2772  02A2  3080               	movlw	128
  2773  02A3  027F               	subwf	btemp+1,w
  2774  02A4  1D03               	skipz
  2775  02A5  2AA8               	goto	u5975
  2776  02A6  300A               	movlw	10
  2777  02A7  0234               	subwf	sprintf@eexp^(0+128),w
  2778  02A8                     u5975:
  2779  02A8  1803               	skipnc
  2780  02A9  2AAB               	goto	u5971
  2781  02AA  2AAC               	goto	u5970
  2782  02AB                     u5971:
  2783  02AB  2AFD               	goto	l3966
  2784  02AC                     u5970:
  2785  02AC                     l3960:
  2786  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  2787  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  2788  02AE  0841               	movf	(sprintf@fval+3)^(0+128),w
  2789  02AF  00F5               	movwf	___fleq@ff1+3
  2790  02B0  0840               	movf	(sprintf@fval+2)^(0+128),w
  2791  02B1  00F4               	movwf	___fleq@ff1+2
  2792  02B2  083F               	movf	(sprintf@fval+1)^(0+128),w
  2793  02B3  00F3               	movwf	___fleq@ff1+1
  2794  02B4  083E               	movf	sprintf@fval^(0+128),w
  2795  02B5  00F2               	movwf	___fleq@ff1
  2796  02B6  3000               	movlw	0
  2797  02B7  00F9               	movwf	___fleq@ff2+3
  2798  02B8  3000               	movlw	0
  2799  02B9  00F8               	movwf	___fleq@ff2+2
  2800  02BA  3000               	movlw	0
  2801  02BB  00F7               	movwf	___fleq@ff2+1
  2802  02BC  3000               	movlw	0
  2803  02BD  00F6               	movwf	___fleq@ff2
  2804  02BE  160A  158A  23EB  120A  118A  	fcall	___fleq
  2805  02C3  1803               	btfsc	3,0
  2806  02C4  2AC6               	goto	u5981
  2807  02C5  2AC7               	goto	u5980
  2808  02C6                     u5981:
  2809  02C6  2B6F               	goto	l3980
  2810  02C7                     u5980:
  2811  02C7                     l3962:
  2812  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2813  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2814  02C9  0841               	movf	(sprintf@fval+3)^(0+128),w
  2815  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2816  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2817  02CC  00D8               	movwf	___fltol@f1+3
  2818  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2819  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2820  02CF  0840               	movf	(sprintf@fval+2)^(0+128),w
  2821  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2822  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2823  02D2  00D7               	movwf	___fltol@f1+2
  2824  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2825  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2826  02D5  083F               	movf	(sprintf@fval+1)^(0+128),w
  2827  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2828  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2829  02D8  00D6               	movwf	___fltol@f1+1
  2830  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  2831  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  2832  02DB  083E               	movf	sprintf@fval^(0+128),w
  2833  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2834  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2835  02DE  00D5               	movwf	___fltol@f1
  2836  02DF  160A  158A  260B  120A  118A  	fcall	___fltol
  2837  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2838  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2839  02E6  0858               	movf	?___fltol+3,w
  2840  02E7  0457               	iorwf	?___fltol+2,w
  2841  02E8  0456               	iorwf	?___fltol+1,w
  2842  02E9  0455               	iorwf	?___fltol,w
  2843  02EA  1D03               	skipz
  2844  02EB  2AED               	goto	u5991
  2845  02EC  2AEE               	goto	u5990
  2846  02ED                     u5991:
  2847  02ED  2B6F               	goto	l3980
  2848  02EE                     u5990:
  2849  02EE                     l3964:
  2850  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  2851  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  2852  02F0  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2853  02F1  3A80               	xorlw	128
  2854  02F2  00FF               	movwf	btemp+1
  2855  02F3  3080               	movlw	128
  2856  02F4  027F               	subwf	btemp+1,w
  2857  02F5  1D03               	skipz
  2858  02F6  2AF9               	goto	u6005
  2859  02F7  3002               	movlw	2
  2860  02F8  0234               	subwf	sprintf@eexp^(0+128),w
  2861  02F9                     u6005:
  2862  02F9  1C03               	skipc
  2863  02FA  2AFC               	goto	u6001
  2864  02FB  2AFD               	goto	u6000
  2865  02FC                     u6001:
  2866  02FC  2B6F               	goto	l3980
  2867  02FD                     u6000:
  2868  02FD                     l3966:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2871  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  2872  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  2873  02FF  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2874  0300  00F5               	movwf	___flge@ff1+3
  2875  0301  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2876  0302  00F4               	movwf	___flge@ff1+2
  2877  0303  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2878  0304  00F3               	movwf	___flge@ff1+1
  2879  0305  0836               	movf	sprintf@tmpval^(0+128),w
  2880  0306  00F2               	movwf	___flge@ff1
  2881  0307  3040               	movlw	64
  2882  0308  00F9               	movwf	___flge@ff2+3
  2883  0309  3089               	movlw	137
  2884  030A  00F8               	movwf	___flge@ff2+2
  2885  030B  3070               	movlw	112
  2886  030C  00F7               	movwf	___flge@ff2+1
  2887  030D  305F               	movlw	95
  2888  030E  00F6               	movwf	___flge@ff2
  2889  030F  160A  118A  20FB  120A  118A  	fcall	___flge
  2890  0314  1803               	btfsc	3,0
  2891  0315  2B17               	goto	u6011
  2892  0316  2B18               	goto	u6010
  2893  0317                     u6011:
  2894  0317  2B21               	goto	l3970
  2895  0318                     u6010:
  2896  0318                     l3968:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2899  0318  30F7               	movlw	247
  2900  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2901  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2902  031B  07B4               	addwf	sprintf@eexp^(0+128),f
  2903  031C  1803               	skipnc
  2904  031D  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2905  031E  30FF               	movlw	255
  2906  031F  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2909  0320  2B29               	goto	l3972
  2910  0321                     l3970:
  2911                           
  2912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2913  0321  30F8               	movlw	248
  2914  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2915  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2916  0324  07B4               	addwf	sprintf@eexp^(0+128),f
  2917  0325  1803               	skipnc
  2918  0326  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2919  0327  30FF               	movlw	255
  2920  0328  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2921  0329                     l3972:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2924  0329  0834               	movf	sprintf@eexp^(0+128),w
  2925  032A  120A  158A  249D  120A  118A  	fcall	_scale
  2926  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0331  0845               	movf	?_scale+3,w
  2929  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2930  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2931  0334  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2932  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0337  0844               	movf	?_scale+2,w
  2935  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2937  033A  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2938  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2939  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2940  033D  0843               	movf	?_scale+1,w
  2941  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2942  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0340  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2944  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0343  0842               	movf	?_scale,w
  2947  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2948  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2949  0346  00B6               	movwf	sprintf@tmpval^(0+128)
  2950  0347                     l3974:
  2951  0347  0841               	movf	(sprintf@fval+3)^(0+128),w
  2952  0348  00F5               	movwf	__div_to_l_@f1+3
  2953  0349  0840               	movf	(sprintf@fval+2)^(0+128),w
  2954  034A  00F4               	movwf	__div_to_l_@f1+2
  2955  034B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2956  034C  00F3               	movwf	__div_to_l_@f1+1
  2957  034D  083E               	movf	sprintf@fval^(0+128),w
  2958  034E  00F2               	movwf	__div_to_l_@f1
  2959  034F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2960  0350  00F9               	movwf	__div_to_l_@f2+3
  2961  0351  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2962  0352  00F8               	movwf	__div_to_l_@f2+2
  2963  0353  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2964  0354  00F7               	movwf	__div_to_l_@f2+1
  2965  0355  0836               	movf	sprintf@tmpval^(0+128),w
  2966  0356  00F6               	movwf	__div_to_l_@f2
  2967  0357  160A  118A  219F  120A  118A  	fcall	__div_to_l_
  2968  035C  0875               	movf	?__div_to_l_+3,w
  2969  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2970  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2971  035F  00BD               	movwf	(sprintf@val+3)^(0+128)
  2972  0360  0874               	movf	?__div_to_l_+2,w
  2973  0361  00BC               	movwf	(sprintf@val+2)^(0+128)
  2974  0362  0873               	movf	?__div_to_l_+1,w
  2975  0363  00BB               	movwf	(sprintf@val+1)^(0+128)
  2976  0364  0872               	movf	?__div_to_l_,w
  2977  0365  00BA               	movwf	sprintf@val^(0+128)
  2978  0366                     l3978:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2981  0366  3000               	movlw	0
  2982  0367  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2983  0368  3000               	movlw	0
  2984  0369  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2985  036A  3000               	movlw	0
  2986  036B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2987  036C  3000               	movlw	0
  2988  036D  00BE               	movwf	sprintf@fval^(0+128)
  2989                           
  2990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2991  036E  2BD5               	goto	l3986
  2992  036F                     l3980:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2995  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2996  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2997  0371  0841               	movf	(sprintf@fval+3)^(0+128),w
  2998  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2999  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3000  0374  00D8               	movwf	___fltol@f1+3
  3001  0375  1683               	bsf	3,5	;RP0=1, select bank1
  3002  0376  1303               	bcf	3,6	;RP1=0, select bank1
  3003  0377  0840               	movf	(sprintf@fval+2)^(0+128),w
  3004  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3005  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3006  037A  00D7               	movwf	___fltol@f1+2
  3007  037B  1683               	bsf	3,5	;RP0=1, select bank1
  3008  037C  1303               	bcf	3,6	;RP1=0, select bank1
  3009  037D  083F               	movf	(sprintf@fval+1)^(0+128),w
  3010  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3011  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0380  00D6               	movwf	___fltol@f1+1
  3013  0381  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0382  1303               	bcf	3,6	;RP1=0, select bank1
  3015  0383  083E               	movf	sprintf@fval^(0+128),w
  3016  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0386  00D5               	movwf	___fltol@f1
  3019  0387  160A  158A  260B  120A  118A  	fcall	___fltol
  3020  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3021  038D  1303               	bcf	3,6	;RP1=0, select bank0
  3022  038E  0858               	movf	?___fltol+3,w
  3023  038F  1683               	bsf	3,5	;RP0=1, select bank1
  3024  0390  1303               	bcf	3,6	;RP1=0, select bank1
  3025  0391  00BD               	movwf	(sprintf@val+3)^(0+128)
  3026  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0394  0857               	movf	?___fltol+2,w
  3029  0395  1683               	bsf	3,5	;RP0=1, select bank1
  3030  0396  1303               	bcf	3,6	;RP1=0, select bank1
  3031  0397  00BC               	movwf	(sprintf@val+2)^(0+128)
  3032  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0399  1303               	bcf	3,6	;RP1=0, select bank0
  3034  039A  0856               	movf	?___fltol+1,w
  3035  039B  1683               	bsf	3,5	;RP0=1, select bank1
  3036  039C  1303               	bcf	3,6	;RP1=0, select bank1
  3037  039D  00BB               	movwf	(sprintf@val+1)^(0+128)
  3038  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3039  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3040  03A0  0855               	movf	?___fltol,w
  3041  03A1  1683               	bsf	3,5	;RP0=1, select bank1
  3042  03A2  1303               	bcf	3,6	;RP1=0, select bank1
  3043  03A3  00BA               	movwf	sprintf@val^(0+128)
  3044  03A4                     l3982:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3047  03A4  083D               	movf	(sprintf@val+3)^(0+128),w
  3048  03A5  00F5               	movwf	___xxtofl@val+3
  3049  03A6  083C               	movf	(sprintf@val+2)^(0+128),w
  3050  03A7  00F4               	movwf	___xxtofl@val+2
  3051  03A8  083B               	movf	(sprintf@val+1)^(0+128),w
  3052  03A9  00F3               	movwf	___xxtofl@val+1
  3053  03AA  083A               	movf	sprintf@val^(0+128),w
  3054  03AB  00F2               	movwf	___xxtofl@val
  3055  03AC  3000               	movlw	0
  3056  03AD  160A  158A  2687  120A  118A  	fcall	___xxtofl
  3057  03B2  0875               	movf	?___xxtofl+3,w
  3058  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  3059  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  3060  03B5  00A3               	movwf	(___flsub@a+3)^(0+128)
  3061  03B6  0874               	movf	?___xxtofl+2,w
  3062  03B7  00A2               	movwf	(___flsub@a+2)^(0+128)
  3063  03B8  0873               	movf	?___xxtofl+1,w
  3064  03B9  00A1               	movwf	(___flsub@a+1)^(0+128)
  3065  03BA  0872               	movf	?___xxtofl,w
  3066  03BB  00A0               	movwf	___flsub@a^(0+128)
  3067  03BC  0841               	movf	(sprintf@fval+3)^(0+128),w
  3068  03BD  00A7               	movwf	(___flsub@b+3)^(0+128)
  3069  03BE  0840               	movf	(sprintf@fval+2)^(0+128),w
  3070  03BF  00A6               	movwf	(___flsub@b+2)^(0+128)
  3071  03C0  083F               	movf	(sprintf@fval+1)^(0+128),w
  3072  03C1  00A5               	movwf	(___flsub@b+1)^(0+128)
  3073  03C2  083E               	movf	sprintf@fval^(0+128),w
  3074  03C3  00A4               	movwf	___flsub@b^(0+128)
  3075  03C4  160A  158A  243B  120A  118A  	fcall	___flsub
  3076  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3077  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  3078  03CB  0823               	movf	(?___flsub+3)^(0+128),w
  3079  03CC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3080  03CD  0822               	movf	(?___flsub+2)^(0+128),w
  3081  03CE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3082  03CF  0821               	movf	(?___flsub+1)^(0+128),w
  3083  03D0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3084  03D1  0820               	movf	?___flsub^(0+128),w
  3085  03D2  00BE               	movwf	sprintf@fval^(0+128)
  3086  03D3                     l3984:
  3087                           
  3088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3089  03D3  01B4               	clrf	sprintf@eexp^(0+128)
  3090  03D4  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  3091  03D5                     l3986:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3094  03D5  01C5               	clrf	sprintf@c^(0+128)
  3095  03D6  0AC5               	incf	sprintf@c^(0+128),f
  3096  03D7                     l3992:
  3097                           
  3098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3099  03D7  0845               	movf	sprintf@c^(0+128),w
  3100  03D8  00A8               	movwf	??_sprintf^(0+128)
  3101  03D9  3001               	movlw	1
  3102  03DA                     u6025:
  3103  03DA  1003               	clrc
  3104  03DB  0DA8               	rlf	??_sprintf^(0+128),f
  3105  03DC  3EFF               	addlw	-1
  3106  03DD  1D03               	skipz
  3107  03DE  2BDA               	goto	u6025
  3108  03DF  1003               	clrc
  3109  03E0  0D28               	rlf	??_sprintf^(0+128),w
  3110  03E1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3111  03E2  0084               	movwf	4
  3112  03E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3113  03E8  00A9               	movwf	(??_sprintf+1)^(0+128)
  3114  03E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3115  03EE  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3116  03EF  160A  118A  200A  120A  118A  	fcall	stringdir
  3117  03F4  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3118  03F5  160A  118A  200A  120A  118A  	fcall	stringdir
  3119  03FA  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3120  03FB  082C               	movf	(??_sprintf+4)^(0+128),w
  3121  03FC  023D               	subwf	(sprintf@val+3)^(0+128),w
  3122  03FD  1D03               	skipz
  3123  03FE  2C09               	goto	u6035
  3124  03FF  082B               	movf	(??_sprintf+3)^(0+128),w
  3125  0400  023C               	subwf	(sprintf@val+2)^(0+128),w
  3126  0401  1D03               	skipz
  3127  0402  2C09               	goto	u6035
  3128  0403  082A               	movf	(??_sprintf+2)^(0+128),w
  3129  0404  023B               	subwf	(sprintf@val+1)^(0+128),w
  3130  0405  1D03               	skipz
  3131  0406  2C09               	goto	u6035
  3132  0407  0829               	movf	(??_sprintf+1)^(0+128),w
  3133  0408  023A               	subwf	sprintf@val^(0+128),w
  3134  0409                     u6035:
  3135  0409  1803               	skipnc
  3136  040A  2C0C               	goto	u6031
  3137  040B  2C0D               	goto	u6030
  3138  040C                     u6031:
  3139  040C  2C0E               	goto	l3996
  3140  040D                     u6030:
  3141  040D  2C18               	goto	l3998
  3142  040E                     l3996:
  3143  040E  3001               	movlw	1
  3144  040F  00A8               	movwf	??_sprintf^(0+128)
  3145  0410  0828               	movf	??_sprintf^(0+128),w
  3146  0411  07C5               	addwf	sprintf@c^(0+128),f
  3147  0412  300A               	movlw	10
  3148  0413  0645               	xorwf	sprintf@c^(0+128),w
  3149  0414  1D03               	btfss	3,2
  3150  0415  2C17               	goto	u6041
  3151  0416  2C18               	goto	u6040
  3152  0417                     u6041:
  3153  0417  2BD7               	goto	l3992
  3154  0418                     u6040:
  3155  0418                     l3998:
  3156                           
  3157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3158  0418  3003               	movlw	3
  3159  0419  0532               	andwf	sprintf@flag^(0+128),w
  3160  041A  00A8               	movwf	??_sprintf^(0+128)
  3161  041B  3000               	movlw	0
  3162  041C  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3163  041D  00A9               	movwf	(??_sprintf+1)^(0+128)
  3164  041E  0828               	movf	??_sprintf^(0+128),w
  3165  041F  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3166  0420  1903               	btfsc	3,2
  3167  0421  2C23               	goto	u6051
  3168  0422  2C24               	goto	u6050
  3169  0423                     u6051:
  3170  0423  2CB6               	goto	l409
  3171  0424                     u6050:
  3172  0424                     l4000:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3175  0424  302D               	movlw	45
  3176  0425  00A8               	movwf	??_sprintf^(0+128)
  3177  0426  0844               	movf	sprintf@sp^(0+128),w
  3178  0427  0084               	movwf	4
  3179  0428  0828               	movf	??_sprintf^(0+128),w
  3180  0429  1783               	bsf	3,7	;select IRP bank2
  3181  042A  0080               	movwf	0
  3182  042B                     l4002:
  3183  042B  3001               	movlw	1
  3184  042C  00A8               	movwf	??_sprintf^(0+128)
  3185  042D  0828               	movf	??_sprintf^(0+128),w
  3186  042E  07C4               	addwf	sprintf@sp^(0+128),f
  3187  042F  2CB6               	goto	l409
  3188  0430                     l4004:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3191  0430  0845               	movf	sprintf@c^(0+128),w
  3192  0431  00A8               	movwf	??_sprintf^(0+128)
  3193  0432  3001               	movlw	1
  3194  0433                     u6065:
  3195  0433  1003               	clrc
  3196  0434  0DA8               	rlf	??_sprintf^(0+128),f
  3197  0435  3EFF               	addlw	-1
  3198  0436  1D03               	skipz
  3199  0437  2C33               	goto	u6065
  3200  0438  1003               	clrc
  3201  0439  0D28               	rlf	??_sprintf^(0+128),w
  3202  043A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3203  043B  0084               	movwf	4
  3204  043C  160A  118A  200A  120A  118A  	fcall	stringdir
  3205  0441  00F2               	movwf	___lldiv@divisor
  3206  0442  160A  118A  200A  120A  118A  	fcall	stringdir
  3207  0447  00F3               	movwf	___lldiv@divisor+1
  3208  0448  160A  118A  200A  120A  118A  	fcall	stringdir
  3209  044D  00F4               	movwf	___lldiv@divisor+2
  3210  044E  160A  118A  200A  120A  118A  	fcall	stringdir
  3211  0453  00F5               	movwf	___lldiv@divisor+3
  3212  0454  083D               	movf	(sprintf@val+3)^(0+128),w
  3213  0455  00F9               	movwf	___lldiv@dividend+3
  3214  0456  083C               	movf	(sprintf@val+2)^(0+128),w
  3215  0457  00F8               	movwf	___lldiv@dividend+2
  3216  0458  083B               	movf	(sprintf@val+1)^(0+128),w
  3217  0459  00F7               	movwf	___lldiv@dividend+1
  3218  045A  083A               	movf	sprintf@val^(0+128),w
  3219  045B  00F6               	movwf	___lldiv@dividend
  3220  045C  160A  158A  253A  120A  118A  	fcall	___lldiv
  3221  0461  0875               	movf	?___lldiv+3,w
  3222  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0464  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3225  0465  0874               	movf	?___lldiv+2,w
  3226  0466  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3227  0467  0873               	movf	?___lldiv+1,w
  3228  0468  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3229  0469  0872               	movf	?___lldiv,w
  3230  046A  00B6               	movwf	sprintf@tmpval^(0+128)
  3231  046B                     l4006:
  3232                           
  3233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3234  046B  3000               	movlw	0
  3235  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3236  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3237  046E  00A8               	movwf	___llmod@divisor+3
  3238  046F  3000               	movlw	0
  3239  0470  00A7               	movwf	___llmod@divisor+2
  3240  0471  3000               	movlw	0
  3241  0472  00A6               	movwf	___llmod@divisor+1
  3242  0473  300A               	movlw	10
  3243  0474  00A5               	movwf	___llmod@divisor
  3244  0475  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0476  1303               	bcf	3,6	;RP1=0, select bank1
  3246  0477  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  3247  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3249  047A  00AC               	movwf	___llmod@dividend+3
  3250  047B  1683               	bsf	3,5	;RP0=1, select bank1
  3251  047C  1303               	bcf	3,6	;RP1=0, select bank1
  3252  047D  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  3253  047E  1283               	bcf	3,5	;RP0=0, select bank0
  3254  047F  1303               	bcf	3,6	;RP1=0, select bank0
  3255  0480  00AB               	movwf	___llmod@dividend+2
  3256  0481  1683               	bsf	3,5	;RP0=1, select bank1
  3257  0482  1303               	bcf	3,6	;RP1=0, select bank1
  3258  0483  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  3259  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0486  00AA               	movwf	___llmod@dividend+1
  3262  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3263  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3264  0489  0836               	movf	sprintf@tmpval^(0+128),w
  3265  048A  1283               	bcf	3,5	;RP0=0, select bank0
  3266  048B  1303               	bcf	3,6	;RP1=0, select bank0
  3267  048C  00A9               	movwf	___llmod@dividend
  3268  048D  160A  158A  248B  120A  118A  	fcall	___llmod
  3269  0492  1283               	bcf	3,5	;RP0=0, select bank0
  3270  0493  1303               	bcf	3,6	;RP1=0, select bank0
  3271  0494  0828               	movf	?___llmod+3,w
  3272  0495  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0496  1303               	bcf	3,6	;RP1=0, select bank1
  3274  0497  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3275  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3277  049A  0827               	movf	?___llmod+2,w
  3278  049B  1683               	bsf	3,5	;RP0=1, select bank1
  3279  049C  1303               	bcf	3,6	;RP1=0, select bank1
  3280  049D  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3281  049E  1283               	bcf	3,5	;RP0=0, select bank0
  3282  049F  1303               	bcf	3,6	;RP1=0, select bank0
  3283  04A0  0826               	movf	?___llmod+1,w
  3284  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  3285  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  3286  04A3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3287  04A4  1283               	bcf	3,5	;RP0=0, select bank0
  3288  04A5  1303               	bcf	3,6	;RP1=0, select bank0
  3289  04A6  0825               	movf	?___llmod,w
  3290  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  3291  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  3292  04A9  00B6               	movwf	sprintf@tmpval^(0+128)
  3293  04AA                     l4008:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3296  04AA  0836               	movf	sprintf@tmpval^(0+128),w
  3297  04AB  3E30               	addlw	48
  3298  04AC  00A8               	movwf	??_sprintf^(0+128)
  3299  04AD  0844               	movf	sprintf@sp^(0+128),w
  3300  04AE  0084               	movwf	4
  3301  04AF  0828               	movf	??_sprintf^(0+128),w
  3302  04B0  1783               	bsf	3,7	;select IRP bank2
  3303  04B1  0080               	movwf	0
  3304  04B2  3001               	movlw	1
  3305  04B3  00A8               	movwf	??_sprintf^(0+128)
  3306  04B4  0828               	movf	??_sprintf^(0+128),w
  3307  04B5  07C4               	addwf	sprintf@sp^(0+128),f
  3308  04B6                     l409:	
  3309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3310                           
  3311                           
  3312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3313  04B6  3001               	movlw	1
  3314  04B7  02C5               	subwf	sprintf@c^(0+128),f
  3315  04B8  0A45               	incf	sprintf@c^(0+128),w
  3316  04B9  1D03               	btfss	3,2
  3317  04BA  2CBC               	goto	u6071
  3318  04BB  2CBD               	goto	u6070
  3319  04BC                     u6071:
  3320  04BC  2C30               	goto	l4004
  3321  04BD                     u6070:
  3322  04BD  2CD1               	goto	l4016
  3323  04BE                     l4010:
  3324                           
  3325                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3326  04BE  3030               	movlw	48
  3327  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  3328  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  3329  04C1  00A8               	movwf	??_sprintf^(0+128)
  3330  04C2  0844               	movf	sprintf@sp^(0+128),w
  3331  04C3  0084               	movwf	4
  3332  04C4  0828               	movf	??_sprintf^(0+128),w
  3333  04C5  1783               	bsf	3,7	;select IRP bank2
  3334  04C6  0080               	movwf	0
  3335  04C7                     l4012:
  3336  04C7  3001               	movlw	1
  3337  04C8  00A8               	movwf	??_sprintf^(0+128)
  3338  04C9  0828               	movf	??_sprintf^(0+128),w
  3339  04CA  07C4               	addwf	sprintf@sp^(0+128),f
  3340  04CB                     l4014:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3343  04CB  30FF               	movlw	255
  3344  04CC  07B4               	addwf	sprintf@eexp^(0+128),f
  3345  04CD  1803               	skipnc
  3346  04CE  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  3347  04CF  30FF               	movlw	255
  3348  04D0  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  3349  04D1                     l4016:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3352  04D1  0835               	movf	(sprintf@eexp+1)^(0+128),w
  3353  04D2  3A80               	xorlw	128
  3354  04D3  00FF               	movwf	btemp+1
  3355  04D4  3080               	movlw	128
  3356  04D5  027F               	subwf	btemp+1,w
  3357  04D6  1D03               	skipz
  3358  04D7  2CDA               	goto	u6085
  3359  04D8  3001               	movlw	1
  3360  04D9  0234               	subwf	sprintf@eexp^(0+128),w
  3361  04DA                     u6085:
  3362  04DA  1803               	skipnc
  3363  04DB  2CDD               	goto	u6081
  3364  04DC  2CDE               	goto	u6080
  3365  04DD                     u6081:
  3366  04DD  2CBE               	goto	l4010
  3367  04DE                     u6080:
  3368  04DE                     l4018:
  3369                           
  3370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3371  04DE  1683               	bsf	3,5	;RP0=1, select bank1
  3372  04DF  1303               	bcf	3,6	;RP1=0, select bank1
  3373  04E0  0843               	movf	(sprintf@prec+1)^(0+128),w
  3374  04E1  3A80               	xorlw	128
  3375  04E2  00FF               	movwf	btemp+1
  3376  04E3  3080               	movlw	128
  3377  04E4  027F               	subwf	btemp+1,w
  3378  04E5  1D03               	skipz
  3379  04E6  2CE9               	goto	u6095
  3380  04E7  3009               	movlw	9
  3381  04E8  0242               	subwf	sprintf@prec^(0+128),w
  3382  04E9                     u6095:
  3383  04E9  1C03               	skipc
  3384  04EA  2CEC               	goto	u6091
  3385  04EB  2CED               	goto	u6090
  3386  04EC                     u6091:
  3387  04EC  2CF4               	goto	l4022
  3388  04ED                     u6090:
  3389  04ED                     l4020:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3392  04ED  3008               	movlw	8
  3393  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3394  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3395  04F0  00A8               	movwf	??_sprintf^(0+128)
  3396  04F1  0828               	movf	??_sprintf^(0+128),w
  3397  04F2  00C5               	movwf	sprintf@c^(0+128)
  3398  04F3  2CFA               	goto	l416
  3399  04F4                     l4022:
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3402  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  3403  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  3404  04F6  0842               	movf	sprintf@prec^(0+128),w
  3405  04F7  00A8               	movwf	??_sprintf^(0+128)
  3406  04F8  0828               	movf	??_sprintf^(0+128),w
  3407  04F9  00C5               	movwf	sprintf@c^(0+128)
  3408  04FA                     l416:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3411  04FA  0845               	movf	sprintf@c^(0+128),w
  3412  04FB  00A8               	movwf	??_sprintf^(0+128)
  3413  04FC  01A9               	clrf	(??_sprintf^(0+128)+1)
  3414  04FD  0828               	movf	??_sprintf^(0+128),w
  3415  04FE  02C2               	subwf	sprintf@prec^(0+128),f
  3416  04FF  0829               	movf	(??_sprintf+1)^(0+128),w
  3417  0500  1C03               	skipc
  3418  0501  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3419  0502  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3420  0503                     l4024:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3423  0503  0845               	movf	sprintf@c^(0+128),w
  3424  0504  1903               	btfsc	3,2
  3425  0505  2D07               	goto	u6101
  3426  0506  2D08               	goto	u6100
  3427  0507                     u6101:
  3428  0507  2D13               	goto	l4030
  3429  0508                     u6100:
  3430  0508                     l4026:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3433  0508  302E               	movlw	46
  3434  0509  00A8               	movwf	??_sprintf^(0+128)
  3435  050A  0844               	movf	sprintf@sp^(0+128),w
  3436  050B  0084               	movwf	4
  3437  050C  0828               	movf	??_sprintf^(0+128),w
  3438  050D  1783               	bsf	3,7	;select IRP bank2
  3439  050E  0080               	movwf	0
  3440  050F                     l4028:
  3441  050F  3001               	movlw	1
  3442  0510  00A8               	movwf	??_sprintf^(0+128)
  3443  0511  0828               	movf	??_sprintf^(0+128),w
  3444  0512  07C4               	addwf	sprintf@sp^(0+128),f
  3445  0513                     l4030:
  3446                           
  3447                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3448  0513  0845               	movf	sprintf@c^(0+128),w
  3449  0514  120A  158A  249D  120A  118A  	fcall	_scale
  3450  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3451  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3452  051B  0845               	movf	?_scale+3,w
  3453  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3454  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3455  051E  00B0               	movwf	(_sprintf$1283+3)^(0+128)
  3456  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3457  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3458  0521  0844               	movf	?_scale+2,w
  3459  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0524  00AF               	movwf	(_sprintf$1283+2)^(0+128)
  3462  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0527  0843               	movf	?_scale+1,w
  3465  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3466  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3467  052A  00AE               	movwf	(_sprintf$1283+1)^(0+128)
  3468  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3469  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3470  052D  0842               	movf	?_scale,w
  3471  052E  1683               	bsf	3,5	;RP0=1, select bank1
  3472  052F  1303               	bcf	3,6	;RP1=0, select bank1
  3473  0530  00AD               	movwf	_sprintf$1283^(0+128)
  3474  0531                     l4032:
  3475                           
  3476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3477  0531  0830               	movf	(_sprintf$1283+3)^(0+128),w
  3478  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3479  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3480  0534  00AF               	movwf	___flmul@a+3
  3481  0535  1683               	bsf	3,5	;RP0=1, select bank1
  3482  0536  1303               	bcf	3,6	;RP1=0, select bank1
  3483  0537  082F               	movf	(_sprintf$1283+2)^(0+128),w
  3484  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3485  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3486  053A  00AE               	movwf	___flmul@a+2
  3487  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3488  053C  1303               	bcf	3,6	;RP1=0, select bank1
  3489  053D  082E               	movf	(_sprintf$1283+1)^(0+128),w
  3490  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3491  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0540  00AD               	movwf	___flmul@a+1
  3493  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3494  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3495  0543  082D               	movf	_sprintf$1283^(0+128),w
  3496  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3497  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3498  0546  00AC               	movwf	___flmul@a
  3499  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3500  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3501  0549  0841               	movf	(sprintf@fval+3)^(0+128),w
  3502  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3503  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3504  054C  00AB               	movwf	___flmul@b+3
  3505  054D  1683               	bsf	3,5	;RP0=1, select bank1
  3506  054E  1303               	bcf	3,6	;RP1=0, select bank1
  3507  054F  0840               	movf	(sprintf@fval+2)^(0+128),w
  3508  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0552  00AA               	movwf	___flmul@b+2
  3511  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0555  083F               	movf	(sprintf@fval+1)^(0+128),w
  3514  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0558  00A9               	movwf	___flmul@b+1
  3517  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3518  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3519  055B  083E               	movf	sprintf@fval^(0+128),w
  3520  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3521  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3522  055E  00A8               	movwf	___flmul@b
  3523  055F  120A  158A  213C  120A  118A  	fcall	___flmul
  3524  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0566  082B               	movf	?___flmul+3,w
  3527  0567  00D8               	movwf	___fltol@f1+3
  3528  0568  082A               	movf	?___flmul+2,w
  3529  0569  00D7               	movwf	___fltol@f1+2
  3530  056A  0829               	movf	?___flmul+1,w
  3531  056B  00D6               	movwf	___fltol@f1+1
  3532  056C  0828               	movf	?___flmul,w
  3533  056D  00D5               	movwf	___fltol@f1
  3534  056E  160A  158A  260B  120A  118A  	fcall	___fltol
  3535  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0575  0858               	movf	?___fltol+3,w
  3538  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3540  0578  00BD               	movwf	(sprintf@val+3)^(0+128)
  3541  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3542  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3543  057B  0857               	movf	?___fltol+2,w
  3544  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3545  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3546  057E  00BC               	movwf	(sprintf@val+2)^(0+128)
  3547  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3548  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3549  0581  0856               	movf	?___fltol+1,w
  3550  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3551  0583  1303               	bcf	3,6	;RP1=0, select bank1
  3552  0584  00BB               	movwf	(sprintf@val+1)^(0+128)
  3553  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0586  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0587  0855               	movf	?___fltol,w
  3556  0588  1683               	bsf	3,5	;RP0=1, select bank1
  3557  0589  1303               	bcf	3,6	;RP1=0, select bank1
  3558  058A  00BA               	movwf	sprintf@val^(0+128)
  3559                           
  3560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3561  058B  2E6D               	goto	l4042
  3562  058C                     l4034:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3565  058C  0845               	movf	sprintf@c^(0+128),w
  3566  058D  00A8               	movwf	??_sprintf^(0+128)
  3567  058E  3001               	movlw	1
  3568  058F                     u6115:
  3569  058F  1003               	clrc
  3570  0590  0DA8               	rlf	??_sprintf^(0+128),f
  3571  0591  3EFF               	addlw	-1
  3572  0592  1D03               	skipz
  3573  0593  2D8F               	goto	u6115
  3574  0594  1003               	clrc
  3575  0595  0D28               	rlf	??_sprintf^(0+128),w
  3576  0596  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3577  0597  0084               	movwf	4
  3578  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  3579  059D  00F2               	movwf	___lldiv@divisor
  3580  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  3581  05A3  00F3               	movwf	___lldiv@divisor+1
  3582  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  3583  05A9  00F4               	movwf	___lldiv@divisor+2
  3584  05AA  160A  118A  200A  120A  118A  	fcall	stringdir
  3585  05AF  00F5               	movwf	___lldiv@divisor+3
  3586  05B0  083D               	movf	(sprintf@val+3)^(0+128),w
  3587  05B1  00F9               	movwf	___lldiv@dividend+3
  3588  05B2  083C               	movf	(sprintf@val+2)^(0+128),w
  3589  05B3  00F8               	movwf	___lldiv@dividend+2
  3590  05B4  083B               	movf	(sprintf@val+1)^(0+128),w
  3591  05B5  00F7               	movwf	___lldiv@dividend+1
  3592  05B6  083A               	movf	sprintf@val^(0+128),w
  3593  05B7  00F6               	movwf	___lldiv@dividend
  3594  05B8  160A  158A  253A  120A  118A  	fcall	___lldiv
  3595  05BD  0875               	movf	?___lldiv+3,w
  3596  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  3597  05BF  1303               	bcf	3,6	;RP1=0, select bank1
  3598  05C0  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3599  05C1  0874               	movf	?___lldiv+2,w
  3600  05C2  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3601  05C3  0873               	movf	?___lldiv+1,w
  3602  05C4  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3603  05C5  0872               	movf	?___lldiv,w
  3604  05C6  00B6               	movwf	sprintf@tmpval^(0+128)
  3605  05C7                     l4036:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3608  05C7  3000               	movlw	0
  3609  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3610  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3611  05CA  00A8               	movwf	___llmod@divisor+3
  3612  05CB  3000               	movlw	0
  3613  05CC  00A7               	movwf	___llmod@divisor+2
  3614  05CD  3000               	movlw	0
  3615  05CE  00A6               	movwf	___llmod@divisor+1
  3616  05CF  300A               	movlw	10
  3617  05D0  00A5               	movwf	___llmod@divisor
  3618  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3619  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3620  05D3  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  3621  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3622  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3623  05D6  00AC               	movwf	___llmod@dividend+3
  3624  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3625  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3626  05D9  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  3627  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3628  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3629  05DC  00AB               	movwf	___llmod@dividend+2
  3630  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  3631  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  3632  05DF  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  3633  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3634  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3635  05E2  00AA               	movwf	___llmod@dividend+1
  3636  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  3637  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  3638  05E5  0836               	movf	sprintf@tmpval^(0+128),w
  3639  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3640  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3641  05E8  00A9               	movwf	___llmod@dividend
  3642  05E9  160A  158A  248B  120A  118A  	fcall	___llmod
  3643  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3644  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3645  05F0  0828               	movf	?___llmod+3,w
  3646  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3647  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3648  05F3  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3649  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3650  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3651  05F6  0827               	movf	?___llmod+2,w
  3652  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3653  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3654  05F9  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3655  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3656  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3657  05FC  0826               	movf	?___llmod+1,w
  3658  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3659  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3660  05FF  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3661  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3662  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0602  0825               	movf	?___llmod,w
  3664  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3665  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3666  0605  00B6               	movwf	sprintf@tmpval^(0+128)
  3667  0606                     l4038:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3670  0606  0836               	movf	sprintf@tmpval^(0+128),w
  3671  0607  3E30               	addlw	48
  3672  0608  00A8               	movwf	??_sprintf^(0+128)
  3673  0609  0844               	movf	sprintf@sp^(0+128),w
  3674  060A  0084               	movwf	4
  3675  060B  0828               	movf	??_sprintf^(0+128),w
  3676  060C  1783               	bsf	3,7	;select IRP bank2
  3677  060D  0080               	movwf	0
  3678  060E  3001               	movlw	1
  3679  060F  00A8               	movwf	??_sprintf^(0+128)
  3680  0610  0828               	movf	??_sprintf^(0+128),w
  3681  0611  07C4               	addwf	sprintf@sp^(0+128),f
  3682  0612                     l4040:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3685  0612  0845               	movf	sprintf@c^(0+128),w
  3686  0613  00A8               	movwf	??_sprintf^(0+128)
  3687  0614  3001               	movlw	1
  3688  0615                     u6125:
  3689  0615  1003               	clrc
  3690  0616  0DA8               	rlf	??_sprintf^(0+128),f
  3691  0617  3EFF               	addlw	-1
  3692  0618  1D03               	skipz
  3693  0619  2E15               	goto	u6125
  3694  061A  1003               	clrc
  3695  061B  0D28               	rlf	??_sprintf^(0+128),w
  3696  061C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3697  061D  0084               	movwf	4
  3698  061E  160A  118A  200A  120A  118A  	fcall	stringdir
  3699  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0625  00A5               	movwf	___llmod@divisor
  3702  0626  160A  118A  200A  120A  118A  	fcall	stringdir
  3703  062B  00A6               	movwf	___llmod@divisor+1
  3704  062C  160A  118A  200A  120A  118A  	fcall	stringdir
  3705  0631  00A7               	movwf	___llmod@divisor+2
  3706  0632  160A  118A  200A  120A  118A  	fcall	stringdir
  3707  0637  00A8               	movwf	___llmod@divisor+3
  3708  0638  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0639  1303               	bcf	3,6	;RP1=0, select bank1
  3710  063A  083D               	movf	(sprintf@val+3)^(0+128),w
  3711  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3712  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3713  063D  00AC               	movwf	___llmod@dividend+3
  3714  063E  1683               	bsf	3,5	;RP0=1, select bank1
  3715  063F  1303               	bcf	3,6	;RP1=0, select bank1
  3716  0640  083C               	movf	(sprintf@val+2)^(0+128),w
  3717  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0643  00AB               	movwf	___llmod@dividend+2
  3720  0644  1683               	bsf	3,5	;RP0=1, select bank1
  3721  0645  1303               	bcf	3,6	;RP1=0, select bank1
  3722  0646  083B               	movf	(sprintf@val+1)^(0+128),w
  3723  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0649  00AA               	movwf	___llmod@dividend+1
  3726  064A  1683               	bsf	3,5	;RP0=1, select bank1
  3727  064B  1303               	bcf	3,6	;RP1=0, select bank1
  3728  064C  083A               	movf	sprintf@val^(0+128),w
  3729  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3730  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3731  064F  00A9               	movwf	___llmod@dividend
  3732  0650  160A  158A  248B  120A  118A  	fcall	___llmod
  3733  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0657  0828               	movf	?___llmod+3,w
  3736  0658  1683               	bsf	3,5	;RP0=1, select bank1
  3737  0659  1303               	bcf	3,6	;RP1=0, select bank1
  3738  065A  00BD               	movwf	(sprintf@val+3)^(0+128)
  3739  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3740  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3741  065D  0827               	movf	?___llmod+2,w
  3742  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3743  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3744  0660  00BC               	movwf	(sprintf@val+2)^(0+128)
  3745  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3746  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3747  0663  0826               	movf	?___llmod+1,w
  3748  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3749  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3750  0666  00BB               	movwf	(sprintf@val+1)^(0+128)
  3751  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0669  0825               	movf	?___llmod,w
  3754  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3755  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3756  066C  00BA               	movwf	sprintf@val^(0+128)
  3757  066D                     l4042:
  3758                           
  3759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3760  066D  3001               	movlw	1
  3761  066E  02C5               	subwf	sprintf@c^(0+128),f
  3762  066F  0A45               	incf	sprintf@c^(0+128),w
  3763  0670  1D03               	btfss	3,2
  3764  0671  2E73               	goto	u6131
  3765  0672  2E74               	goto	u6130
  3766  0673                     u6131:
  3767  0673  2D8C               	goto	l4034
  3768  0674                     u6130:
  3769  0674  2E86               	goto	l4050
  3770  0675                     l4044:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3773  0675  3030               	movlw	48
  3774  0676  00A8               	movwf	??_sprintf^(0+128)
  3775  0677  0844               	movf	sprintf@sp^(0+128),w
  3776  0678  0084               	movwf	4
  3777  0679  0828               	movf	??_sprintf^(0+128),w
  3778  067A  1783               	bsf	3,7	;select IRP bank2
  3779  067B  0080               	movwf	0
  3780  067C                     l4046:
  3781  067C  3001               	movlw	1
  3782  067D  00A8               	movwf	??_sprintf^(0+128)
  3783  067E  0828               	movf	??_sprintf^(0+128),w
  3784  067F  07C4               	addwf	sprintf@sp^(0+128),f
  3785  0680                     l4048:
  3786                           
  3787                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3788  0680  30FF               	movlw	255
  3789  0681  07C2               	addwf	sprintf@prec^(0+128),f
  3790  0682  1803               	skipnc
  3791  0683  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3792  0684  30FF               	movlw	255
  3793  0685  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3794  0686                     l4050:
  3795                           
  3796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3797  0686  0842               	movf	sprintf@prec^(0+128),w
  3798  0687  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3799  0688  1D03               	btfss	3,2
  3800  0689  2E8B               	goto	u6141
  3801  068A  2E8C               	goto	u6140
  3802  068B                     u6141:
  3803  068B  2E75               	goto	l4044
  3804  068C                     u6140:
  3805  068C  2FB5               	goto	l4102
  3806  068D                     l4052:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3809  068D  0831               	movf	sprintf@ap^(0+128),w
  3810  068E  0084               	movwf	4
  3811  068F  1383               	bcf	3,7	;select IRP bank0
  3812  0690  0800               	movf	0,w
  3813  0691  00A8               	movwf	??_sprintf^(0+128)
  3814  0692  0A84               	incf	4,f
  3815  0693  0800               	movf	0,w
  3816  0694  00A9               	movwf	(??_sprintf^(0+128)+1)
  3817  0695  0828               	movf	??_sprintf^(0+128),w
  3818  0696  00BA               	movwf	sprintf@val^(0+128)
  3819  0697  0829               	movf	(??_sprintf+1)^(0+128),w
  3820  0698  00BB               	movwf	(sprintf@val+1)^(0+128)
  3821  0699  3000               	movlw	0
  3822  069A  1BBB               	btfsc	(sprintf@val+1)^(0+128),7
  3823  069B  30FF               	movlw	255
  3824  069C  00BC               	movwf	(sprintf@val+2)^(0+128)
  3825  069D  00BD               	movwf	(sprintf@val+3)^(0+128)
  3826  069E                     l4054:
  3827  069E  3002               	movlw	2
  3828  069F  00A8               	movwf	??_sprintf^(0+128)
  3829  06A0  0828               	movf	??_sprintf^(0+128),w
  3830  06A1  07B1               	addwf	sprintf@ap^(0+128),f
  3831  06A2                     l4056:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
  3834  06A2  1FBD               	btfss	(sprintf@val+3)^(0+128),7
  3835  06A3  2EA5               	goto	u6151
  3836  06A4  2EA6               	goto	u6150
  3837  06A5                     u6151:
  3838  06A5  2EB5               	goto	l4062
  3839  06A6                     u6150:
  3840  06A6                     l4058:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3843  06A6  3003               	movlw	3
  3844  06A7  04B2               	iorwf	sprintf@flag^(0+128),f
  3845  06A8  3000               	movlw	0
  3846  06A9  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  3847  06AA                     l4060:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3850  06AA  09BA               	comf	sprintf@val^(0+128),f
  3851  06AB  09BB               	comf	(sprintf@val+1)^(0+128),f
  3852  06AC  09BC               	comf	(sprintf@val+2)^(0+128),f
  3853  06AD  09BD               	comf	(sprintf@val+3)^(0+128),f
  3854  06AE  0ABA               	incf	sprintf@val^(0+128),f
  3855  06AF  1903               	skipnz
  3856  06B0  0ABB               	incf	(sprintf@val+1)^(0+128),f
  3857  06B1  1903               	skipnz
  3858  06B2  0ABC               	incf	(sprintf@val+2)^(0+128),f
  3859  06B3  1903               	skipnz
  3860  06B4  0ABD               	incf	(sprintf@val+3)^(0+128),f
  3861  06B5                     l4062:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3864  06B5  0842               	movf	sprintf@prec^(0+128),w
  3865  06B6  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3866  06B7  1D03               	btfss	3,2
  3867  06B8  2EBA               	goto	u6161
  3868  06B9  2EBB               	goto	u6160
  3869  06BA                     u6161:
  3870  06BA  2EC9               	goto	l4068
  3871  06BB                     u6160:
  3872  06BB                     l4064:
  3873  06BB  083D               	movf	(sprintf@val+3)^(0+128),w
  3874  06BC  043C               	iorwf	(sprintf@val+2)^(0+128),w
  3875  06BD  043B               	iorwf	(sprintf@val+1)^(0+128),w
  3876  06BE  043A               	iorwf	sprintf@val^(0+128),w
  3877  06BF  1D03               	skipz
  3878  06C0  2EC2               	goto	u6171
  3879  06C1  2EC3               	goto	u6170
  3880  06C2                     u6171:
  3881  06C2  2EC9               	goto	l4068
  3882  06C3                     u6170:
  3883  06C3                     l4066:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3886  06C3  3001               	movlw	1
  3887  06C4  07C2               	addwf	sprintf@prec^(0+128),f
  3888  06C5  1803               	skipnc
  3889  06C6  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3890  06C7  3000               	movlw	0
  3891  06C8  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3892  06C9                     l4068:
  3893                           
  3894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3895  06C9  01C5               	clrf	sprintf@c^(0+128)
  3896  06CA  0AC5               	incf	sprintf@c^(0+128),f
  3897  06CB                     l4074:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3900  06CB  0845               	movf	sprintf@c^(0+128),w
  3901  06CC  00A8               	movwf	??_sprintf^(0+128)
  3902  06CD  3001               	movlw	1
  3903  06CE                     u6185:
  3904  06CE  1003               	clrc
  3905  06CF  0DA8               	rlf	??_sprintf^(0+128),f
  3906  06D0  3EFF               	addlw	-1
  3907  06D1  1D03               	skipz
  3908  06D2  2ECE               	goto	u6185
  3909  06D3  1003               	clrc
  3910  06D4  0D28               	rlf	??_sprintf^(0+128),w
  3911  06D5  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3912  06D6  0084               	movwf	4
  3913  06D7  160A  118A  200A  120A  118A  	fcall	stringdir
  3914  06DC  00A9               	movwf	(??_sprintf+1)^(0+128)
  3915  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3916  06E2  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3917  06E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3918  06E8  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3919  06E9  160A  118A  200A  120A  118A  	fcall	stringdir
  3920  06EE  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3921  06EF  082C               	movf	(??_sprintf+4)^(0+128),w
  3922  06F0  023D               	subwf	(sprintf@val+3)^(0+128),w
  3923  06F1  1D03               	skipz
  3924  06F2  2EFD               	goto	u6195
  3925  06F3  082B               	movf	(??_sprintf+3)^(0+128),w
  3926  06F4  023C               	subwf	(sprintf@val+2)^(0+128),w
  3927  06F5  1D03               	skipz
  3928  06F6  2EFD               	goto	u6195
  3929  06F7  082A               	movf	(??_sprintf+2)^(0+128),w
  3930  06F8  023B               	subwf	(sprintf@val+1)^(0+128),w
  3931  06F9  1D03               	skipz
  3932  06FA  2EFD               	goto	u6195
  3933  06FB  0829               	movf	(??_sprintf+1)^(0+128),w
  3934  06FC  023A               	subwf	sprintf@val^(0+128),w
  3935  06FD                     u6195:
  3936  06FD  1803               	skipnc
  3937  06FE  2F00               	goto	u6191
  3938  06FF  2F01               	goto	u6190
  3939  0700                     u6191:
  3940  0700  2F02               	goto	l4078
  3941  0701                     u6190:
  3942  0701  2F0C               	goto	l4080
  3943  0702                     l4078:
  3944  0702  3001               	movlw	1
  3945  0703  00A8               	movwf	??_sprintf^(0+128)
  3946  0704  0828               	movf	??_sprintf^(0+128),w
  3947  0705  07C5               	addwf	sprintf@c^(0+128),f
  3948  0706  300A               	movlw	10
  3949  0707  0645               	xorwf	sprintf@c^(0+128),w
  3950  0708  1D03               	btfss	3,2
  3951  0709  2F0B               	goto	u6201
  3952  070A  2F0C               	goto	u6200
  3953  070B                     u6201:
  3954  070B  2ECB               	goto	l4074
  3955  070C                     u6200:
  3956  070C                     l4080:
  3957                           
  3958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3959  070C  0843               	movf	(sprintf@prec+1)^(0+128),w
  3960  070D  3A80               	xorlw	128
  3961  070E  3C80               	sublw	128
  3962  070F  1D03               	skipz
  3963  0710  2F13               	goto	u6215
  3964  0711  0842               	movf	sprintf@prec^(0+128),w
  3965  0712  0245               	subwf	sprintf@c^(0+128),w
  3966  0713                     u6215:
  3967  0713  1803               	skipnc
  3968  0714  2F16               	goto	u6211
  3969  0715  2F17               	goto	u6210
  3970  0716                     u6211:
  3971  0716  2F18               	goto	l4084
  3972  0717                     u6210:
  3973  0717                     l4082:
  3974  0717  2F30               	goto	l4088
  3975  0718                     l4084:
  3976  0718  1683               	bsf	3,5	;RP0=1, select bank1
  3977  0719  1303               	bcf	3,6	;RP1=0, select bank1
  3978  071A  0843               	movf	(sprintf@prec+1)^(0+128),w
  3979  071B  3A80               	xorlw	128
  3980  071C  00A8               	movwf	??_sprintf^(0+128)
  3981  071D  3080               	movlw	128
  3982  071E  0228               	subwf	??_sprintf^(0+128),w
  3983  071F  1D03               	skipz
  3984  0720  2F23               	goto	u6225
  3985  0721  0845               	movf	sprintf@c^(0+128),w
  3986  0722  0242               	subwf	sprintf@prec^(0+128),w
  3987  0723                     u6225:
  3988  0723  1803               	skipnc
  3989  0724  2F26               	goto	u6221
  3990  0725  2F27               	goto	u6220
  3991  0726                     u6221:
  3992  0726  2F30               	goto	l4088
  3993  0727                     u6220:
  3994  0727                     l4086:
  3995                           
  3996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3997  0727  1683               	bsf	3,5	;RP0=1, select bank1
  3998  0728  1303               	bcf	3,6	;RP1=0, select bank1
  3999  0729  0845               	movf	sprintf@c^(0+128),w
  4000  072A  00A8               	movwf	??_sprintf^(0+128)
  4001  072B  01A9               	clrf	(??_sprintf^(0+128)+1)
  4002  072C  0828               	movf	??_sprintf^(0+128),w
  4003  072D  00C2               	movwf	sprintf@prec^(0+128)
  4004  072E  0829               	movf	(??_sprintf+1)^(0+128),w
  4005  072F  00C3               	movwf	(sprintf@prec+1)^(0+128)
  4006  0730                     l4088:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4009  0730  3003               	movlw	3
  4010  0731  1683               	bsf	3,5	;RP0=1, select bank1
  4011  0732  1303               	bcf	3,6	;RP1=0, select bank1
  4012  0733  0532               	andwf	sprintf@flag^(0+128),w
  4013  0734  00A8               	movwf	??_sprintf^(0+128)
  4014  0735  3000               	movlw	0
  4015  0736  0533               	andwf	(sprintf@flag+1)^(0+128),w
  4016  0737  00A9               	movwf	(??_sprintf+1)^(0+128)
  4017  0738  0828               	movf	??_sprintf^(0+128),w
  4018  0739  0429               	iorwf	(??_sprintf^(0+128)+1),w
  4019  073A  1903               	btfsc	3,2
  4020  073B  2F3D               	goto	u6231
  4021  073C  2F3E               	goto	u6230
  4022  073D                     u6231:
  4023  073D  2FA7               	goto	l4100
  4024  073E                     u6230:
  4025  073E                     l4090:
  4026                           
  4027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4028  073E  302D               	movlw	45
  4029  073F  00A8               	movwf	??_sprintf^(0+128)
  4030  0740  0844               	movf	sprintf@sp^(0+128),w
  4031  0741  0084               	movwf	4
  4032  0742  0828               	movf	??_sprintf^(0+128),w
  4033  0743  1783               	bsf	3,7	;select IRP bank2
  4034  0744  0080               	movwf	0
  4035  0745                     l4092:
  4036  0745  3001               	movlw	1
  4037  0746  00A8               	movwf	??_sprintf^(0+128)
  4038  0747  0828               	movf	??_sprintf^(0+128),w
  4039  0748  07C4               	addwf	sprintf@sp^(0+128),f
  4040  0749  2FA7               	goto	l4100
  4041  074A                     l4094:
  4042                           
  4043                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  4044  074A  3000               	movlw	0
  4045  074B  1283               	bcf	3,5	;RP0=0, select bank0
  4046  074C  1303               	bcf	3,6	;RP1=0, select bank0
  4047  074D  00A8               	movwf	___llmod@divisor+3
  4048  074E  3000               	movlw	0
  4049  074F  00A7               	movwf	___llmod@divisor+2
  4050  0750  3000               	movlw	0
  4051  0751  00A6               	movwf	___llmod@divisor+1
  4052  0752  300A               	movlw	10
  4053  0753  00A5               	movwf	___llmod@divisor
  4054  0754  1683               	bsf	3,5	;RP0=1, select bank1
  4055  0755  1303               	bcf	3,6	;RP1=0, select bank1
  4056  0756  0842               	movf	sprintf@prec^(0+128),w
  4057  0757  00A8               	movwf	??_sprintf^(0+128)
  4058  0758  3001               	movlw	1
  4059  0759                     u6245:
  4060  0759  1003               	clrc
  4061  075A  0DA8               	rlf	??_sprintf^(0+128),f
  4062  075B  3EFF               	addlw	-1
  4063  075C  1D03               	skipz
  4064  075D  2F59               	goto	u6245
  4065  075E  1003               	clrc
  4066  075F  0D28               	rlf	??_sprintf^(0+128),w
  4067  0760  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4068  0761  0084               	movwf	4
  4069  0762  160A  118A  200A  120A  118A  	fcall	stringdir
  4070  0767  00F2               	movwf	___lldiv@divisor
  4071  0768  160A  118A  200A  120A  118A  	fcall	stringdir
  4072  076D  00F3               	movwf	___lldiv@divisor+1
  4073  076E  160A  118A  200A  120A  118A  	fcall	stringdir
  4074  0773  00F4               	movwf	___lldiv@divisor+2
  4075  0774  160A  118A  200A  120A  118A  	fcall	stringdir
  4076  0779  00F5               	movwf	___lldiv@divisor+3
  4077  077A  083D               	movf	(sprintf@val+3)^(0+128),w
  4078  077B  00F9               	movwf	___lldiv@dividend+3
  4079  077C  083C               	movf	(sprintf@val+2)^(0+128),w
  4080  077D  00F8               	movwf	___lldiv@dividend+2
  4081  077E  083B               	movf	(sprintf@val+1)^(0+128),w
  4082  077F  00F7               	movwf	___lldiv@dividend+1
  4083  0780  083A               	movf	sprintf@val^(0+128),w
  4084  0781  00F6               	movwf	___lldiv@dividend
  4085  0782  160A  158A  253A  120A  118A  	fcall	___lldiv
  4086  0787  0875               	movf	?___lldiv+3,w
  4087  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4089  078A  00AC               	movwf	___llmod@dividend+3
  4090  078B  0874               	movf	?___lldiv+2,w
  4091  078C  00AB               	movwf	___llmod@dividend+2
  4092  078D  0873               	movf	?___lldiv+1,w
  4093  078E  00AA               	movwf	___llmod@dividend+1
  4094  078F  0872               	movf	?___lldiv,w
  4095  0790  00A9               	movwf	___llmod@dividend
  4096  0791  160A  158A  248B  120A  118A  	fcall	___llmod
  4097  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0798  0825               	movf	?___llmod,w
  4100  0799  3E30               	addlw	48
  4101  079A  1683               	bsf	3,5	;RP0=1, select bank1
  4102  079B  1303               	bcf	3,6	;RP1=0, select bank1
  4103  079C  00A9               	movwf	(??_sprintf+1)^(0+128)
  4104  079D  0829               	movf	(??_sprintf+1)^(0+128),w
  4105  079E  00C5               	movwf	sprintf@c^(0+128)
  4106  079F                     l4096:
  4107                           
  4108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4109  079F  0845               	movf	sprintf@c^(0+128),w
  4110  07A0  00A8               	movwf	??_sprintf^(0+128)
  4111  07A1  0844               	movf	sprintf@sp^(0+128),w
  4112  07A2  0084               	movwf	4
  4113  07A3  0828               	movf	??_sprintf^(0+128),w
  4114  07A4  1783               	bsf	3,7	;select IRP bank2
  4115  07A5  0080               	movwf	0
  4116  07A6  2F45               	goto	l4092
  4117  07A7                     l4100:
  4118                           
  4119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4120  07A7  30FF               	movlw	255
  4121  07A8  07C2               	addwf	sprintf@prec^(0+128),f
  4122  07A9  1803               	skipnc
  4123  07AA  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  4124  07AB  30FF               	movlw	255
  4125  07AC  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  4126  07AD  0A42               	incf	sprintf@prec^(0+128),w
  4127  07AE  1D03               	skipz
  4128  07AF  2FB4               	goto	u6251
  4129  07B0  0A43               	incf	(sprintf@prec+1)^(0+128),w
  4130  07B1  1D03               	btfss	3,2
  4131  07B2  2FB4               	goto	u6251
  4132  07B3  2FB5               	goto	u6250
  4133  07B4                     u6251:
  4134  07B4  2F4A               	goto	l4094
  4135  07B5                     u6250:
  4136  07B5                     l4102:
  4137                           
  4138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4139  07B5  3001               	movlw	1
  4140  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  4141  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  4142  07B8  07EA               	addwf	sprintf@f,f
  4143  07B9  30FF               	movlw	-1
  4144  07BA  076A               	addwf	sprintf@f,w
  4145  07BB  0084               	movwf	4
  4146  07BC  160A  118A  200A  120A  118A  	fcall	stringdir
  4147  07C1  1683               	bsf	3,5	;RP0=1, select bank1
  4148  07C2  1303               	bcf	3,6	;RP1=0, select bank1
  4149  07C3  00A8               	movwf	??_sprintf^(0+128)
  4150  07C4  0828               	movf	??_sprintf^(0+128),w
  4151  07C5  00C5               	movwf	sprintf@c^(0+128)
  4152  07C6  0845               	movf	sprintf@c^(0+128),w
  4153  07C7  1D03               	btfss	3,2
  4154  07C8  2FCA               	goto	u6261
  4155  07C9  2FCB               	goto	u6260
  4156  07CA                     u6261:
  4157  07CA  282E               	goto	l3878
  4158  07CB                     u6260:
  4159  07CB                     l4104:
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4162  07CB  0844               	movf	sprintf@sp^(0+128),w
  4163  07CC  0084               	movwf	4
  4164  07CD  1783               	bsf	3,7	;select IRP bank2
  4165  07CE  0180               	clrf	0
  4166  07CF                     l437:
  4167  07CF  0008               	return
  4168  07D0                     __end_of_sprintf:
  4169                           
  4170                           	psect	text3
  4171  0C9D                     __ptext3:	
  4172 ;; *************** function _scale *****************
  4173 ;; Defined at:
  4174 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  scl             1    wreg     char 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  scl             1   52[BANK0 ] char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  4   34[BANK0 ] char 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       4       0       0       0
  4189 ;;      Locals:         0       5       0       0       0
  4190 ;;      Temps:          0      10       0       0       0
  4191 ;;      Totals:         0      19       0       0       0
  4192 ;;Total ram usage:       19 bytes
  4193 ;; Hardware stack levels used:    1
  4194 ;; Hardware stack levels required when called:    3
  4195 ;; This function calls:
  4196 ;;		___awdiv
  4197 ;;		___awmod
  4198 ;;		___flmul
  4199 ;; This function is called by:
  4200 ;;		_sprintf
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           
  4205                           ;psect for function _scale
  4206  0C9D                     _scale:
  4207                           
  4208                           ;incstack = 0
  4209                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4210                           ;scale@scl stored from wreg
  4211  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0C9F  00D4               	movwf	scale@scl
  4214  0CA0                     l2930:
  4215                           
  4216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4217  0CA0  1FD4               	btfss	scale@scl,7
  4218  0CA1  2CA3               	goto	u4121
  4219  0CA2  2CA4               	goto	u4120
  4220  0CA3                     u4121:
  4221  0CA3  2E53               	goto	l2952
  4222  0CA4                     u4120:
  4223  0CA4                     l2932:
  4224                           
  4225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4226  0CA4  09D4               	comf	scale@scl,f
  4227  0CA5  0AD4               	incf	scale@scl,f
  4228  0CA6                     l2934:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4231  0CA6  0854               	movf	scale@scl,w
  4232  0CA7  3A80               	xorlw	128
  4233  0CA8  3E12               	addlw	-238
  4234  0CA9  1C03               	skipc
  4235  0CAA  2CAC               	goto	u4131
  4236  0CAB  2CAD               	goto	u4130
  4237  0CAC                     u4131:
  4238  0CAC  2D97               	goto	l2942
  4239  0CAD                     u4130:
  4240  0CAD                     l2936:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4243  0CAD  300A               	movlw	10
  4244  0CAE  00A0               	movwf	___awdiv@divisor
  4245  0CAF  3000               	movlw	0
  4246  0CB0  00A1               	movwf	___awdiv@divisor+1
  4247  0CB1  0854               	movf	scale@scl,w
  4248  0CB2  00F4               	movwf	___awmod@dividend
  4249  0CB3  01F5               	clrf	___awmod@dividend+1
  4250  0CB4  1BF4               	btfsc	___awmod@dividend,7
  4251  0CB5  03F5               	decf	___awmod@dividend+1,f
  4252  0CB6  3064               	movlw	100
  4253  0CB7  00F2               	movwf	___awmod@divisor
  4254  0CB8  3000               	movlw	0
  4255  0CB9  00F3               	movwf	___awmod@divisor+1
  4256  0CBA  160A  158A  24E1  120A  158A  	fcall	___awmod
  4257  0CBF  0873               	movf	?___awmod+1,w
  4258  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0CC2  00A3               	movwf	___awdiv@dividend+1
  4261  0CC3  0872               	movf	?___awmod,w
  4262  0CC4  00A2               	movwf	___awdiv@dividend
  4263  0CC5  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4264  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0CCC  0820               	movf	?___awdiv,w
  4267  0CCD  00C6               	movwf	??_scale
  4268  0CCE  3001               	movlw	1
  4269  0CCF                     u4145:
  4270  0CCF  1003               	clrc
  4271  0CD0  0DC6               	rlf	??_scale,f
  4272  0CD1  3EFF               	addlw	-1
  4273  0CD2  1D03               	skipz
  4274  0CD3  2CCF               	goto	u4145
  4275  0CD4  1003               	clrc
  4276  0CD5  0D46               	rlf	??_scale,w
  4277  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4278  0CD7  0084               	movwf	4
  4279  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  4280  0CDD  00C7               	movwf	??_scale+1
  4281  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  4282  0CE3  00C8               	movwf	??_scale+2
  4283  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  4284  0CE9  00C9               	movwf	??_scale+3
  4285  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  4286  0CEF  00CA               	movwf	??_scale+4
  4287  0CF0  084A               	movf	??_scale+4,w
  4288  0CF1  00AB               	movwf	___flmul@b+3
  4289  0CF2  0849               	movf	??_scale+3,w
  4290  0CF3  00AA               	movwf	___flmul@b+2
  4291  0CF4  0848               	movf	??_scale+2,w
  4292  0CF5  00A9               	movwf	___flmul@b+1
  4293  0CF6  0847               	movf	??_scale+1,w
  4294  0CF7  00A8               	movwf	___flmul@b
  4295  0CF8  3064               	movlw	100
  4296  0CF9  00A0               	movwf	___awdiv@divisor
  4297  0CFA  3000               	movlw	0
  4298  0CFB  00A1               	movwf	___awdiv@divisor+1
  4299  0CFC  0854               	movf	scale@scl,w
  4300  0CFD  00A2               	movwf	___awdiv@dividend
  4301  0CFE  01A3               	clrf	___awdiv@dividend+1
  4302  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4303  0D00  03A3               	decf	___awdiv@dividend+1,f
  4304  0D01  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4305  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4306  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4307  0D08  0820               	movf	?___awdiv,w
  4308  0D09  00CB               	movwf	??_scale+5
  4309  0D0A  3001               	movlw	1
  4310  0D0B                     u4155:
  4311  0D0B  1003               	clrc
  4312  0D0C  0DCB               	rlf	??_scale+5,f
  4313  0D0D  3EFF               	addlw	-1
  4314  0D0E  1D03               	skipz
  4315  0D0F  2D0B               	goto	u4155
  4316  0D10  1003               	clrc
  4317  0D11  0D4B               	rlf	??_scale+5,w
  4318  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4319  0D13  0084               	movwf	4
  4320  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  4321  0D19  00CC               	movwf	??_scale+6
  4322  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4323  0D1F  00CD               	movwf	??_scale+7
  4324  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  4325  0D25  00CE               	movwf	??_scale+8
  4326  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  4327  0D2B  00CF               	movwf	??_scale+9
  4328  0D2C  084F               	movf	??_scale+9,w
  4329  0D2D  00AF               	movwf	___flmul@a+3
  4330  0D2E  084E               	movf	??_scale+8,w
  4331  0D2F  00AE               	movwf	___flmul@a+2
  4332  0D30  084D               	movf	??_scale+7,w
  4333  0D31  00AD               	movwf	___flmul@a+1
  4334  0D32  084C               	movf	??_scale+6,w
  4335  0D33  00AC               	movwf	___flmul@a
  4336  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4337  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4338  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4339  0D3B  082B               	movf	?___flmul+3,w
  4340  0D3C  00D3               	movwf	_scale$1282+3
  4341  0D3D  082A               	movf	?___flmul+2,w
  4342  0D3E  00D2               	movwf	_scale$1282+2
  4343  0D3F  0829               	movf	?___flmul+1,w
  4344  0D40  00D1               	movwf	_scale$1282+1
  4345  0D41  0828               	movf	?___flmul,w
  4346  0D42  00D0               	movwf	_scale$1282
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4349  0D43  300A               	movlw	10
  4350  0D44  00F2               	movwf	___awmod@divisor
  4351  0D45  3000               	movlw	0
  4352  0D46  00F3               	movwf	___awmod@divisor+1
  4353  0D47  0854               	movf	scale@scl,w
  4354  0D48  00F4               	movwf	___awmod@dividend
  4355  0D49  01F5               	clrf	___awmod@dividend+1
  4356  0D4A  1BF4               	btfsc	___awmod@dividend,7
  4357  0D4B  03F5               	decf	___awmod@dividend+1,f
  4358  0D4C  160A  158A  24E1  120A  158A  	fcall	___awmod
  4359  0D51  0872               	movf	?___awmod,w
  4360  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0D54  00C6               	movwf	??_scale
  4363  0D55  3001               	movlw	1
  4364  0D56                     u4165:
  4365  0D56  1003               	clrc
  4366  0D57  0DC6               	rlf	??_scale,f
  4367  0D58  3EFF               	addlw	-1
  4368  0D59  1D03               	skipz
  4369  0D5A  2D56               	goto	u4165
  4370  0D5B  1003               	clrc
  4371  0D5C  0D46               	rlf	??_scale,w
  4372  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4373  0D5E  0084               	movwf	4
  4374  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4375  0D64  00C7               	movwf	??_scale+1
  4376  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  4377  0D6A  00C8               	movwf	??_scale+2
  4378  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4379  0D70  00C9               	movwf	??_scale+3
  4380  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  4381  0D76  00CA               	movwf	??_scale+4
  4382  0D77  084A               	movf	??_scale+4,w
  4383  0D78  00AB               	movwf	___flmul@b+3
  4384  0D79  0849               	movf	??_scale+3,w
  4385  0D7A  00AA               	movwf	___flmul@b+2
  4386  0D7B  0848               	movf	??_scale+2,w
  4387  0D7C  00A9               	movwf	___flmul@b+1
  4388  0D7D  0847               	movf	??_scale+1,w
  4389  0D7E  00A8               	movwf	___flmul@b
  4390  0D7F  0853               	movf	_scale$1282+3,w
  4391  0D80  00AF               	movwf	___flmul@a+3
  4392  0D81  0852               	movf	_scale$1282+2,w
  4393  0D82  00AE               	movwf	___flmul@a+2
  4394  0D83  0851               	movf	_scale$1282+1,w
  4395  0D84  00AD               	movwf	___flmul@a+1
  4396  0D85  0850               	movf	_scale$1282,w
  4397  0D86  00AC               	movwf	___flmul@a
  4398  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4399  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4400  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4401  0D8E  082B               	movf	?___flmul+3,w
  4402  0D8F  00C5               	movwf	?_scale+3
  4403  0D90  082A               	movf	?___flmul+2,w
  4404  0D91  00C4               	movwf	?_scale+2
  4405  0D92  0829               	movf	?___flmul+1,w
  4406  0D93  00C3               	movwf	?_scale+1
  4407  0D94  0828               	movf	?___flmul,w
  4408  0D95  00C2               	movwf	?_scale
  4409  0D96  2FFF               	goto	l362
  4410  0D97                     l2942:
  4411  0D97  0854               	movf	scale@scl,w
  4412  0D98  3A80               	xorlw	128
  4413  0D99  3E75               	addlw	-139
  4414  0D9A  1C03               	skipc
  4415  0D9B  2D9D               	goto	u4171
  4416  0D9C  2D9E               	goto	u4170
  4417  0D9D                     u4171:
  4418  0D9D  2E26               	goto	l2948
  4419  0D9E                     u4170:
  4420  0D9E                     l2944:
  4421                           
  4422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4423  0D9E  300A               	movlw	10
  4424  0D9F  00F2               	movwf	___awmod@divisor
  4425  0DA0  3000               	movlw	0
  4426  0DA1  00F3               	movwf	___awmod@divisor+1
  4427  0DA2  0854               	movf	scale@scl,w
  4428  0DA3  00F4               	movwf	___awmod@dividend
  4429  0DA4  01F5               	clrf	___awmod@dividend+1
  4430  0DA5  1BF4               	btfsc	___awmod@dividend,7
  4431  0DA6  03F5               	decf	___awmod@dividend+1,f
  4432  0DA7  160A  158A  24E1  120A  158A  	fcall	___awmod
  4433  0DAC  0872               	movf	?___awmod,w
  4434  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4436  0DAF  00C6               	movwf	??_scale
  4437  0DB0  3001               	movlw	1
  4438  0DB1                     u4185:
  4439  0DB1  1003               	clrc
  4440  0DB2  0DC6               	rlf	??_scale,f
  4441  0DB3  3EFF               	addlw	-1
  4442  0DB4  1D03               	skipz
  4443  0DB5  2DB1               	goto	u4185
  4444  0DB6  1003               	clrc
  4445  0DB7  0D46               	rlf	??_scale,w
  4446  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4447  0DB9  0084               	movwf	4
  4448  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4449  0DBF  00C7               	movwf	??_scale+1
  4450  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  4451  0DC5  00C8               	movwf	??_scale+2
  4452  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  4453  0DCB  00C9               	movwf	??_scale+3
  4454  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  4455  0DD1  00CA               	movwf	??_scale+4
  4456  0DD2  084A               	movf	??_scale+4,w
  4457  0DD3  00AB               	movwf	___flmul@b+3
  4458  0DD4  0849               	movf	??_scale+3,w
  4459  0DD5  00AA               	movwf	___flmul@b+2
  4460  0DD6  0848               	movf	??_scale+2,w
  4461  0DD7  00A9               	movwf	___flmul@b+1
  4462  0DD8  0847               	movf	??_scale+1,w
  4463  0DD9  00A8               	movwf	___flmul@b
  4464  0DDA  300A               	movlw	10
  4465  0DDB  00A0               	movwf	___awdiv@divisor
  4466  0DDC  3000               	movlw	0
  4467  0DDD  00A1               	movwf	___awdiv@divisor+1
  4468  0DDE  0854               	movf	scale@scl,w
  4469  0DDF  00A2               	movwf	___awdiv@dividend
  4470  0DE0  01A3               	clrf	___awdiv@dividend+1
  4471  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4472  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4473  0DE3  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4474  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4475  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4476  0DEA  0820               	movf	?___awdiv,w
  4477  0DEB  00CB               	movwf	??_scale+5
  4478  0DEC  3001               	movlw	1
  4479  0DED                     u4195:
  4480  0DED  1003               	clrc
  4481  0DEE  0DCB               	rlf	??_scale+5,f
  4482  0DEF  3EFF               	addlw	-1
  4483  0DF0  1D03               	skipz
  4484  0DF1  2DED               	goto	u4195
  4485  0DF2  1003               	clrc
  4486  0DF3  0D4B               	rlf	??_scale+5,w
  4487  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4488  0DF5  0084               	movwf	4
  4489  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4490  0DFB  00CC               	movwf	??_scale+6
  4491  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4492  0E01  00CD               	movwf	??_scale+7
  4493  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4494  0E07  00CE               	movwf	??_scale+8
  4495  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4496  0E0D  00CF               	movwf	??_scale+9
  4497  0E0E  084F               	movf	??_scale+9,w
  4498  0E0F  00AF               	movwf	___flmul@a+3
  4499  0E10  084E               	movf	??_scale+8,w
  4500  0E11  00AE               	movwf	___flmul@a+2
  4501  0E12  084D               	movf	??_scale+7,w
  4502  0E13  00AD               	movwf	___flmul@a+1
  4503  0E14  084C               	movf	??_scale+6,w
  4504  0E15  00AC               	movwf	___flmul@a
  4505  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4506  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4507  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4508  0E1D  082B               	movf	?___flmul+3,w
  4509  0E1E  00C5               	movwf	?_scale+3
  4510  0E1F  082A               	movf	?___flmul+2,w
  4511  0E20  00C4               	movwf	?_scale+2
  4512  0E21  0829               	movf	?___flmul+1,w
  4513  0E22  00C3               	movwf	?_scale+1
  4514  0E23  0828               	movf	?___flmul,w
  4515  0E24  00C2               	movwf	?_scale
  4516  0E25  2FFF               	goto	l362
  4517  0E26                     l2948:
  4518                           
  4519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4520  0E26  0854               	movf	scale@scl,w
  4521  0E27  00C6               	movwf	??_scale
  4522  0E28  3001               	movlw	1
  4523  0E29                     u4205:
  4524  0E29  1003               	clrc
  4525  0E2A  0DC6               	rlf	??_scale,f
  4526  0E2B  3EFF               	addlw	-1
  4527  0E2C  1D03               	skipz
  4528  0E2D  2E29               	goto	u4205
  4529  0E2E  1003               	clrc
  4530  0E2F  0D46               	rlf	??_scale,w
  4531  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4532  0E31  0084               	movwf	4
  4533  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4534  0E37  00C7               	movwf	??_scale+1
  4535  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4536  0E3D  00C8               	movwf	??_scale+2
  4537  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4538  0E43  00C9               	movwf	??_scale+3
  4539  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4540  0E49  00CA               	movwf	??_scale+4
  4541  0E4A  084A               	movf	??_scale+4,w
  4542  0E4B  00C5               	movwf	?_scale+3
  4543  0E4C  0849               	movf	??_scale+3,w
  4544  0E4D  00C4               	movwf	?_scale+2
  4545  0E4E  0848               	movf	??_scale+2,w
  4546  0E4F  00C3               	movwf	?_scale+1
  4547  0E50  0847               	movf	??_scale+1,w
  4548  0E51  00C2               	movwf	?_scale
  4549  0E52  2FFF               	goto	l362
  4550  0E53                     l2952:
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4553  0E53  0854               	movf	scale@scl,w
  4554  0E54  3A80               	xorlw	128
  4555  0E55  3E12               	addlw	-238
  4556  0E56  1C03               	skipc
  4557  0E57  2E59               	goto	u4211
  4558  0E58  2E5A               	goto	u4210
  4559  0E59                     u4211:
  4560  0E59  2F44               	goto	l2960
  4561  0E5A                     u4210:
  4562  0E5A                     l2954:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4565  0E5A  300A               	movlw	10
  4566  0E5B  00A0               	movwf	___awdiv@divisor
  4567  0E5C  3000               	movlw	0
  4568  0E5D  00A1               	movwf	___awdiv@divisor+1
  4569  0E5E  0854               	movf	scale@scl,w
  4570  0E5F  00F4               	movwf	___awmod@dividend
  4571  0E60  01F5               	clrf	___awmod@dividend+1
  4572  0E61  1BF4               	btfsc	___awmod@dividend,7
  4573  0E62  03F5               	decf	___awmod@dividend+1,f
  4574  0E63  3064               	movlw	100
  4575  0E64  00F2               	movwf	___awmod@divisor
  4576  0E65  3000               	movlw	0
  4577  0E66  00F3               	movwf	___awmod@divisor+1
  4578  0E67  160A  158A  24E1  120A  158A  	fcall	___awmod
  4579  0E6C  0873               	movf	?___awmod+1,w
  4580  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4581  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4582  0E6F  00A3               	movwf	___awdiv@dividend+1
  4583  0E70  0872               	movf	?___awmod,w
  4584  0E71  00A2               	movwf	___awdiv@dividend
  4585  0E72  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4586  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4587  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4588  0E79  0820               	movf	?___awdiv,w
  4589  0E7A  00C6               	movwf	??_scale
  4590  0E7B  3001               	movlw	1
  4591  0E7C                     u4225:
  4592  0E7C  1003               	clrc
  4593  0E7D  0DC6               	rlf	??_scale,f
  4594  0E7E  3EFF               	addlw	-1
  4595  0E7F  1D03               	skipz
  4596  0E80  2E7C               	goto	u4225
  4597  0E81  1003               	clrc
  4598  0E82  0D46               	rlf	??_scale,w
  4599  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4600  0E84  0084               	movwf	4
  4601  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4602  0E8A  00C7               	movwf	??_scale+1
  4603  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4604  0E90  00C8               	movwf	??_scale+2
  4605  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4606  0E96  00C9               	movwf	??_scale+3
  4607  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4608  0E9C  00CA               	movwf	??_scale+4
  4609  0E9D  084A               	movf	??_scale+4,w
  4610  0E9E  00AB               	movwf	___flmul@b+3
  4611  0E9F  0849               	movf	??_scale+3,w
  4612  0EA0  00AA               	movwf	___flmul@b+2
  4613  0EA1  0848               	movf	??_scale+2,w
  4614  0EA2  00A9               	movwf	___flmul@b+1
  4615  0EA3  0847               	movf	??_scale+1,w
  4616  0EA4  00A8               	movwf	___flmul@b
  4617  0EA5  3064               	movlw	100
  4618  0EA6  00A0               	movwf	___awdiv@divisor
  4619  0EA7  3000               	movlw	0
  4620  0EA8  00A1               	movwf	___awdiv@divisor+1
  4621  0EA9  0854               	movf	scale@scl,w
  4622  0EAA  00A2               	movwf	___awdiv@dividend
  4623  0EAB  01A3               	clrf	___awdiv@dividend+1
  4624  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4625  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4626  0EAE  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4627  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0EB5  0820               	movf	?___awdiv,w
  4630  0EB6  00CB               	movwf	??_scale+5
  4631  0EB7  3001               	movlw	1
  4632  0EB8                     u4235:
  4633  0EB8  1003               	clrc
  4634  0EB9  0DCB               	rlf	??_scale+5,f
  4635  0EBA  3EFF               	addlw	-1
  4636  0EBB  1D03               	skipz
  4637  0EBC  2EB8               	goto	u4235
  4638  0EBD  1003               	clrc
  4639  0EBE  0D4B               	rlf	??_scale+5,w
  4640  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4641  0EC0  0084               	movwf	4
  4642  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4643  0EC6  00CC               	movwf	??_scale+6
  4644  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4645  0ECC  00CD               	movwf	??_scale+7
  4646  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4647  0ED2  00CE               	movwf	??_scale+8
  4648  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4649  0ED8  00CF               	movwf	??_scale+9
  4650  0ED9  084F               	movf	??_scale+9,w
  4651  0EDA  00AF               	movwf	___flmul@a+3
  4652  0EDB  084E               	movf	??_scale+8,w
  4653  0EDC  00AE               	movwf	___flmul@a+2
  4654  0EDD  084D               	movf	??_scale+7,w
  4655  0EDE  00AD               	movwf	___flmul@a+1
  4656  0EDF  084C               	movf	??_scale+6,w
  4657  0EE0  00AC               	movwf	___flmul@a
  4658  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4659  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4660  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4661  0EE8  082B               	movf	?___flmul+3,w
  4662  0EE9  00D3               	movwf	_scale$1282+3
  4663  0EEA  082A               	movf	?___flmul+2,w
  4664  0EEB  00D2               	movwf	_scale$1282+2
  4665  0EEC  0829               	movf	?___flmul+1,w
  4666  0EED  00D1               	movwf	_scale$1282+1
  4667  0EEE  0828               	movf	?___flmul,w
  4668  0EEF  00D0               	movwf	_scale$1282
  4669                           
  4670                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4671  0EF0  300A               	movlw	10
  4672  0EF1  00F2               	movwf	___awmod@divisor
  4673  0EF2  3000               	movlw	0
  4674  0EF3  00F3               	movwf	___awmod@divisor+1
  4675  0EF4  0854               	movf	scale@scl,w
  4676  0EF5  00F4               	movwf	___awmod@dividend
  4677  0EF6  01F5               	clrf	___awmod@dividend+1
  4678  0EF7  1BF4               	btfsc	___awmod@dividend,7
  4679  0EF8  03F5               	decf	___awmod@dividend+1,f
  4680  0EF9  160A  158A  24E1  120A  158A  	fcall	___awmod
  4681  0EFE  0872               	movf	?___awmod,w
  4682  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4683  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4684  0F01  00C6               	movwf	??_scale
  4685  0F02  3001               	movlw	1
  4686  0F03                     u4245:
  4687  0F03  1003               	clrc
  4688  0F04  0DC6               	rlf	??_scale,f
  4689  0F05  3EFF               	addlw	-1
  4690  0F06  1D03               	skipz
  4691  0F07  2F03               	goto	u4245
  4692  0F08  1003               	clrc
  4693  0F09  0D46               	rlf	??_scale,w
  4694  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4695  0F0B  0084               	movwf	4
  4696  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4697  0F11  00C7               	movwf	??_scale+1
  4698  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4699  0F17  00C8               	movwf	??_scale+2
  4700  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4701  0F1D  00C9               	movwf	??_scale+3
  4702  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4703  0F23  00CA               	movwf	??_scale+4
  4704  0F24  084A               	movf	??_scale+4,w
  4705  0F25  00AB               	movwf	___flmul@b+3
  4706  0F26  0849               	movf	??_scale+3,w
  4707  0F27  00AA               	movwf	___flmul@b+2
  4708  0F28  0848               	movf	??_scale+2,w
  4709  0F29  00A9               	movwf	___flmul@b+1
  4710  0F2A  0847               	movf	??_scale+1,w
  4711  0F2B  00A8               	movwf	___flmul@b
  4712  0F2C  0853               	movf	_scale$1282+3,w
  4713  0F2D  00AF               	movwf	___flmul@a+3
  4714  0F2E  0852               	movf	_scale$1282+2,w
  4715  0F2F  00AE               	movwf	___flmul@a+2
  4716  0F30  0851               	movf	_scale$1282+1,w
  4717  0F31  00AD               	movwf	___flmul@a+1
  4718  0F32  0850               	movf	_scale$1282,w
  4719  0F33  00AC               	movwf	___flmul@a
  4720  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4721  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4722  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4723  0F3B  082B               	movf	?___flmul+3,w
  4724  0F3C  00C5               	movwf	?_scale+3
  4725  0F3D  082A               	movf	?___flmul+2,w
  4726  0F3E  00C4               	movwf	?_scale+2
  4727  0F3F  0829               	movf	?___flmul+1,w
  4728  0F40  00C3               	movwf	?_scale+1
  4729  0F41  0828               	movf	?___flmul,w
  4730  0F42  00C2               	movwf	?_scale
  4731  0F43  2FFF               	goto	l362
  4732  0F44                     l2960:
  4733  0F44  0854               	movf	scale@scl,w
  4734  0F45  3A80               	xorlw	128
  4735  0F46  3E75               	addlw	-139
  4736  0F47  1C03               	skipc
  4737  0F48  2F4A               	goto	u4251
  4738  0F49  2F4B               	goto	u4250
  4739  0F4A                     u4251:
  4740  0F4A  2FD3               	goto	l2966
  4741  0F4B                     u4250:
  4742  0F4B                     l2962:
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4745  0F4B  300A               	movlw	10
  4746  0F4C  00F2               	movwf	___awmod@divisor
  4747  0F4D  3000               	movlw	0
  4748  0F4E  00F3               	movwf	___awmod@divisor+1
  4749  0F4F  0854               	movf	scale@scl,w
  4750  0F50  00F4               	movwf	___awmod@dividend
  4751  0F51  01F5               	clrf	___awmod@dividend+1
  4752  0F52  1BF4               	btfsc	___awmod@dividend,7
  4753  0F53  03F5               	decf	___awmod@dividend+1,f
  4754  0F54  160A  158A  24E1  120A  158A  	fcall	___awmod
  4755  0F59  0872               	movf	?___awmod,w
  4756  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0F5C  00C6               	movwf	??_scale
  4759  0F5D  3001               	movlw	1
  4760  0F5E                     u4265:
  4761  0F5E  1003               	clrc
  4762  0F5F  0DC6               	rlf	??_scale,f
  4763  0F60  3EFF               	addlw	-1
  4764  0F61  1D03               	skipz
  4765  0F62  2F5E               	goto	u4265
  4766  0F63  1003               	clrc
  4767  0F64  0D46               	rlf	??_scale,w
  4768  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4769  0F66  0084               	movwf	4
  4770  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4771  0F6C  00C7               	movwf	??_scale+1
  4772  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4773  0F72  00C8               	movwf	??_scale+2
  4774  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4775  0F78  00C9               	movwf	??_scale+3
  4776  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4777  0F7E  00CA               	movwf	??_scale+4
  4778  0F7F  084A               	movf	??_scale+4,w
  4779  0F80  00AB               	movwf	___flmul@b+3
  4780  0F81  0849               	movf	??_scale+3,w
  4781  0F82  00AA               	movwf	___flmul@b+2
  4782  0F83  0848               	movf	??_scale+2,w
  4783  0F84  00A9               	movwf	___flmul@b+1
  4784  0F85  0847               	movf	??_scale+1,w
  4785  0F86  00A8               	movwf	___flmul@b
  4786  0F87  300A               	movlw	10
  4787  0F88  00A0               	movwf	___awdiv@divisor
  4788  0F89  3000               	movlw	0
  4789  0F8A  00A1               	movwf	___awdiv@divisor+1
  4790  0F8B  0854               	movf	scale@scl,w
  4791  0F8C  00A2               	movwf	___awdiv@dividend
  4792  0F8D  01A3               	clrf	___awdiv@dividend+1
  4793  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4794  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4795  0F90  160A  158A  25A2  120A  158A  	fcall	___awdiv
  4796  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4797  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0F97  0820               	movf	?___awdiv,w
  4799  0F98  00CB               	movwf	??_scale+5
  4800  0F99  3001               	movlw	1
  4801  0F9A                     u4275:
  4802  0F9A  1003               	clrc
  4803  0F9B  0DCB               	rlf	??_scale+5,f
  4804  0F9C  3EFF               	addlw	-1
  4805  0F9D  1D03               	skipz
  4806  0F9E  2F9A               	goto	u4275
  4807  0F9F  1003               	clrc
  4808  0FA0  0D4B               	rlf	??_scale+5,w
  4809  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4810  0FA2  0084               	movwf	4
  4811  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4812  0FA8  00CC               	movwf	??_scale+6
  4813  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4814  0FAE  00CD               	movwf	??_scale+7
  4815  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4816  0FB4  00CE               	movwf	??_scale+8
  4817  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4818  0FBA  00CF               	movwf	??_scale+9
  4819  0FBB  084F               	movf	??_scale+9,w
  4820  0FBC  00AF               	movwf	___flmul@a+3
  4821  0FBD  084E               	movf	??_scale+8,w
  4822  0FBE  00AE               	movwf	___flmul@a+2
  4823  0FBF  084D               	movf	??_scale+7,w
  4824  0FC0  00AD               	movwf	___flmul@a+1
  4825  0FC1  084C               	movf	??_scale+6,w
  4826  0FC2  00AC               	movwf	___flmul@a
  4827  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4828  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0FCA  082B               	movf	?___flmul+3,w
  4831  0FCB  00C5               	movwf	?_scale+3
  4832  0FCC  082A               	movf	?___flmul+2,w
  4833  0FCD  00C4               	movwf	?_scale+2
  4834  0FCE  0829               	movf	?___flmul+1,w
  4835  0FCF  00C3               	movwf	?_scale+1
  4836  0FD0  0828               	movf	?___flmul,w
  4837  0FD1  00C2               	movwf	?_scale
  4838  0FD2  2FFF               	goto	l362
  4839  0FD3                     l2966:
  4840                           
  4841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4842  0FD3  0854               	movf	scale@scl,w
  4843  0FD4  00C6               	movwf	??_scale
  4844  0FD5  3001               	movlw	1
  4845  0FD6                     u4285:
  4846  0FD6  1003               	clrc
  4847  0FD7  0DC6               	rlf	??_scale,f
  4848  0FD8  3EFF               	addlw	-1
  4849  0FD9  1D03               	skipz
  4850  0FDA  2FD6               	goto	u4285
  4851  0FDB  1003               	clrc
  4852  0FDC  0D46               	rlf	??_scale,w
  4853  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4854  0FDE  0084               	movwf	4
  4855  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4856  0FE4  00C7               	movwf	??_scale+1
  4857  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4858  0FEA  00C8               	movwf	??_scale+2
  4859  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4860  0FF0  00C9               	movwf	??_scale+3
  4861  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4862  0FF6  00CA               	movwf	??_scale+4
  4863  0FF7  084A               	movf	??_scale+4,w
  4864  0FF8  00C5               	movwf	?_scale+3
  4865  0FF9  0849               	movf	??_scale+3,w
  4866  0FFA  00C4               	movwf	?_scale+2
  4867  0FFB  0848               	movf	??_scale+2,w
  4868  0FFC  00C3               	movwf	?_scale+1
  4869  0FFD  0847               	movf	??_scale+1,w
  4870  0FFE  00C2               	movwf	?_scale
  4871  0FFF                     l362:
  4872  0FFF  0008               	return
  4873  1000                     __end_of_scale:
  4874                           
  4875                           	psect	text4
  4876  1CE1                     __ptext4:	
  4877 ;; *************** function ___awmod *****************
  4878 ;; Defined at:
  4879 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  divisor         2    2[COMMON] int 
  4882 ;;  dividend        2    4[COMMON] int 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  sign            1    8[COMMON] unsigned char 
  4885 ;;  counter         1    7[COMMON] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    2[COMMON] int 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4895 ;;      Params:         4       0       0       0       0
  4896 ;;      Locals:         2       0       0       0       0
  4897 ;;      Temps:          1       0       0       0       0
  4898 ;;      Totals:         7       0       0       0       0
  4899 ;;Total ram usage:        7 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    1
  4902 ;; This function calls:
  4903 ;;		Nothing
  4904 ;; This function is called by:
  4905 ;;		_scale
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           
  4910                           ;psect for function ___awmod
  4911  1CE1                     ___awmod:
  4912  1CE1                     l2482:	
  4913                           ;incstack = 0
  4914                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4915                           
  4916  1CE1  01F8               	clrf	___awmod@sign
  4917  1CE2                     l2484:
  4918  1CE2  1FF5               	btfss	___awmod@dividend+1,7
  4919  1CE3  2CE5               	goto	u2961
  4920  1CE4  2CE6               	goto	u2960
  4921  1CE5                     u2961:
  4922  1CE5  2CED               	goto	l2490
  4923  1CE6                     u2960:
  4924  1CE6                     l2486:
  4925  1CE6  09F4               	comf	___awmod@dividend,f
  4926  1CE7  09F5               	comf	___awmod@dividend+1,f
  4927  1CE8  0AF4               	incf	___awmod@dividend,f
  4928  1CE9  1903               	skipnz
  4929  1CEA  0AF5               	incf	___awmod@dividend+1,f
  4930  1CEB                     l2488:
  4931  1CEB  01F8               	clrf	___awmod@sign
  4932  1CEC  0AF8               	incf	___awmod@sign,f
  4933  1CED                     l2490:
  4934  1CED  1FF3               	btfss	___awmod@divisor+1,7
  4935  1CEE  2CF0               	goto	u2971
  4936  1CEF  2CF1               	goto	u2970
  4937  1CF0                     u2971:
  4938  1CF0  2CF6               	goto	l2494
  4939  1CF1                     u2970:
  4940  1CF1                     l2492:
  4941  1CF1  09F2               	comf	___awmod@divisor,f
  4942  1CF2  09F3               	comf	___awmod@divisor+1,f
  4943  1CF3  0AF2               	incf	___awmod@divisor,f
  4944  1CF4  1903               	skipnz
  4945  1CF5  0AF3               	incf	___awmod@divisor+1,f
  4946  1CF6                     l2494:
  4947  1CF6  0872               	movf	___awmod@divisor,w
  4948  1CF7  0473               	iorwf	___awmod@divisor+1,w
  4949  1CF8  1903               	btfsc	3,2
  4950  1CF9  2CFB               	goto	u2981
  4951  1CFA  2CFC               	goto	u2980
  4952  1CFB                     u2981:
  4953  1CFB  2D2B               	goto	l2512
  4954  1CFC                     u2980:
  4955  1CFC                     l2496:
  4956  1CFC  01F7               	clrf	___awmod@counter
  4957  1CFD  0AF7               	incf	___awmod@counter,f
  4958  1CFE  2D0A               	goto	l2502
  4959  1CFF                     l2498:
  4960  1CFF  3001               	movlw	1
  4961  1D00                     u2995:
  4962  1D00  1003               	clrc
  4963  1D01  0DF2               	rlf	___awmod@divisor,f
  4964  1D02  0DF3               	rlf	___awmod@divisor+1,f
  4965  1D03  3EFF               	addlw	-1
  4966  1D04  1D03               	skipz
  4967  1D05  2D00               	goto	u2995
  4968  1D06                     l2500:
  4969  1D06  3001               	movlw	1
  4970  1D07  00F6               	movwf	??___awmod
  4971  1D08  0876               	movf	??___awmod,w
  4972  1D09  07F7               	addwf	___awmod@counter,f
  4973  1D0A                     l2502:
  4974  1D0A  1FF3               	btfss	___awmod@divisor+1,7
  4975  1D0B  2D0D               	goto	u3001
  4976  1D0C  2D0E               	goto	u3000
  4977  1D0D                     u3001:
  4978  1D0D  2CFF               	goto	l2498
  4979  1D0E                     u3000:
  4980  1D0E                     l2504:
  4981  1D0E  0873               	movf	___awmod@divisor+1,w
  4982  1D0F  0275               	subwf	___awmod@dividend+1,w
  4983  1D10  1D03               	skipz
  4984  1D11  2D14               	goto	u3015
  4985  1D12  0872               	movf	___awmod@divisor,w
  4986  1D13  0274               	subwf	___awmod@dividend,w
  4987  1D14                     u3015:
  4988  1D14  1C03               	skipc
  4989  1D15  2D17               	goto	u3011
  4990  1D16  2D18               	goto	u3010
  4991  1D17                     u3011:
  4992  1D17  2D1E               	goto	l2508
  4993  1D18                     u3010:
  4994  1D18                     l2506:
  4995  1D18  0872               	movf	___awmod@divisor,w
  4996  1D19  02F4               	subwf	___awmod@dividend,f
  4997  1D1A  0873               	movf	___awmod@divisor+1,w
  4998  1D1B  1C03               	skipc
  4999  1D1C  03F5               	decf	___awmod@dividend+1,f
  5000  1D1D  02F5               	subwf	___awmod@dividend+1,f
  5001  1D1E                     l2508:
  5002  1D1E  3001               	movlw	1
  5003  1D1F                     u3025:
  5004  1D1F  1003               	clrc
  5005  1D20  0CF3               	rrf	___awmod@divisor+1,f
  5006  1D21  0CF2               	rrf	___awmod@divisor,f
  5007  1D22  3EFF               	addlw	-1
  5008  1D23  1D03               	skipz
  5009  1D24  2D1F               	goto	u3025
  5010  1D25                     l2510:
  5011  1D25  3001               	movlw	1
  5012  1D26  02F7               	subwf	___awmod@counter,f
  5013  1D27  1D03               	btfss	3,2
  5014  1D28  2D2A               	goto	u3031
  5015  1D29  2D2B               	goto	u3030
  5016  1D2A                     u3031:
  5017  1D2A  2D0E               	goto	l2504
  5018  1D2B                     u3030:
  5019  1D2B                     l2512:
  5020  1D2B  0878               	movf	___awmod@sign,w
  5021  1D2C  1903               	btfsc	3,2
  5022  1D2D  2D2F               	goto	u3041
  5023  1D2E  2D30               	goto	u3040
  5024  1D2F                     u3041:
  5025  1D2F  2D35               	goto	l2516
  5026  1D30                     u3040:
  5027  1D30                     l2514:
  5028  1D30  09F4               	comf	___awmod@dividend,f
  5029  1D31  09F5               	comf	___awmod@dividend+1,f
  5030  1D32  0AF4               	incf	___awmod@dividend,f
  5031  1D33  1903               	skipnz
  5032  1D34  0AF5               	incf	___awmod@dividend+1,f
  5033  1D35                     l2516:
  5034  1D35  0875               	movf	___awmod@dividend+1,w
  5035  1D36  00F3               	movwf	?___awmod+1
  5036  1D37  0874               	movf	___awmod@dividend,w
  5037  1D38  00F2               	movwf	?___awmod
  5038  1D39                     l607:
  5039  1D39  0008               	return
  5040  1D3A                     __end_of___awmod:
  5041                           
  5042                           	psect	text5
  5043  1DA2                     __ptext5:	
  5044 ;; *************** function ___awdiv *****************
  5045 ;; Defined at:
  5046 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  divisor         2    0[BANK0 ] int 
  5049 ;;  dividend        2    2[BANK0 ] int 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  quotient        2    6[BANK0 ] int 
  5052 ;;  sign            1    5[BANK0 ] unsigned char 
  5053 ;;  counter         1    4[BANK0 ] unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2    0[BANK0 ] int 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5063 ;;      Params:         0       4       0       0       0
  5064 ;;      Locals:         0       4       0       0       0
  5065 ;;      Temps:          1       0       0       0       0
  5066 ;;      Totals:         1       8       0       0       0
  5067 ;;Total ram usage:        9 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_scale
  5074 ;;		_sprintf
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function ___awdiv
  5080  1DA2                     ___awdiv:
  5081  1DA2                     l2438:	
  5082                           ;incstack = 0
  5083                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5084                           
  5085  1DA2  1283               	bcf	3,5	;RP0=0, select bank0
  5086  1DA3  1303               	bcf	3,6	;RP1=0, select bank0
  5087  1DA4  01A5               	clrf	___awdiv@sign
  5088  1DA5                     l2440:
  5089  1DA5  1FA1               	btfss	___awdiv@divisor+1,7
  5090  1DA6  2DA8               	goto	u2861
  5091  1DA7  2DA9               	goto	u2860
  5092  1DA8                     u2861:
  5093  1DA8  2DB0               	goto	l2446
  5094  1DA9                     u2860:
  5095  1DA9                     l2442:
  5096  1DA9  09A0               	comf	___awdiv@divisor,f
  5097  1DAA  09A1               	comf	___awdiv@divisor+1,f
  5098  1DAB  0AA0               	incf	___awdiv@divisor,f
  5099  1DAC  1903               	skipnz
  5100  1DAD  0AA1               	incf	___awdiv@divisor+1,f
  5101  1DAE                     l2444:
  5102  1DAE  01A5               	clrf	___awdiv@sign
  5103  1DAF  0AA5               	incf	___awdiv@sign,f
  5104  1DB0                     l2446:
  5105  1DB0  1FA3               	btfss	___awdiv@dividend+1,7
  5106  1DB1  2DB3               	goto	u2871
  5107  1DB2  2DB4               	goto	u2870
  5108  1DB3                     u2871:
  5109  1DB3  2DBD               	goto	l2452
  5110  1DB4                     u2870:
  5111  1DB4                     l2448:
  5112  1DB4  09A2               	comf	___awdiv@dividend,f
  5113  1DB5  09A3               	comf	___awdiv@dividend+1,f
  5114  1DB6  0AA2               	incf	___awdiv@dividend,f
  5115  1DB7  1903               	skipnz
  5116  1DB8  0AA3               	incf	___awdiv@dividend+1,f
  5117  1DB9                     l2450:
  5118  1DB9  3001               	movlw	1
  5119  1DBA  00F9               	movwf	??___awdiv
  5120  1DBB  0879               	movf	??___awdiv,w
  5121  1DBC  06A5               	xorwf	___awdiv@sign,f
  5122  1DBD                     l2452:
  5123  1DBD  01A6               	clrf	___awdiv@quotient
  5124  1DBE  01A7               	clrf	___awdiv@quotient+1
  5125  1DBF                     l2454:
  5126  1DBF  0820               	movf	___awdiv@divisor,w
  5127  1DC0  0421               	iorwf	___awdiv@divisor+1,w
  5128  1DC1  1903               	btfsc	3,2
  5129  1DC2  2DC4               	goto	u2881
  5130  1DC3  2DC5               	goto	u2880
  5131  1DC4                     u2881:
  5132  1DC4  2DFC               	goto	l2474
  5133  1DC5                     u2880:
  5134  1DC5                     l2456:
  5135  1DC5  01A4               	clrf	___awdiv@counter
  5136  1DC6  0AA4               	incf	___awdiv@counter,f
  5137  1DC7  2DD3               	goto	l2462
  5138  1DC8                     l2458:
  5139  1DC8  3001               	movlw	1
  5140  1DC9                     u2895:
  5141  1DC9  1003               	clrc
  5142  1DCA  0DA0               	rlf	___awdiv@divisor,f
  5143  1DCB  0DA1               	rlf	___awdiv@divisor+1,f
  5144  1DCC  3EFF               	addlw	-1
  5145  1DCD  1D03               	skipz
  5146  1DCE  2DC9               	goto	u2895
  5147  1DCF                     l2460:
  5148  1DCF  3001               	movlw	1
  5149  1DD0  00F9               	movwf	??___awdiv
  5150  1DD1  0879               	movf	??___awdiv,w
  5151  1DD2  07A4               	addwf	___awdiv@counter,f
  5152  1DD3                     l2462:
  5153  1DD3  1FA1               	btfss	___awdiv@divisor+1,7
  5154  1DD4  2DD6               	goto	u2901
  5155  1DD5  2DD7               	goto	u2900
  5156  1DD6                     u2901:
  5157  1DD6  2DC8               	goto	l2458
  5158  1DD7                     u2900:
  5159  1DD7                     l2464:
  5160  1DD7  3001               	movlw	1
  5161  1DD8                     u2915:
  5162  1DD8  1003               	clrc
  5163  1DD9  0DA6               	rlf	___awdiv@quotient,f
  5164  1DDA  0DA7               	rlf	___awdiv@quotient+1,f
  5165  1DDB  3EFF               	addlw	-1
  5166  1DDC  1D03               	skipz
  5167  1DDD  2DD8               	goto	u2915
  5168  1DDE  0821               	movf	___awdiv@divisor+1,w
  5169  1DDF  0223               	subwf	___awdiv@dividend+1,w
  5170  1DE0  1D03               	skipz
  5171  1DE1  2DE4               	goto	u2925
  5172  1DE2  0820               	movf	___awdiv@divisor,w
  5173  1DE3  0222               	subwf	___awdiv@dividend,w
  5174  1DE4                     u2925:
  5175  1DE4  1C03               	skipc
  5176  1DE5  2DE7               	goto	u2921
  5177  1DE6  2DE8               	goto	u2920
  5178  1DE7                     u2921:
  5179  1DE7  2DEF               	goto	l2470
  5180  1DE8                     u2920:
  5181  1DE8                     l2466:
  5182  1DE8  0820               	movf	___awdiv@divisor,w
  5183  1DE9  02A2               	subwf	___awdiv@dividend,f
  5184  1DEA  0821               	movf	___awdiv@divisor+1,w
  5185  1DEB  1C03               	skipc
  5186  1DEC  03A3               	decf	___awdiv@dividend+1,f
  5187  1DED  02A3               	subwf	___awdiv@dividend+1,f
  5188  1DEE                     l2468:
  5189  1DEE  1426               	bsf	___awdiv@quotient,0
  5190  1DEF                     l2470:
  5191  1DEF  3001               	movlw	1
  5192  1DF0                     u2935:
  5193  1DF0  1003               	clrc
  5194  1DF1  0CA1               	rrf	___awdiv@divisor+1,f
  5195  1DF2  0CA0               	rrf	___awdiv@divisor,f
  5196  1DF3  3EFF               	addlw	-1
  5197  1DF4  1D03               	skipz
  5198  1DF5  2DF0               	goto	u2935
  5199  1DF6                     l2472:
  5200  1DF6  3001               	movlw	1
  5201  1DF7  02A4               	subwf	___awdiv@counter,f
  5202  1DF8  1D03               	btfss	3,2
  5203  1DF9  2DFB               	goto	u2941
  5204  1DFA  2DFC               	goto	u2940
  5205  1DFB                     u2941:
  5206  1DFB  2DD7               	goto	l2464
  5207  1DFC                     u2940:
  5208  1DFC                     l2474:
  5209  1DFC  0825               	movf	___awdiv@sign,w
  5210  1DFD  1903               	btfsc	3,2
  5211  1DFE  2E00               	goto	u2951
  5212  1DFF  2E01               	goto	u2950
  5213  1E00                     u2951:
  5214  1E00  2E06               	goto	l2478
  5215  1E01                     u2950:
  5216  1E01                     l2476:
  5217  1E01  09A6               	comf	___awdiv@quotient,f
  5218  1E02  09A7               	comf	___awdiv@quotient+1,f
  5219  1E03  0AA6               	incf	___awdiv@quotient,f
  5220  1E04  1903               	skipnz
  5221  1E05  0AA7               	incf	___awdiv@quotient+1,f
  5222  1E06                     l2478:
  5223  1E06  0827               	movf	___awdiv@quotient+1,w
  5224  1E07  00A1               	movwf	?___awdiv+1
  5225  1E08  0826               	movf	___awdiv@quotient,w
  5226  1E09  00A0               	movwf	?___awdiv
  5227  1E0A                     l594:
  5228  1E0A  0008               	return
  5229  1E0B                     __end_of___awdiv:
  5230                           
  5231                           	psect	text6
  5232  1963                     __ptext6:	
  5233 ;; *************** function _isdigit *****************
  5234 ;; Defined at:
  5235 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  c               1    wreg     unsigned char 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  c               1    3[COMMON] unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;		None               void
  5242 ;; Registers used:
  5243 ;;		wreg, status,2, status,0
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5249 ;;      Params:         0       0       0       0       0
  5250 ;;      Locals:         2       0       0       0       0
  5251 ;;      Temps:          0       0       0       0       0
  5252 ;;      Totals:         2       0       0       0       0
  5253 ;;Total ram usage:        2 bytes
  5254 ;; Hardware stack levels used:    1
  5255 ;; Hardware stack levels required when called:    1
  5256 ;; This function calls:
  5257 ;;		Nothing
  5258 ;; This function is called by:
  5259 ;;		_sprintf
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           
  5264                           ;psect for function _isdigit
  5265  1963                     _isdigit:
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5269                           ;isdigit@c stored from wreg
  5270  1963  00F3               	movwf	isdigit@c
  5271  1964                     l2970:
  5272  1964  01F2               	clrf	_isdigit$1078
  5273  1965                     l2972:
  5274  1965  303A               	movlw	58
  5275  1966  0273               	subwf	isdigit@c,w
  5276  1967  1803               	skipnc
  5277  1968  296A               	goto	u4291
  5278  1969  296B               	goto	u4290
  5279  196A                     u4291:
  5280  196A  2973               	goto	l2978
  5281  196B                     u4290:
  5282  196B                     l2974:
  5283  196B  3030               	movlw	48
  5284  196C  0273               	subwf	isdigit@c,w
  5285  196D  1C03               	skipc
  5286  196E  2970               	goto	u4301
  5287  196F  2971               	goto	u4300
  5288  1970                     u4301:
  5289  1970  2973               	goto	l2978
  5290  1971                     u4300:
  5291  1971                     l2976:
  5292  1971  01F2               	clrf	_isdigit$1078
  5293  1972  0AF2               	incf	_isdigit$1078,f
  5294  1973                     l2978:
  5295  1973  0C72               	rrf	_isdigit$1078,w
  5296  1974                     l928:
  5297  1974  0008               	return
  5298  1975                     __end_of_isdigit:
  5299                           
  5300                           	psect	text7
  5301  136B                     __ptext7:	
  5302 ;; *************** function _fround *****************
  5303 ;; Defined at:
  5304 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;  prec            1    wreg     unsigned char 
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;  prec            1   53[BANK0 ] unsigned char 
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  4   34[BANK0 ] unsigned char 
  5311 ;; Registers used:
  5312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5318 ;;      Params:         0       4       0       0       0
  5319 ;;      Locals:         0       9       0       0       0
  5320 ;;      Temps:          0       7       0       0       0
  5321 ;;      Totals:         0      20       0       0       0
  5322 ;;Total ram usage:       20 bytes
  5323 ;; Hardware stack levels used:    1
  5324 ;; Hardware stack levels required when called:    3
  5325 ;; This function calls:
  5326 ;;		___flmul
  5327 ;;		___lwdiv
  5328 ;;		___lwmod
  5329 ;; This function is called by:
  5330 ;;		_sprintf
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           
  5335                           ;psect for function _fround
  5336  136B                     _fround:
  5337                           
  5338                           ;incstack = 0
  5339                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5340                           ;fround@prec stored from wreg
  5341  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5342  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5343  136D  00D5               	movwf	fround@prec
  5344  136E                     l3838:
  5345                           
  5346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5347  136E  306E               	movlw	110
  5348  136F  0255               	subwf	fround@prec,w
  5349  1370  1C03               	skipc
  5350  1371  2B73               	goto	u5721
  5351  1372  2B74               	goto	u5720
  5352  1373                     u5721:
  5353  1373  2C83               	goto	l3846
  5354  1374                     u5720:
  5355  1374                     l3840:
  5356                           
  5357                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5358  1374  303F               	movlw	63
  5359  1375  00AB               	movwf	___flmul@b+3
  5360  1376  3000               	movlw	0
  5361  1377  00AA               	movwf	___flmul@b+2
  5362  1378  3000               	movlw	0
  5363  1379  00A9               	movwf	___flmul@b+1
  5364  137A  3000               	movlw	0
  5365  137B  00A8               	movwf	___flmul@b
  5366  137C  3064               	movlw	100
  5367  137D  00A0               	movwf	___lwdiv@divisor
  5368  137E  3000               	movlw	0
  5369  137F  00A1               	movwf	___lwdiv@divisor+1
  5370  1380  0855               	movf	fround@prec,w
  5371  1381  00C6               	movwf	??_fround
  5372  1382  01C7               	clrf	??_fround+1
  5373  1383  0846               	movf	??_fround,w
  5374  1384  00A2               	movwf	___lwdiv@dividend
  5375  1385  0847               	movf	??_fround+1,w
  5376  1386  00A3               	movwf	___lwdiv@dividend+1
  5377  1387  160A  158A  235B  160A  118A  	fcall	___lwdiv
  5378  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5379  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5380  138E  0820               	movf	?___lwdiv,w
  5381  138F  00C8               	movwf	??_fround+2
  5382  1390  3001               	movlw	1
  5383  1391                     u5735:
  5384  1391  1003               	clrc
  5385  1392  0DC8               	rlf	??_fround+2,f
  5386  1393  3EFF               	addlw	-1
  5387  1394  1D03               	skipz
  5388  1395  2B91               	goto	u5735
  5389  1396  1003               	clrc
  5390  1397  0D48               	rlf	??_fround+2,w
  5391  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5392  1399  0084               	movwf	4
  5393  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  5394  139F  00C9               	movwf	??_fround+3
  5395  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  5396  13A5  00CA               	movwf	??_fround+4
  5397  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  5398  13AB  00CB               	movwf	??_fround+5
  5399  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5400  13B1  00CC               	movwf	??_fround+6
  5401  13B2  084C               	movf	??_fround+6,w
  5402  13B3  00AF               	movwf	___flmul@a+3
  5403  13B4  084B               	movf	??_fround+5,w
  5404  13B5  00AE               	movwf	___flmul@a+2
  5405  13B6  084A               	movf	??_fround+4,w
  5406  13B7  00AD               	movwf	___flmul@a+1
  5407  13B8  0849               	movf	??_fround+3,w
  5408  13B9  00AC               	movwf	___flmul@a
  5409  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5410  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5411  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5412  13C1  082B               	movf	?___flmul+3,w
  5413  13C2  00D4               	movwf	_fround$1280+3
  5414  13C3  082A               	movf	?___flmul+2,w
  5415  13C4  00D3               	movwf	_fround$1280+2
  5416  13C5  0829               	movf	?___flmul+1,w
  5417  13C6  00D2               	movwf	_fround$1280+1
  5418  13C7  0828               	movf	?___flmul,w
  5419  13C8  00D1               	movwf	_fround$1280
  5420                           
  5421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5422  13C9  300A               	movlw	10
  5423  13CA  00A0               	movwf	___lwdiv@divisor
  5424  13CB  3000               	movlw	0
  5425  13CC  00A1               	movwf	___lwdiv@divisor+1
  5426  13CD  0855               	movf	fround@prec,w
  5427  13CE  00C6               	movwf	??_fround
  5428  13CF  01C7               	clrf	??_fround+1
  5429  13D0  0846               	movf	??_fround,w
  5430  13D1  00F4               	movwf	___lwmod@dividend
  5431  13D2  0847               	movf	??_fround+1,w
  5432  13D3  00F5               	movwf	___lwmod@dividend+1
  5433  13D4  3064               	movlw	100
  5434  13D5  00F2               	movwf	___lwmod@divisor
  5435  13D6  3000               	movlw	0
  5436  13D7  00F3               	movwf	___lwmod@divisor+1
  5437  13D8  160A  158A  22DF  160A  118A  	fcall	___lwmod
  5438  13DD  0873               	movf	?___lwmod+1,w
  5439  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5440  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5441  13E0  00A3               	movwf	___lwdiv@dividend+1
  5442  13E1  0872               	movf	?___lwmod,w
  5443  13E2  00A2               	movwf	___lwdiv@dividend
  5444  13E3  160A  158A  235B  160A  118A  	fcall	___lwdiv
  5445  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5446  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5447  13EA  0820               	movf	?___lwdiv,w
  5448  13EB  00C8               	movwf	??_fround+2
  5449  13EC  3001               	movlw	1
  5450  13ED                     u5745:
  5451  13ED  1003               	clrc
  5452  13EE  0DC8               	rlf	??_fround+2,f
  5453  13EF  3EFF               	addlw	-1
  5454  13F0  1D03               	skipz
  5455  13F1  2BED               	goto	u5745
  5456  13F2  1003               	clrc
  5457  13F3  0D48               	rlf	??_fround+2,w
  5458  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5459  13F5  0084               	movwf	4
  5460  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5461  13FB  00C9               	movwf	??_fround+3
  5462  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5463  1401  00CA               	movwf	??_fround+4
  5464  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5465  1407  00CB               	movwf	??_fround+5
  5466  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5467  140D  00CC               	movwf	??_fround+6
  5468  140E  084C               	movf	??_fround+6,w
  5469  140F  00AB               	movwf	___flmul@b+3
  5470  1410  084B               	movf	??_fround+5,w
  5471  1411  00AA               	movwf	___flmul@b+2
  5472  1412  084A               	movf	??_fround+4,w
  5473  1413  00A9               	movwf	___flmul@b+1
  5474  1414  0849               	movf	??_fround+3,w
  5475  1415  00A8               	movwf	___flmul@b
  5476  1416  0854               	movf	_fround$1280+3,w
  5477  1417  00AF               	movwf	___flmul@a+3
  5478  1418  0853               	movf	_fround$1280+2,w
  5479  1419  00AE               	movwf	___flmul@a+2
  5480  141A  0852               	movf	_fround$1280+1,w
  5481  141B  00AD               	movwf	___flmul@a+1
  5482  141C  0851               	movf	_fround$1280,w
  5483  141D  00AC               	movwf	___flmul@a
  5484  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5485  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5486  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5487  1425  082B               	movf	?___flmul+3,w
  5488  1426  00D0               	movwf	_fround$1281+3
  5489  1427  082A               	movf	?___flmul+2,w
  5490  1428  00CF               	movwf	_fround$1281+2
  5491  1429  0829               	movf	?___flmul+1,w
  5492  142A  00CE               	movwf	_fround$1281+1
  5493  142B  0828               	movf	?___flmul,w
  5494  142C  00CD               	movwf	_fround$1281
  5495                           
  5496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5497  142D  300A               	movlw	10
  5498  142E  00F2               	movwf	___lwmod@divisor
  5499  142F  3000               	movlw	0
  5500  1430  00F3               	movwf	___lwmod@divisor+1
  5501  1431  0855               	movf	fround@prec,w
  5502  1432  00C6               	movwf	??_fround
  5503  1433  01C7               	clrf	??_fround+1
  5504  1434  0846               	movf	??_fround,w
  5505  1435  00F4               	movwf	___lwmod@dividend
  5506  1436  0847               	movf	??_fround+1,w
  5507  1437  00F5               	movwf	___lwmod@dividend+1
  5508  1438  160A  158A  22DF  160A  118A  	fcall	___lwmod
  5509  143D  0872               	movf	?___lwmod,w
  5510  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5511  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5512  1440  00C8               	movwf	??_fround+2
  5513  1441  3001               	movlw	1
  5514  1442                     u5755:
  5515  1442  1003               	clrc
  5516  1443  0DC8               	rlf	??_fround+2,f
  5517  1444  3EFF               	addlw	-1
  5518  1445  1D03               	skipz
  5519  1446  2C42               	goto	u5755
  5520  1447  1003               	clrc
  5521  1448  0D48               	rlf	??_fround+2,w
  5522  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5523  144A  0084               	movwf	4
  5524  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5525  1450  00C9               	movwf	??_fround+3
  5526  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5527  1456  00CA               	movwf	??_fround+4
  5528  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5529  145C  00CB               	movwf	??_fround+5
  5530  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5531  1462  00CC               	movwf	??_fround+6
  5532  1463  084C               	movf	??_fround+6,w
  5533  1464  00AB               	movwf	___flmul@b+3
  5534  1465  084B               	movf	??_fround+5,w
  5535  1466  00AA               	movwf	___flmul@b+2
  5536  1467  084A               	movf	??_fround+4,w
  5537  1468  00A9               	movwf	___flmul@b+1
  5538  1469  0849               	movf	??_fround+3,w
  5539  146A  00A8               	movwf	___flmul@b
  5540  146B  0850               	movf	_fround$1281+3,w
  5541  146C  00AF               	movwf	___flmul@a+3
  5542  146D  084F               	movf	_fround$1281+2,w
  5543  146E  00AE               	movwf	___flmul@a+2
  5544  146F  084E               	movf	_fround$1281+1,w
  5545  1470  00AD               	movwf	___flmul@a+1
  5546  1471  084D               	movf	_fround$1281,w
  5547  1472  00AC               	movwf	___flmul@a
  5548  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5549  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5550  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5551  147A  082B               	movf	?___flmul+3,w
  5552  147B  00C5               	movwf	?_fround+3
  5553  147C  082A               	movf	?___flmul+2,w
  5554  147D  00C4               	movwf	?_fround+2
  5555  147E  0829               	movf	?___flmul+1,w
  5556  147F  00C3               	movwf	?_fround+1
  5557  1480  0828               	movf	?___flmul,w
  5558  1481  00C2               	movwf	?_fround
  5559  1482  2D77               	goto	l355
  5560  1483                     l3846:
  5561  1483  300B               	movlw	11
  5562  1484  0255               	subwf	fround@prec,w
  5563  1485  1C03               	skipc
  5564  1486  2C88               	goto	u5761
  5565  1487  2C89               	goto	u5760
  5566  1488                     u5761:
  5567  1488  2D34               	goto	l3852
  5568  1489                     u5760:
  5569  1489                     l3848:
  5570                           
  5571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5572  1489  303F               	movlw	63
  5573  148A  00AB               	movwf	___flmul@b+3
  5574  148B  3000               	movlw	0
  5575  148C  00AA               	movwf	___flmul@b+2
  5576  148D  3000               	movlw	0
  5577  148E  00A9               	movwf	___flmul@b+1
  5578  148F  3000               	movlw	0
  5579  1490  00A8               	movwf	___flmul@b
  5580  1491  300A               	movlw	10
  5581  1492  00A0               	movwf	___lwdiv@divisor
  5582  1493  3000               	movlw	0
  5583  1494  00A1               	movwf	___lwdiv@divisor+1
  5584  1495  0855               	movf	fround@prec,w
  5585  1496  00C6               	movwf	??_fround
  5586  1497  01C7               	clrf	??_fround+1
  5587  1498  0846               	movf	??_fround,w
  5588  1499  00A2               	movwf	___lwdiv@dividend
  5589  149A  0847               	movf	??_fround+1,w
  5590  149B  00A3               	movwf	___lwdiv@dividend+1
  5591  149C  160A  158A  235B  160A  118A  	fcall	___lwdiv
  5592  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5593  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5594  14A3  0820               	movf	?___lwdiv,w
  5595  14A4  00C8               	movwf	??_fround+2
  5596  14A5  3001               	movlw	1
  5597  14A6                     u5775:
  5598  14A6  1003               	clrc
  5599  14A7  0DC8               	rlf	??_fround+2,f
  5600  14A8  3EFF               	addlw	-1
  5601  14A9  1D03               	skipz
  5602  14AA  2CA6               	goto	u5775
  5603  14AB  1003               	clrc
  5604  14AC  0D48               	rlf	??_fround+2,w
  5605  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5606  14AE  0084               	movwf	4
  5607  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5608  14B4  00C9               	movwf	??_fround+3
  5609  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5610  14BA  00CA               	movwf	??_fround+4
  5611  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5612  14C0  00CB               	movwf	??_fround+5
  5613  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5614  14C6  00CC               	movwf	??_fround+6
  5615  14C7  084C               	movf	??_fround+6,w
  5616  14C8  00AF               	movwf	___flmul@a+3
  5617  14C9  084B               	movf	??_fround+5,w
  5618  14CA  00AE               	movwf	___flmul@a+2
  5619  14CB  084A               	movf	??_fround+4,w
  5620  14CC  00AD               	movwf	___flmul@a+1
  5621  14CD  0849               	movf	??_fround+3,w
  5622  14CE  00AC               	movwf	___flmul@a
  5623  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5624  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5625  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5626  14D6  082B               	movf	?___flmul+3,w
  5627  14D7  00D4               	movwf	_fround$1280+3
  5628  14D8  082A               	movf	?___flmul+2,w
  5629  14D9  00D3               	movwf	_fround$1280+2
  5630  14DA  0829               	movf	?___flmul+1,w
  5631  14DB  00D2               	movwf	_fround$1280+1
  5632  14DC  0828               	movf	?___flmul,w
  5633  14DD  00D1               	movwf	_fround$1280
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5636  14DE  300A               	movlw	10
  5637  14DF  00F2               	movwf	___lwmod@divisor
  5638  14E0  3000               	movlw	0
  5639  14E1  00F3               	movwf	___lwmod@divisor+1
  5640  14E2  0855               	movf	fround@prec,w
  5641  14E3  00C6               	movwf	??_fround
  5642  14E4  01C7               	clrf	??_fround+1
  5643  14E5  0846               	movf	??_fround,w
  5644  14E6  00F4               	movwf	___lwmod@dividend
  5645  14E7  0847               	movf	??_fround+1,w
  5646  14E8  00F5               	movwf	___lwmod@dividend+1
  5647  14E9  160A  158A  22DF  160A  118A  	fcall	___lwmod
  5648  14EE  0872               	movf	?___lwmod,w
  5649  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5650  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5651  14F1  00C8               	movwf	??_fround+2
  5652  14F2  3001               	movlw	1
  5653  14F3                     u5785:
  5654  14F3  1003               	clrc
  5655  14F4  0DC8               	rlf	??_fround+2,f
  5656  14F5  3EFF               	addlw	-1
  5657  14F6  1D03               	skipz
  5658  14F7  2CF3               	goto	u5785
  5659  14F8  1003               	clrc
  5660  14F9  0D48               	rlf	??_fround+2,w
  5661  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5662  14FB  0084               	movwf	4
  5663  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5664  1501  00C9               	movwf	??_fround+3
  5665  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5666  1507  00CA               	movwf	??_fround+4
  5667  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5668  150D  00CB               	movwf	??_fround+5
  5669  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5670  1513  00CC               	movwf	??_fround+6
  5671  1514  084C               	movf	??_fround+6,w
  5672  1515  00AB               	movwf	___flmul@b+3
  5673  1516  084B               	movf	??_fround+5,w
  5674  1517  00AA               	movwf	___flmul@b+2
  5675  1518  084A               	movf	??_fround+4,w
  5676  1519  00A9               	movwf	___flmul@b+1
  5677  151A  0849               	movf	??_fround+3,w
  5678  151B  00A8               	movwf	___flmul@b
  5679  151C  0854               	movf	_fround$1280+3,w
  5680  151D  00AF               	movwf	___flmul@a+3
  5681  151E  0853               	movf	_fround$1280+2,w
  5682  151F  00AE               	movwf	___flmul@a+2
  5683  1520  0852               	movf	_fround$1280+1,w
  5684  1521  00AD               	movwf	___flmul@a+1
  5685  1522  0851               	movf	_fround$1280,w
  5686  1523  00AC               	movwf	___flmul@a
  5687  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5688  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5689  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5690  152B  082B               	movf	?___flmul+3,w
  5691  152C  00C5               	movwf	?_fround+3
  5692  152D  082A               	movf	?___flmul+2,w
  5693  152E  00C4               	movwf	?_fround+2
  5694  152F  0829               	movf	?___flmul+1,w
  5695  1530  00C3               	movwf	?_fround+1
  5696  1531  0828               	movf	?___flmul,w
  5697  1532  00C2               	movwf	?_fround
  5698  1533  2D77               	goto	l355
  5699  1534                     l3852:
  5700                           
  5701                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5702  1534  303F               	movlw	63
  5703  1535  00AB               	movwf	___flmul@b+3
  5704  1536  3000               	movlw	0
  5705  1537  00AA               	movwf	___flmul@b+2
  5706  1538  3000               	movlw	0
  5707  1539  00A9               	movwf	___flmul@b+1
  5708  153A  3000               	movlw	0
  5709  153B  00A8               	movwf	___flmul@b
  5710  153C  0855               	movf	fround@prec,w
  5711  153D  00C6               	movwf	??_fround
  5712  153E  3001               	movlw	1
  5713  153F                     u5795:
  5714  153F  1003               	clrc
  5715  1540  0DC6               	rlf	??_fround,f
  5716  1541  3EFF               	addlw	-1
  5717  1542  1D03               	skipz
  5718  1543  2D3F               	goto	u5795
  5719  1544  1003               	clrc
  5720  1545  0D46               	rlf	??_fround,w
  5721  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5722  1547  0084               	movwf	4
  5723  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5724  154D  00C7               	movwf	??_fround+1
  5725  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5726  1553  00C8               	movwf	??_fround+2
  5727  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5728  1559  00C9               	movwf	??_fround+3
  5729  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5730  155F  00CA               	movwf	??_fround+4
  5731  1560  084A               	movf	??_fround+4,w
  5732  1561  00AF               	movwf	___flmul@a+3
  5733  1562  0849               	movf	??_fround+3,w
  5734  1563  00AE               	movwf	___flmul@a+2
  5735  1564  0848               	movf	??_fround+2,w
  5736  1565  00AD               	movwf	___flmul@a+1
  5737  1566  0847               	movf	??_fround+1,w
  5738  1567  00AC               	movwf	___flmul@a
  5739  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5740  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5741  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5742  156F  082B               	movf	?___flmul+3,w
  5743  1570  00C5               	movwf	?_fround+3
  5744  1571  082A               	movf	?___flmul+2,w
  5745  1572  00C4               	movwf	?_fround+2
  5746  1573  0829               	movf	?___flmul+1,w
  5747  1574  00C3               	movwf	?_fround+1
  5748  1575  0828               	movf	?___flmul,w
  5749  1576  00C2               	movwf	?_fround
  5750  1577                     l355:
  5751  1577  0008               	return
  5752  1578                     __end_of_fround:
  5753                           
  5754                           	psect	text8
  5755  1ADF                     __ptext8:	
  5756 ;; *************** function ___lwmod *****************
  5757 ;; Defined at:
  5758 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  divisor         2    2[COMMON] unsigned int 
  5761 ;;  dividend        2    4[COMMON] unsigned int 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  counter         1    7[COMMON] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  2    2[COMMON] unsigned int 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5773 ;;      Params:         4       0       0       0       0
  5774 ;;      Locals:         1       0       0       0       0
  5775 ;;      Temps:          1       0       0       0       0
  5776 ;;      Totals:         6       0       0       0       0
  5777 ;;Total ram usage:        6 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    1
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_fround
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           
  5788                           ;psect for function ___lwmod
  5789  1ADF                     ___lwmod:
  5790  1ADF                     l2546:	
  5791                           ;incstack = 0
  5792                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5793                           
  5794  1ADF  0872               	movf	___lwmod@divisor,w
  5795  1AE0  0473               	iorwf	___lwmod@divisor+1,w
  5796  1AE1  1903               	btfsc	3,2
  5797  1AE2  2AE4               	goto	u3121
  5798  1AE3  2AE5               	goto	u3120
  5799  1AE4                     u3121:
  5800  1AE4  2B14               	goto	l2564
  5801  1AE5                     u3120:
  5802  1AE5                     l2548:
  5803  1AE5  01F7               	clrf	___lwmod@counter
  5804  1AE6  0AF7               	incf	___lwmod@counter,f
  5805  1AE7  2AF3               	goto	l2554
  5806  1AE8                     l2550:
  5807  1AE8  3001               	movlw	1
  5808  1AE9                     u3135:
  5809  1AE9  1003               	clrc
  5810  1AEA  0DF2               	rlf	___lwmod@divisor,f
  5811  1AEB  0DF3               	rlf	___lwmod@divisor+1,f
  5812  1AEC  3EFF               	addlw	-1
  5813  1AED  1D03               	skipz
  5814  1AEE  2AE9               	goto	u3135
  5815  1AEF                     l2552:
  5816  1AEF  3001               	movlw	1
  5817  1AF0  00F6               	movwf	??___lwmod
  5818  1AF1  0876               	movf	??___lwmod,w
  5819  1AF2  07F7               	addwf	___lwmod@counter,f
  5820  1AF3                     l2554:
  5821  1AF3  1FF3               	btfss	___lwmod@divisor+1,7
  5822  1AF4  2AF6               	goto	u3141
  5823  1AF5  2AF7               	goto	u3140
  5824  1AF6                     u3141:
  5825  1AF6  2AE8               	goto	l2550
  5826  1AF7                     u3140:
  5827  1AF7                     l2556:
  5828  1AF7  0873               	movf	___lwmod@divisor+1,w
  5829  1AF8  0275               	subwf	___lwmod@dividend+1,w
  5830  1AF9  1D03               	skipz
  5831  1AFA  2AFD               	goto	u3155
  5832  1AFB  0872               	movf	___lwmod@divisor,w
  5833  1AFC  0274               	subwf	___lwmod@dividend,w
  5834  1AFD                     u3155:
  5835  1AFD  1C03               	skipc
  5836  1AFE  2B00               	goto	u3151
  5837  1AFF  2B01               	goto	u3150
  5838  1B00                     u3151:
  5839  1B00  2B07               	goto	l2560
  5840  1B01                     u3150:
  5841  1B01                     l2558:
  5842  1B01  0872               	movf	___lwmod@divisor,w
  5843  1B02  02F4               	subwf	___lwmod@dividend,f
  5844  1B03  0873               	movf	___lwmod@divisor+1,w
  5845  1B04  1C03               	skipc
  5846  1B05  03F5               	decf	___lwmod@dividend+1,f
  5847  1B06  02F5               	subwf	___lwmod@dividend+1,f
  5848  1B07                     l2560:
  5849  1B07  3001               	movlw	1
  5850  1B08                     u3165:
  5851  1B08  1003               	clrc
  5852  1B09  0CF3               	rrf	___lwmod@divisor+1,f
  5853  1B0A  0CF2               	rrf	___lwmod@divisor,f
  5854  1B0B  3EFF               	addlw	-1
  5855  1B0C  1D03               	skipz
  5856  1B0D  2B08               	goto	u3165
  5857  1B0E                     l2562:
  5858  1B0E  3001               	movlw	1
  5859  1B0F  02F7               	subwf	___lwmod@counter,f
  5860  1B10  1D03               	btfss	3,2
  5861  1B11  2B13               	goto	u3171
  5862  1B12  2B14               	goto	u3170
  5863  1B13                     u3171:
  5864  1B13  2AF7               	goto	l2556
  5865  1B14                     u3170:
  5866  1B14                     l2564:
  5867  1B14  0875               	movf	___lwmod@dividend+1,w
  5868  1B15  00F3               	movwf	?___lwmod+1
  5869  1B16  0874               	movf	___lwmod@dividend,w
  5870  1B17  00F2               	movwf	?___lwmod
  5871  1B18                     l757:
  5872  1B18  0008               	return
  5873  1B19                     __end_of___lwmod:
  5874                           
  5875                           	psect	text9
  5876  1B5B                     __ptext9:	
  5877 ;; *************** function ___lwdiv *****************
  5878 ;; Defined at:
  5879 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  divisor         2    0[BANK0 ] unsigned int 
  5882 ;;  dividend        2    2[BANK0 ] unsigned int 
  5883 ;; Auto vars:     Size  Location     Type
  5884 ;;  quotient        2    5[BANK0 ] unsigned int 
  5885 ;;  counter         1    4[BANK0 ] unsigned char 
  5886 ;; Return value:  Size  Location     Type
  5887 ;;                  2    0[BANK0 ] unsigned int 
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5895 ;;      Params:         0       4       0       0       0
  5896 ;;      Locals:         0       3       0       0       0
  5897 ;;      Temps:          1       0       0       0       0
  5898 ;;      Totals:         1       7       0       0       0
  5899 ;;Total ram usage:        8 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    1
  5902 ;; This function calls:
  5903 ;;		Nothing
  5904 ;; This function is called by:
  5905 ;;		_fround
  5906 ;; This function uses a non-reentrant model
  5907 ;;
  5908                           
  5909                           
  5910                           ;psect for function ___lwdiv
  5911  1B5B                     ___lwdiv:
  5912  1B5B                     l3812:	
  5913                           ;incstack = 0
  5914                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5915                           
  5916  1B5B  1283               	bcf	3,5	;RP0=0, select bank0
  5917  1B5C  1303               	bcf	3,6	;RP1=0, select bank0
  5918  1B5D  01A5               	clrf	___lwdiv@quotient
  5919  1B5E  01A6               	clrf	___lwdiv@quotient+1
  5920  1B5F                     l3814:
  5921  1B5F  0820               	movf	___lwdiv@divisor,w
  5922  1B60  0421               	iorwf	___lwdiv@divisor+1,w
  5923  1B61  1903               	btfsc	3,2
  5924  1B62  2B64               	goto	u5651
  5925  1B63  2B65               	goto	u5650
  5926  1B64                     u5651:
  5927  1B64  2B9C               	goto	l3834
  5928  1B65                     u5650:
  5929  1B65                     l3816:
  5930  1B65  01A4               	clrf	___lwdiv@counter
  5931  1B66  0AA4               	incf	___lwdiv@counter,f
  5932  1B67  2B73               	goto	l3822
  5933  1B68                     l3818:
  5934  1B68  3001               	movlw	1
  5935  1B69                     u5665:
  5936  1B69  1003               	clrc
  5937  1B6A  0DA0               	rlf	___lwdiv@divisor,f
  5938  1B6B  0DA1               	rlf	___lwdiv@divisor+1,f
  5939  1B6C  3EFF               	addlw	-1
  5940  1B6D  1D03               	skipz
  5941  1B6E  2B69               	goto	u5665
  5942  1B6F                     l3820:
  5943  1B6F  3001               	movlw	1
  5944  1B70  00F8               	movwf	??___lwdiv
  5945  1B71  0878               	movf	??___lwdiv,w
  5946  1B72  07A4               	addwf	___lwdiv@counter,f
  5947  1B73                     l3822:
  5948  1B73  1FA1               	btfss	___lwdiv@divisor+1,7
  5949  1B74  2B76               	goto	u5671
  5950  1B75  2B77               	goto	u5670
  5951  1B76                     u5671:
  5952  1B76  2B68               	goto	l3818
  5953  1B77                     u5670:
  5954  1B77                     l3824:
  5955  1B77  3001               	movlw	1
  5956  1B78                     u5685:
  5957  1B78  1003               	clrc
  5958  1B79  0DA5               	rlf	___lwdiv@quotient,f
  5959  1B7A  0DA6               	rlf	___lwdiv@quotient+1,f
  5960  1B7B  3EFF               	addlw	-1
  5961  1B7C  1D03               	skipz
  5962  1B7D  2B78               	goto	u5685
  5963  1B7E  0821               	movf	___lwdiv@divisor+1,w
  5964  1B7F  0223               	subwf	___lwdiv@dividend+1,w
  5965  1B80  1D03               	skipz
  5966  1B81  2B84               	goto	u5695
  5967  1B82  0820               	movf	___lwdiv@divisor,w
  5968  1B83  0222               	subwf	___lwdiv@dividend,w
  5969  1B84                     u5695:
  5970  1B84  1C03               	skipc
  5971  1B85  2B87               	goto	u5691
  5972  1B86  2B88               	goto	u5690
  5973  1B87                     u5691:
  5974  1B87  2B8F               	goto	l3830
  5975  1B88                     u5690:
  5976  1B88                     l3826:
  5977  1B88  0820               	movf	___lwdiv@divisor,w
  5978  1B89  02A2               	subwf	___lwdiv@dividend,f
  5979  1B8A  0821               	movf	___lwdiv@divisor+1,w
  5980  1B8B  1C03               	skipc
  5981  1B8C  03A3               	decf	___lwdiv@dividend+1,f
  5982  1B8D  02A3               	subwf	___lwdiv@dividend+1,f
  5983  1B8E                     l3828:
  5984  1B8E  1425               	bsf	___lwdiv@quotient,0
  5985  1B8F                     l3830:
  5986  1B8F  3001               	movlw	1
  5987  1B90                     u5705:
  5988  1B90  1003               	clrc
  5989  1B91  0CA1               	rrf	___lwdiv@divisor+1,f
  5990  1B92  0CA0               	rrf	___lwdiv@divisor,f
  5991  1B93  3EFF               	addlw	-1
  5992  1B94  1D03               	skipz
  5993  1B95  2B90               	goto	u5705
  5994  1B96                     l3832:
  5995  1B96  3001               	movlw	1
  5996  1B97  02A4               	subwf	___lwdiv@counter,f
  5997  1B98  1D03               	btfss	3,2
  5998  1B99  2B9B               	goto	u5711
  5999  1B9A  2B9C               	goto	u5710
  6000  1B9B                     u5711:
  6001  1B9B  2B77               	goto	l3824
  6002  1B9C                     u5710:
  6003  1B9C                     l3834:
  6004  1B9C  0826               	movf	___lwdiv@quotient+1,w
  6005  1B9D  00A1               	movwf	?___lwdiv+1
  6006  1B9E  0825               	movf	___lwdiv@quotient,w
  6007  1B9F  00A0               	movwf	?___lwdiv
  6008  1BA0                     l747:
  6009  1BA0  0008               	return
  6010  1BA1                     __end_of___lwdiv:
  6011                           
  6012                           	psect	text10
  6013  093C                     __ptext10:	
  6014 ;; *************** function ___flmul *****************
  6015 ;; Defined at:
  6016 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  b               4    8[BANK0 ] unsigned int 
  6019 ;;  a               4   12[BANK0 ] unsigned int 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  prod            4   28[BANK0 ] struct .
  6022 ;;  grs             4   22[BANK0 ] unsigned long 
  6023 ;;  temp            2   32[BANK0 ] struct .
  6024 ;;  bexp            1   27[BANK0 ] unsigned char 
  6025 ;;  aexp            1   26[BANK0 ] unsigned char 
  6026 ;;  sign            1   21[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  4    8[BANK0 ] unsigned char 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6036 ;;      Params:         0       8       0       0       0
  6037 ;;      Locals:         0      13       0       0       0
  6038 ;;      Temps:          0       5       0       0       0
  6039 ;;      Totals:         0      26       0       0       0
  6040 ;;Total ram usage:       26 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    2
  6043 ;; This function calls:
  6044 ;;		__Umul8_16
  6045 ;; This function is called by:
  6046 ;;		_fround
  6047 ;;		_scale
  6048 ;;		_sprintf
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052                           
  6053                           ;psect for function ___flmul
  6054  093C                     ___flmul:
  6055  093C                     l2762:	
  6056                           ;incstack = 0
  6057                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6058                           
  6059  093C  1283               	bcf	3,5	;RP0=0, select bank0
  6060  093D  1303               	bcf	3,6	;RP1=0, select bank0
  6061  093E  082B               	movf	___flmul@b+3,w
  6062  093F  3980               	andlw	128
  6063  0940  00B0               	movwf	??___flmul
  6064  0941  0830               	movf	??___flmul,w
  6065  0942  00B5               	movwf	___flmul@sign
  6066  0943                     l2764:
  6067  0943  082B               	movf	___flmul@b+3,w
  6068  0944  00B0               	movwf	??___flmul
  6069  0945  0730               	addwf	??___flmul,w
  6070  0946  00B1               	movwf	??___flmul+1
  6071  0947  0831               	movf	??___flmul+1,w
  6072  0948  00BB               	movwf	___flmul@bexp
  6073  0949                     l2766:
  6074  0949  1FAA               	btfss	___flmul@b+2,7
  6075  094A  294C               	goto	u3641
  6076  094B  294D               	goto	u3640
  6077  094C                     u3641:
  6078  094C  294E               	goto	l2770
  6079  094D                     u3640:
  6080  094D                     l2768:
  6081  094D  143B               	bsf	___flmul@bexp,0
  6082  094E                     l2770:
  6083  094E  083B               	movf	___flmul@bexp,w
  6084  094F  1903               	btfsc	3,2
  6085  0950  2952               	goto	u3651
  6086  0951  2953               	goto	u3650
  6087  0952                     u3651:
  6088  0952  2962               	goto	l2778
  6089  0953                     u3650:
  6090  0953                     l2772:
  6091  0953  0A3B               	incf	___flmul@bexp,w
  6092  0954  1D03               	btfss	3,2
  6093  0955  2957               	goto	u3661
  6094  0956  2958               	goto	u3660
  6095  0957                     u3661:
  6096  0957  2960               	goto	l2776
  6097  0958                     u3660:
  6098  0958                     l2774:
  6099  0958  3000               	movlw	0
  6100  0959  00AB               	movwf	___flmul@b+3
  6101  095A  3000               	movlw	0
  6102  095B  00AA               	movwf	___flmul@b+2
  6103  095C  3000               	movlw	0
  6104  095D  00A9               	movwf	___flmul@b+1
  6105  095E  3000               	movlw	0
  6106  095F  00A8               	movwf	___flmul@b
  6107  0960                     l2776:
  6108  0960  17AA               	bsf	___flmul@b+2,7
  6109  0961  296A               	goto	l2780
  6110  0962                     l2778:
  6111  0962  3000               	movlw	0
  6112  0963  00AB               	movwf	___flmul@b+3
  6113  0964  3000               	movlw	0
  6114  0965  00AA               	movwf	___flmul@b+2
  6115  0966  3000               	movlw	0
  6116  0967  00A9               	movwf	___flmul@b+1
  6117  0968  3000               	movlw	0
  6118  0969  00A8               	movwf	___flmul@b
  6119  096A                     l2780:
  6120  096A  082F               	movf	___flmul@a+3,w
  6121  096B  3980               	andlw	128
  6122  096C  00B0               	movwf	??___flmul
  6123  096D  0830               	movf	??___flmul,w
  6124  096E  06B5               	xorwf	___flmul@sign,f
  6125  096F                     l2782:
  6126  096F  082F               	movf	___flmul@a+3,w
  6127  0970  00B0               	movwf	??___flmul
  6128  0971  0730               	addwf	??___flmul,w
  6129  0972  00B1               	movwf	??___flmul+1
  6130  0973  0831               	movf	??___flmul+1,w
  6131  0974  00BA               	movwf	___flmul@aexp
  6132  0975                     l2784:
  6133  0975  1FAE               	btfss	___flmul@a+2,7
  6134  0976  2978               	goto	u3671
  6135  0977  2979               	goto	u3670
  6136  0978                     u3671:
  6137  0978  297A               	goto	l2788
  6138  0979                     u3670:
  6139  0979                     l2786:
  6140  0979  143A               	bsf	___flmul@aexp,0
  6141  097A                     l2788:
  6142  097A  083A               	movf	___flmul@aexp,w
  6143  097B  1903               	btfsc	3,2
  6144  097C  297E               	goto	u3681
  6145  097D  297F               	goto	u3680
  6146  097E                     u3681:
  6147  097E  298E               	goto	l2796
  6148  097F                     u3680:
  6149  097F                     l2790:
  6150  097F  0A3A               	incf	___flmul@aexp,w
  6151  0980  1D03               	btfss	3,2
  6152  0981  2983               	goto	u3691
  6153  0982  2984               	goto	u3690
  6154  0983                     u3691:
  6155  0983  298C               	goto	l2794
  6156  0984                     u3690:
  6157  0984                     l2792:
  6158  0984  3000               	movlw	0
  6159  0985  00AF               	movwf	___flmul@a+3
  6160  0986  3000               	movlw	0
  6161  0987  00AE               	movwf	___flmul@a+2
  6162  0988  3000               	movlw	0
  6163  0989  00AD               	movwf	___flmul@a+1
  6164  098A  3000               	movlw	0
  6165  098B  00AC               	movwf	___flmul@a
  6166  098C                     l2794:
  6167  098C  17AE               	bsf	___flmul@a+2,7
  6168  098D  2996               	goto	l2798
  6169  098E                     l2796:
  6170  098E  3000               	movlw	0
  6171  098F  00AF               	movwf	___flmul@a+3
  6172  0990  3000               	movlw	0
  6173  0991  00AE               	movwf	___flmul@a+2
  6174  0992  3000               	movlw	0
  6175  0993  00AD               	movwf	___flmul@a+1
  6176  0994  3000               	movlw	0
  6177  0995  00AC               	movwf	___flmul@a
  6178  0996                     l2798:
  6179  0996  083A               	movf	___flmul@aexp,w
  6180  0997  1903               	btfsc	3,2
  6181  0998  299A               	goto	u3701
  6182  0999  299B               	goto	u3700
  6183  099A                     u3701:
  6184  099A  29A0               	goto	l2802
  6185  099B                     u3700:
  6186  099B                     l2800:
  6187  099B  083B               	movf	___flmul@bexp,w
  6188  099C  1D03               	btfss	3,2
  6189  099D  299F               	goto	u3711
  6190  099E  29A0               	goto	u3710
  6191  099F                     u3711:
  6192  099F  29A9               	goto	l2806
  6193  09A0                     u3710:
  6194  09A0                     l2802:
  6195  09A0  3000               	movlw	0
  6196  09A1  00AB               	movwf	?___flmul+3
  6197  09A2  3000               	movlw	0
  6198  09A3  00AA               	movwf	?___flmul+2
  6199  09A4  3000               	movlw	0
  6200  09A5  00A9               	movwf	?___flmul+1
  6201  09A6  3000               	movlw	0
  6202  09A7  00A8               	movwf	?___flmul
  6203  09A8  2C9C               	goto	l864
  6204  09A9                     l2806:
  6205  09A9  0828               	movf	___flmul@b,w
  6206  09AA  00B0               	movwf	??___flmul
  6207  09AB  0830               	movf	??___flmul,w
  6208  09AC  00F2               	movwf	__Umul8_16@multiplicand
  6209  09AD  082E               	movf	___flmul@a+2,w
  6210  09AE  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6211  09B3  0873               	movf	?__Umul8_16+1,w
  6212  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6213  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  6214  09B6  00C1               	movwf	___flmul@temp+1
  6215  09B7  0872               	movf	?__Umul8_16,w
  6216  09B8  00C0               	movwf	___flmul@temp
  6217  09B9                     l2808:
  6218  09B9  0840               	movf	___flmul@temp,w
  6219  09BA  00B0               	movwf	??___flmul
  6220  09BB  01B1               	clrf	??___flmul+1
  6221  09BC  01B2               	clrf	??___flmul+2
  6222  09BD  01B3               	clrf	??___flmul+3
  6223  09BE  0833               	movf	??___flmul+3,w
  6224  09BF  00B9               	movwf	___flmul@grs+3
  6225  09C0  0832               	movf	??___flmul+2,w
  6226  09C1  00B8               	movwf	___flmul@grs+2
  6227  09C2  0831               	movf	??___flmul+1,w
  6228  09C3  00B7               	movwf	___flmul@grs+1
  6229  09C4  0830               	movf	??___flmul,w
  6230  09C5  00B6               	movwf	___flmul@grs
  6231  09C6                     l2810:
  6232  09C6  0841               	movf	___flmul@temp+1,w
  6233  09C7  00B0               	movwf	??___flmul
  6234  09C8  01B1               	clrf	??___flmul+1
  6235  09C9  01B2               	clrf	??___flmul+2
  6236  09CA  01B3               	clrf	??___flmul+3
  6237  09CB  0833               	movf	??___flmul+3,w
  6238  09CC  00BF               	movwf	___flmul@prod+3
  6239  09CD  0832               	movf	??___flmul+2,w
  6240  09CE  00BE               	movwf	___flmul@prod+2
  6241  09CF  0831               	movf	??___flmul+1,w
  6242  09D0  00BD               	movwf	___flmul@prod+1
  6243  09D1  0830               	movf	??___flmul,w
  6244  09D2  00BC               	movwf	___flmul@prod
  6245  09D3  0829               	movf	___flmul@b+1,w
  6246  09D4  00B0               	movwf	??___flmul
  6247  09D5  0830               	movf	??___flmul,w
  6248  09D6  00F2               	movwf	__Umul8_16@multiplicand
  6249  09D7  082D               	movf	___flmul@a+1,w
  6250  09D8  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6251  09DD  0873               	movf	?__Umul8_16+1,w
  6252  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6253  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6254  09E0  00C1               	movwf	___flmul@temp+1
  6255  09E1  0872               	movf	?__Umul8_16,w
  6256  09E2  00C0               	movwf	___flmul@temp
  6257  09E3                     l2812:
  6258  09E3  0840               	movf	___flmul@temp,w
  6259  09E4  00B0               	movwf	??___flmul
  6260  09E5  01B1               	clrf	??___flmul+1
  6261  09E6  01B2               	clrf	??___flmul+2
  6262  09E7  01B3               	clrf	??___flmul+3
  6263  09E8  0830               	movf	??___flmul,w
  6264  09E9  07B6               	addwf	___flmul@grs,f
  6265  09EA  0831               	movf	??___flmul+1,w
  6266  09EB  1103               	clrz
  6267  09EC  1803               	skipnc
  6268  09ED  3E01               	addlw	1
  6269  09EE  1903               	skipnz
  6270  09EF  29F1               	goto	u3721
  6271  09F0  07B7               	addwf	___flmul@grs+1,f
  6272  09F1                     u3721:
  6273  09F1  0832               	movf	??___flmul+2,w
  6274  09F2  1103               	clrz
  6275  09F3  1803               	skipnc
  6276  09F4  3E01               	addlw	1
  6277  09F5  1903               	skipnz
  6278  09F6  29F8               	goto	u3722
  6279  09F7  07B8               	addwf	___flmul@grs+2,f
  6280  09F8                     u3722:
  6281  09F8  0833               	movf	??___flmul+3,w
  6282  09F9  1103               	clrz
  6283  09FA  1803               	skipnc
  6284  09FB  3E01               	addlw	1
  6285  09FC  1903               	skipnz
  6286  09FD  29FF               	goto	u3723
  6287  09FE  07B9               	addwf	___flmul@grs+3,f
  6288  09FF                     u3723:
  6289  09FF                     l2814:
  6290  09FF  0841               	movf	___flmul@temp+1,w
  6291  0A00  00B0               	movwf	??___flmul
  6292  0A01  01B1               	clrf	??___flmul+1
  6293  0A02  01B2               	clrf	??___flmul+2
  6294  0A03  01B3               	clrf	??___flmul+3
  6295  0A04  0830               	movf	??___flmul,w
  6296  0A05  07BC               	addwf	___flmul@prod,f
  6297  0A06  0831               	movf	??___flmul+1,w
  6298  0A07  1103               	clrz
  6299  0A08  1803               	skipnc
  6300  0A09  3E01               	addlw	1
  6301  0A0A  1903               	skipnz
  6302  0A0B  2A0D               	goto	u3731
  6303  0A0C  07BD               	addwf	___flmul@prod+1,f
  6304  0A0D                     u3731:
  6305  0A0D  0832               	movf	??___flmul+2,w
  6306  0A0E  1103               	clrz
  6307  0A0F  1803               	skipnc
  6308  0A10  3E01               	addlw	1
  6309  0A11  1903               	skipnz
  6310  0A12  2A14               	goto	u3732
  6311  0A13  07BE               	addwf	___flmul@prod+2,f
  6312  0A14                     u3732:
  6313  0A14  0833               	movf	??___flmul+3,w
  6314  0A15  1103               	clrz
  6315  0A16  1803               	skipnc
  6316  0A17  3E01               	addlw	1
  6317  0A18  1903               	skipnz
  6318  0A19  2A1B               	goto	u3733
  6319  0A1A  07BF               	addwf	___flmul@prod+3,f
  6320  0A1B                     u3733:
  6321  0A1B  082A               	movf	___flmul@b+2,w
  6322  0A1C  00B0               	movwf	??___flmul
  6323  0A1D  0830               	movf	??___flmul,w
  6324  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  6325  0A1F  082C               	movf	___flmul@a,w
  6326  0A20  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6327  0A25  0873               	movf	?__Umul8_16+1,w
  6328  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0A28  00C1               	movwf	___flmul@temp+1
  6331  0A29  0872               	movf	?__Umul8_16,w
  6332  0A2A  00C0               	movwf	___flmul@temp
  6333  0A2B                     l2816:
  6334  0A2B  0840               	movf	___flmul@temp,w
  6335  0A2C  00B0               	movwf	??___flmul
  6336  0A2D  01B1               	clrf	??___flmul+1
  6337  0A2E  01B2               	clrf	??___flmul+2
  6338  0A2F  01B3               	clrf	??___flmul+3
  6339  0A30  0830               	movf	??___flmul,w
  6340  0A31  07B6               	addwf	___flmul@grs,f
  6341  0A32  0831               	movf	??___flmul+1,w
  6342  0A33  1103               	clrz
  6343  0A34  1803               	skipnc
  6344  0A35  3E01               	addlw	1
  6345  0A36  1903               	skipnz
  6346  0A37  2A39               	goto	u3741
  6347  0A38  07B7               	addwf	___flmul@grs+1,f
  6348  0A39                     u3741:
  6349  0A39  0832               	movf	??___flmul+2,w
  6350  0A3A  1103               	clrz
  6351  0A3B  1803               	skipnc
  6352  0A3C  3E01               	addlw	1
  6353  0A3D  1903               	skipnz
  6354  0A3E  2A40               	goto	u3742
  6355  0A3F  07B8               	addwf	___flmul@grs+2,f
  6356  0A40                     u3742:
  6357  0A40  0833               	movf	??___flmul+3,w
  6358  0A41  1103               	clrz
  6359  0A42  1803               	skipnc
  6360  0A43  3E01               	addlw	1
  6361  0A44  1903               	skipnz
  6362  0A45  2A47               	goto	u3743
  6363  0A46  07B9               	addwf	___flmul@grs+3,f
  6364  0A47                     u3743:
  6365  0A47                     l2818:
  6366  0A47  0841               	movf	___flmul@temp+1,w
  6367  0A48  00B0               	movwf	??___flmul
  6368  0A49  01B1               	clrf	??___flmul+1
  6369  0A4A  01B2               	clrf	??___flmul+2
  6370  0A4B  01B3               	clrf	??___flmul+3
  6371  0A4C  0830               	movf	??___flmul,w
  6372  0A4D  07BC               	addwf	___flmul@prod,f
  6373  0A4E  0831               	movf	??___flmul+1,w
  6374  0A4F  1103               	clrz
  6375  0A50  1803               	skipnc
  6376  0A51  3E01               	addlw	1
  6377  0A52  1903               	skipnz
  6378  0A53  2A55               	goto	u3751
  6379  0A54  07BD               	addwf	___flmul@prod+1,f
  6380  0A55                     u3751:
  6381  0A55  0832               	movf	??___flmul+2,w
  6382  0A56  1103               	clrz
  6383  0A57  1803               	skipnc
  6384  0A58  3E01               	addlw	1
  6385  0A59  1903               	skipnz
  6386  0A5A  2A5C               	goto	u3752
  6387  0A5B  07BE               	addwf	___flmul@prod+2,f
  6388  0A5C                     u3752:
  6389  0A5C  0833               	movf	??___flmul+3,w
  6390  0A5D  1103               	clrz
  6391  0A5E  1803               	skipnc
  6392  0A5F  3E01               	addlw	1
  6393  0A60  1903               	skipnz
  6394  0A61  2A63               	goto	u3753
  6395  0A62  07BF               	addwf	___flmul@prod+3,f
  6396  0A63                     u3753:
  6397  0A63                     l2820:
  6398  0A63  3008               	movlw	8
  6399  0A64  00B0               	movwf	??___flmul
  6400  0A65                     u3765:
  6401  0A65  1003               	clrc
  6402  0A66  0DB6               	rlf	___flmul@grs,f
  6403  0A67  0DB7               	rlf	___flmul@grs+1,f
  6404  0A68  0DB8               	rlf	___flmul@grs+2,f
  6405  0A69  0DB9               	rlf	___flmul@grs+3,f
  6406  0A6A  0BB0               	decfsz	??___flmul,f
  6407  0A6B  2A65               	goto	u3765
  6408  0A6C                     l2822:
  6409  0A6C  0829               	movf	___flmul@b+1,w
  6410  0A6D  00B0               	movwf	??___flmul
  6411  0A6E  0830               	movf	??___flmul,w
  6412  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  6413  0A70  082C               	movf	___flmul@a,w
  6414  0A71  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6415  0A76  0873               	movf	?__Umul8_16+1,w
  6416  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6417  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6418  0A79  00C1               	movwf	___flmul@temp+1
  6419  0A7A  0872               	movf	?__Umul8_16,w
  6420  0A7B  00C0               	movwf	___flmul@temp
  6421  0A7C                     l2824:
  6422  0A7C  0840               	movf	___flmul@temp,w
  6423  0A7D  00B0               	movwf	??___flmul
  6424  0A7E  0841               	movf	___flmul@temp+1,w
  6425  0A7F  00B1               	movwf	??___flmul+1
  6426  0A80  01B2               	clrf	??___flmul+2
  6427  0A81  01B3               	clrf	??___flmul+3
  6428  0A82  0830               	movf	??___flmul,w
  6429  0A83  07B6               	addwf	___flmul@grs,f
  6430  0A84  0831               	movf	??___flmul+1,w
  6431  0A85  1103               	clrz
  6432  0A86  1803               	skipnc
  6433  0A87  3E01               	addlw	1
  6434  0A88  1903               	skipnz
  6435  0A89  2A8B               	goto	u3771
  6436  0A8A  07B7               	addwf	___flmul@grs+1,f
  6437  0A8B                     u3771:
  6438  0A8B  0832               	movf	??___flmul+2,w
  6439  0A8C  1103               	clrz
  6440  0A8D  1803               	skipnc
  6441  0A8E  3E01               	addlw	1
  6442  0A8F  1903               	skipnz
  6443  0A90  2A92               	goto	u3772
  6444  0A91  07B8               	addwf	___flmul@grs+2,f
  6445  0A92                     u3772:
  6446  0A92  0833               	movf	??___flmul+3,w
  6447  0A93  1103               	clrz
  6448  0A94  1803               	skipnc
  6449  0A95  3E01               	addlw	1
  6450  0A96  1903               	skipnz
  6451  0A97  2A99               	goto	u3773
  6452  0A98  07B9               	addwf	___flmul@grs+3,f
  6453  0A99                     u3773:
  6454  0A99                     l2826:
  6455  0A99  0828               	movf	___flmul@b,w
  6456  0A9A  00B0               	movwf	??___flmul
  6457  0A9B  0830               	movf	??___flmul,w
  6458  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  6459  0A9D  082D               	movf	___flmul@a+1,w
  6460  0A9E  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6461  0AA3  0873               	movf	?__Umul8_16+1,w
  6462  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6463  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6464  0AA6  00C1               	movwf	___flmul@temp+1
  6465  0AA7  0872               	movf	?__Umul8_16,w
  6466  0AA8  00C0               	movwf	___flmul@temp
  6467  0AA9                     l2828:
  6468  0AA9  0840               	movf	___flmul@temp,w
  6469  0AAA  00B0               	movwf	??___flmul
  6470  0AAB  0841               	movf	___flmul@temp+1,w
  6471  0AAC  00B1               	movwf	??___flmul+1
  6472  0AAD  01B2               	clrf	??___flmul+2
  6473  0AAE  01B3               	clrf	??___flmul+3
  6474  0AAF  0830               	movf	??___flmul,w
  6475  0AB0  07B6               	addwf	___flmul@grs,f
  6476  0AB1  0831               	movf	??___flmul+1,w
  6477  0AB2  1103               	clrz
  6478  0AB3  1803               	skipnc
  6479  0AB4  3E01               	addlw	1
  6480  0AB5  1903               	skipnz
  6481  0AB6  2AB8               	goto	u3781
  6482  0AB7  07B7               	addwf	___flmul@grs+1,f
  6483  0AB8                     u3781:
  6484  0AB8  0832               	movf	??___flmul+2,w
  6485  0AB9  1103               	clrz
  6486  0ABA  1803               	skipnc
  6487  0ABB  3E01               	addlw	1
  6488  0ABC  1903               	skipnz
  6489  0ABD  2ABF               	goto	u3782
  6490  0ABE  07B8               	addwf	___flmul@grs+2,f
  6491  0ABF                     u3782:
  6492  0ABF  0833               	movf	??___flmul+3,w
  6493  0AC0  1103               	clrz
  6494  0AC1  1803               	skipnc
  6495  0AC2  3E01               	addlw	1
  6496  0AC3  1903               	skipnz
  6497  0AC4  2AC6               	goto	u3783
  6498  0AC5  07B9               	addwf	___flmul@grs+3,f
  6499  0AC6                     u3783:
  6500  0AC6                     l2830:
  6501  0AC6  3008               	movlw	8
  6502  0AC7  00B0               	movwf	??___flmul
  6503  0AC8                     u3795:
  6504  0AC8  1003               	clrc
  6505  0AC9  0DB6               	rlf	___flmul@grs,f
  6506  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6507  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6508  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6509  0ACD  0BB0               	decfsz	??___flmul,f
  6510  0ACE  2AC8               	goto	u3795
  6511  0ACF  0828               	movf	___flmul@b,w
  6512  0AD0  00B0               	movwf	??___flmul
  6513  0AD1  0830               	movf	??___flmul,w
  6514  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  6515  0AD3  082C               	movf	___flmul@a,w
  6516  0AD4  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6517  0AD9  0873               	movf	?__Umul8_16+1,w
  6518  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6519  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0ADC  00C1               	movwf	___flmul@temp+1
  6521  0ADD  0872               	movf	?__Umul8_16,w
  6522  0ADE  00C0               	movwf	___flmul@temp
  6523  0ADF                     l2832:
  6524  0ADF  0840               	movf	___flmul@temp,w
  6525  0AE0  00B0               	movwf	??___flmul
  6526  0AE1  0841               	movf	___flmul@temp+1,w
  6527  0AE2  00B1               	movwf	??___flmul+1
  6528  0AE3  01B2               	clrf	??___flmul+2
  6529  0AE4  01B3               	clrf	??___flmul+3
  6530  0AE5  0830               	movf	??___flmul,w
  6531  0AE6  07B6               	addwf	___flmul@grs,f
  6532  0AE7  0831               	movf	??___flmul+1,w
  6533  0AE8  1103               	clrz
  6534  0AE9  1803               	skipnc
  6535  0AEA  3E01               	addlw	1
  6536  0AEB  1903               	skipnz
  6537  0AEC  2AEE               	goto	u3801
  6538  0AED  07B7               	addwf	___flmul@grs+1,f
  6539  0AEE                     u3801:
  6540  0AEE  0832               	movf	??___flmul+2,w
  6541  0AEF  1103               	clrz
  6542  0AF0  1803               	skipnc
  6543  0AF1  3E01               	addlw	1
  6544  0AF2  1903               	skipnz
  6545  0AF3  2AF5               	goto	u3802
  6546  0AF4  07B8               	addwf	___flmul@grs+2,f
  6547  0AF5                     u3802:
  6548  0AF5  0833               	movf	??___flmul+3,w
  6549  0AF6  1103               	clrz
  6550  0AF7  1803               	skipnc
  6551  0AF8  3E01               	addlw	1
  6552  0AF9  1903               	skipnz
  6553  0AFA  2AFC               	goto	u3803
  6554  0AFB  07B9               	addwf	___flmul@grs+3,f
  6555  0AFC                     u3803:
  6556  0AFC                     l2834:
  6557  0AFC  0829               	movf	___flmul@b+1,w
  6558  0AFD  00B0               	movwf	??___flmul
  6559  0AFE  0830               	movf	??___flmul,w
  6560  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  6561  0B00  082E               	movf	___flmul@a+2,w
  6562  0B01  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6563  0B06  0873               	movf	?__Umul8_16+1,w
  6564  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6565  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6566  0B09  00C1               	movwf	___flmul@temp+1
  6567  0B0A  0872               	movf	?__Umul8_16,w
  6568  0B0B  00C0               	movwf	___flmul@temp
  6569  0B0C  0840               	movf	___flmul@temp,w
  6570  0B0D  00B0               	movwf	??___flmul
  6571  0B0E  0841               	movf	___flmul@temp+1,w
  6572  0B0F  00B1               	movwf	??___flmul+1
  6573  0B10  01B2               	clrf	??___flmul+2
  6574  0B11  01B3               	clrf	??___flmul+3
  6575  0B12  0830               	movf	??___flmul,w
  6576  0B13  07BC               	addwf	___flmul@prod,f
  6577  0B14  0831               	movf	??___flmul+1,w
  6578  0B15  1103               	clrz
  6579  0B16  1803               	skipnc
  6580  0B17  3E01               	addlw	1
  6581  0B18  1903               	skipnz
  6582  0B19  2B1B               	goto	u3811
  6583  0B1A  07BD               	addwf	___flmul@prod+1,f
  6584  0B1B                     u3811:
  6585  0B1B  0832               	movf	??___flmul+2,w
  6586  0B1C  1103               	clrz
  6587  0B1D  1803               	skipnc
  6588  0B1E  3E01               	addlw	1
  6589  0B1F  1903               	skipnz
  6590  0B20  2B22               	goto	u3812
  6591  0B21  07BE               	addwf	___flmul@prod+2,f
  6592  0B22                     u3812:
  6593  0B22  0833               	movf	??___flmul+3,w
  6594  0B23  1103               	clrz
  6595  0B24  1803               	skipnc
  6596  0B25  3E01               	addlw	1
  6597  0B26  1903               	skipnz
  6598  0B27  2B29               	goto	u3813
  6599  0B28  07BF               	addwf	___flmul@prod+3,f
  6600  0B29                     u3813:
  6601  0B29                     l2836:
  6602  0B29  082A               	movf	___flmul@b+2,w
  6603  0B2A  00B0               	movwf	??___flmul
  6604  0B2B  0830               	movf	??___flmul,w
  6605  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  6606  0B2D  082D               	movf	___flmul@a+1,w
  6607  0B2E  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6608  0B33  0873               	movf	?__Umul8_16+1,w
  6609  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0B36  00C1               	movwf	___flmul@temp+1
  6612  0B37  0872               	movf	?__Umul8_16,w
  6613  0B38  00C0               	movwf	___flmul@temp
  6614  0B39                     l2838:
  6615  0B39  0840               	movf	___flmul@temp,w
  6616  0B3A  00B0               	movwf	??___flmul
  6617  0B3B  0841               	movf	___flmul@temp+1,w
  6618  0B3C  00B1               	movwf	??___flmul+1
  6619  0B3D  01B2               	clrf	??___flmul+2
  6620  0B3E  01B3               	clrf	??___flmul+3
  6621  0B3F  0830               	movf	??___flmul,w
  6622  0B40  07BC               	addwf	___flmul@prod,f
  6623  0B41  0831               	movf	??___flmul+1,w
  6624  0B42  1103               	clrz
  6625  0B43  1803               	skipnc
  6626  0B44  3E01               	addlw	1
  6627  0B45  1903               	skipnz
  6628  0B46  2B48               	goto	u3821
  6629  0B47  07BD               	addwf	___flmul@prod+1,f
  6630  0B48                     u3821:
  6631  0B48  0832               	movf	??___flmul+2,w
  6632  0B49  1103               	clrz
  6633  0B4A  1803               	skipnc
  6634  0B4B  3E01               	addlw	1
  6635  0B4C  1903               	skipnz
  6636  0B4D  2B4F               	goto	u3822
  6637  0B4E  07BE               	addwf	___flmul@prod+2,f
  6638  0B4F                     u3822:
  6639  0B4F  0833               	movf	??___flmul+3,w
  6640  0B50  1103               	clrz
  6641  0B51  1803               	skipnc
  6642  0B52  3E01               	addlw	1
  6643  0B53  1903               	skipnz
  6644  0B54  2B56               	goto	u3823
  6645  0B55  07BF               	addwf	___flmul@prod+3,f
  6646  0B56                     u3823:
  6647  0B56  082A               	movf	___flmul@b+2,w
  6648  0B57  00B0               	movwf	??___flmul
  6649  0B58  0830               	movf	??___flmul,w
  6650  0B59  00F2               	movwf	__Umul8_16@multiplicand
  6651  0B5A  082E               	movf	___flmul@a+2,w
  6652  0B5B  160A  158A  2219  120A  158A  	fcall	__Umul8_16
  6653  0B60  0873               	movf	?__Umul8_16+1,w
  6654  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6656  0B63  00C1               	movwf	___flmul@temp+1
  6657  0B64  0872               	movf	?__Umul8_16,w
  6658  0B65  00C0               	movwf	___flmul@temp
  6659  0B66                     l2840:
  6660  0B66  0840               	movf	___flmul@temp,w
  6661  0B67  00B0               	movwf	??___flmul
  6662  0B68  0841               	movf	___flmul@temp+1,w
  6663  0B69  00B1               	movwf	??___flmul+1
  6664  0B6A  01B2               	clrf	??___flmul+2
  6665  0B6B  01B3               	clrf	??___flmul+3
  6666  0B6C  3008               	movlw	8
  6667  0B6D                     u3835:
  6668  0B6D  1003               	clrc
  6669  0B6E  0DB0               	rlf	??___flmul,f
  6670  0B6F  0DB1               	rlf	??___flmul+1,f
  6671  0B70  0DB2               	rlf	??___flmul+2,f
  6672  0B71  0DB3               	rlf	??___flmul+3,f
  6673  0B72                     u3830:
  6674  0B72  3EFF               	addlw	-1
  6675  0B73  1D03               	skipz
  6676  0B74  2B6D               	goto	u3835
  6677  0B75  0830               	movf	??___flmul,w
  6678  0B76  07BC               	addwf	___flmul@prod,f
  6679  0B77  0831               	movf	??___flmul+1,w
  6680  0B78  1103               	clrz
  6681  0B79  1803               	skipnc
  6682  0B7A  3E01               	addlw	1
  6683  0B7B  1903               	skipnz
  6684  0B7C  2B7E               	goto	u3841
  6685  0B7D  07BD               	addwf	___flmul@prod+1,f
  6686  0B7E                     u3841:
  6687  0B7E  0832               	movf	??___flmul+2,w
  6688  0B7F  1103               	clrz
  6689  0B80  1803               	skipnc
  6690  0B81  3E01               	addlw	1
  6691  0B82  1903               	skipnz
  6692  0B83  2B85               	goto	u3842
  6693  0B84  07BE               	addwf	___flmul@prod+2,f
  6694  0B85                     u3842:
  6695  0B85  0833               	movf	??___flmul+3,w
  6696  0B86  1103               	clrz
  6697  0B87  1803               	skipnc
  6698  0B88  3E01               	addlw	1
  6699  0B89  1903               	skipnz
  6700  0B8A  2B8C               	goto	u3843
  6701  0B8B  07BF               	addwf	___flmul@prod+3,f
  6702  0B8C                     u3843:
  6703  0B8C                     l2842:
  6704  0B8C  0836               	movf	___flmul@grs,w
  6705  0B8D  00B0               	movwf	??___flmul
  6706  0B8E  0837               	movf	___flmul@grs+1,w
  6707  0B8F  00B1               	movwf	??___flmul+1
  6708  0B90  0838               	movf	___flmul@grs+2,w
  6709  0B91  00B2               	movwf	??___flmul+2
  6710  0B92  0839               	movf	___flmul@grs+3,w
  6711  0B93  00B3               	movwf	??___flmul+3
  6712  0B94  3018               	movlw	24
  6713  0B95                     u3855:
  6714  0B95  1003               	clrc
  6715  0B96  0CB3               	rrf	??___flmul+3,f
  6716  0B97  0CB2               	rrf	??___flmul+2,f
  6717  0B98  0CB1               	rrf	??___flmul+1,f
  6718  0B99  0CB0               	rrf	??___flmul,f
  6719  0B9A                     u3850:
  6720  0B9A  3EFF               	addlw	-1
  6721  0B9B  1D03               	skipz
  6722  0B9C  2B95               	goto	u3855
  6723  0B9D  0830               	movf	??___flmul,w
  6724  0B9E  07BC               	addwf	___flmul@prod,f
  6725  0B9F  0831               	movf	??___flmul+1,w
  6726  0BA0  1103               	clrz
  6727  0BA1  1803               	skipnc
  6728  0BA2  3E01               	addlw	1
  6729  0BA3  1903               	skipnz
  6730  0BA4  2BA6               	goto	u3861
  6731  0BA5  07BD               	addwf	___flmul@prod+1,f
  6732  0BA6                     u3861:
  6733  0BA6  0832               	movf	??___flmul+2,w
  6734  0BA7  1103               	clrz
  6735  0BA8  1803               	skipnc
  6736  0BA9  3E01               	addlw	1
  6737  0BAA  1903               	skipnz
  6738  0BAB  2BAD               	goto	u3862
  6739  0BAC  07BE               	addwf	___flmul@prod+2,f
  6740  0BAD                     u3862:
  6741  0BAD  0833               	movf	??___flmul+3,w
  6742  0BAE  1103               	clrz
  6743  0BAF  1803               	skipnc
  6744  0BB0  3E01               	addlw	1
  6745  0BB1  1903               	skipnz
  6746  0BB2  2BB4               	goto	u3863
  6747  0BB3  07BF               	addwf	___flmul@prod+3,f
  6748  0BB4                     u3863:
  6749  0BB4                     l2844:
  6750  0BB4  3008               	movlw	8
  6751  0BB5  00B0               	movwf	??___flmul
  6752  0BB6                     u3875:
  6753  0BB6  1003               	clrc
  6754  0BB7  0DB6               	rlf	___flmul@grs,f
  6755  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6756  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6757  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6758  0BBB  0BB0               	decfsz	??___flmul,f
  6759  0BBC  2BB6               	goto	u3875
  6760  0BBD                     l2846:
  6761  0BBD  083B               	movf	___flmul@bexp,w
  6762  0BBE  073A               	addwf	___flmul@aexp,w
  6763  0BBF  00B0               	movwf	??___flmul
  6764  0BC0  01B1               	clrf	??___flmul+1
  6765  0BC1  0DB1               	rlf	??___flmul+1,f
  6766  0BC2  0830               	movf	??___flmul,w
  6767  0BC3  3E82               	addlw	130
  6768  0BC4  00C0               	movwf	___flmul@temp
  6769  0BC5  0831               	movf	??___flmul+1,w
  6770  0BC6  1803               	skipnc
  6771  0BC7  3E01               	addlw	1
  6772  0BC8  3EFF               	addlw	255
  6773  0BC9  00C1               	movwf	___flmul@temp+1
  6774  0BCA  2BE8               	goto	l2858
  6775  0BCB                     l2848:
  6776  0BCB  3001               	movlw	1
  6777  0BCC  00B0               	movwf	??___flmul
  6778  0BCD                     u3885:
  6779  0BCD  1003               	clrc
  6780  0BCE  0DBC               	rlf	___flmul@prod,f
  6781  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6782  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6783  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6784  0BD2  0BB0               	decfsz	??___flmul,f
  6785  0BD3  2BCD               	goto	u3885
  6786  0BD4                     l2850:
  6787  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6788  0BD5  2BD7               	goto	u3891
  6789  0BD6  2BD8               	goto	u3890
  6790  0BD7                     u3891:
  6791  0BD7  2BD9               	goto	l2854
  6792  0BD8                     u3890:
  6793  0BD8                     l2852:
  6794  0BD8  143C               	bsf	___flmul@prod,0
  6795  0BD9                     l2854:
  6796  0BD9  3001               	movlw	1
  6797  0BDA  00B0               	movwf	??___flmul
  6798  0BDB                     u3905:
  6799  0BDB  1003               	clrc
  6800  0BDC  0DB6               	rlf	___flmul@grs,f
  6801  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6802  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6803  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6804  0BE0  0BB0               	decfsz	??___flmul,f
  6805  0BE1  2BDB               	goto	u3905
  6806  0BE2                     l2856:
  6807  0BE2  30FF               	movlw	255
  6808  0BE3  07C0               	addwf	___flmul@temp,f
  6809  0BE4  1803               	skipnc
  6810  0BE5  0AC1               	incf	___flmul@temp+1,f
  6811  0BE6  30FF               	movlw	255
  6812  0BE7  07C1               	addwf	___flmul@temp+1,f
  6813  0BE8                     l2858:
  6814  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6815  0BE9  2BEB               	goto	u3911
  6816  0BEA  2BEC               	goto	u3910
  6817  0BEB                     u3911:
  6818  0BEB  2BCB               	goto	l2848
  6819  0BEC                     u3910:
  6820  0BEC                     l2860:
  6821  0BEC  01BA               	clrf	___flmul@aexp
  6822  0BED                     l2862:
  6823  0BED  1FB9               	btfss	___flmul@grs+3,7
  6824  0BEE  2BF0               	goto	u3921
  6825  0BEF  2BF1               	goto	u3920
  6826  0BF0                     u3921:
  6827  0BF0  2C0D               	goto	l2870
  6828  0BF1                     u3920:
  6829  0BF1                     l2864:
  6830  0BF1  30FF               	movlw	255
  6831  0BF2  0536               	andwf	___flmul@grs,w
  6832  0BF3  00B0               	movwf	??___flmul
  6833  0BF4  30FF               	movlw	255
  6834  0BF5  0537               	andwf	___flmul@grs+1,w
  6835  0BF6  00B1               	movwf	??___flmul+1
  6836  0BF7  30FF               	movlw	255
  6837  0BF8  0538               	andwf	___flmul@grs+2,w
  6838  0BF9  00B2               	movwf	??___flmul+2
  6839  0BFA  307F               	movlw	127
  6840  0BFB  0539               	andwf	___flmul@grs+3,w
  6841  0BFC  00B3               	movwf	??___flmul+3
  6842  0BFD  0833               	movf	??___flmul+3,w
  6843  0BFE  0432               	iorwf	??___flmul+2,w
  6844  0BFF  0431               	iorwf	??___flmul+1,w
  6845  0C00  0430               	iorwf	??___flmul,w
  6846  0C01  1903               	skipnz
  6847  0C02  2C04               	goto	u3931
  6848  0C03  2C05               	goto	u3930
  6849  0C04                     u3931:
  6850  0C04  2C08               	goto	l870
  6851  0C05                     u3930:
  6852  0C05                     l2866:
  6853  0C05  01BA               	clrf	___flmul@aexp
  6854  0C06  0ABA               	incf	___flmul@aexp,f
  6855  0C07  2C0D               	goto	l2870
  6856  0C08                     l870:
  6857  0C08  1C3C               	btfss	___flmul@prod,0
  6858  0C09  2C0B               	goto	u3941
  6859  0C0A  2C0C               	goto	u3940
  6860  0C0B                     u3941:
  6861  0C0B  2C0D               	goto	l2870
  6862  0C0C                     u3940:
  6863  0C0C  2C05               	goto	l2866
  6864  0C0D                     l2870:
  6865  0C0D  083A               	movf	___flmul@aexp,w
  6866  0C0E  1903               	btfsc	3,2
  6867  0C0F  2C11               	goto	u3951
  6868  0C10  2C12               	goto	u3950
  6869  0C11                     u3951:
  6870  0C11  2C43               	goto	l2880
  6871  0C12                     u3950:
  6872  0C12                     l2872:
  6873  0C12  3001               	movlw	1
  6874  0C13  07BC               	addwf	___flmul@prod,f
  6875  0C14  3000               	movlw	0
  6876  0C15  1803               	skipnc
  6877  0C16  3001               	movlw	1
  6878  0C17  07BD               	addwf	___flmul@prod+1,f
  6879  0C18  3000               	movlw	0
  6880  0C19  1803               	skipnc
  6881  0C1A  3001               	movlw	1
  6882  0C1B  07BE               	addwf	___flmul@prod+2,f
  6883  0C1C  3000               	movlw	0
  6884  0C1D  1803               	skipnc
  6885  0C1E  3001               	movlw	1
  6886  0C1F  07BF               	addwf	___flmul@prod+3,f
  6887  0C20                     l2874:
  6888  0C20  1C3F               	btfss	___flmul@prod+3,0
  6889  0C21  2C23               	goto	u3961
  6890  0C22  2C24               	goto	u3960
  6891  0C23                     u3961:
  6892  0C23  2C43               	goto	l2880
  6893  0C24                     u3960:
  6894  0C24                     l2876:
  6895  0C24  083C               	movf	___flmul@prod,w
  6896  0C25  00B0               	movwf	??___flmul
  6897  0C26  083D               	movf	___flmul@prod+1,w
  6898  0C27  00B1               	movwf	??___flmul+1
  6899  0C28  083E               	movf	___flmul@prod+2,w
  6900  0C29  00B2               	movwf	??___flmul+2
  6901  0C2A  083F               	movf	___flmul@prod+3,w
  6902  0C2B  00B3               	movwf	??___flmul+3
  6903  0C2C  3001               	movlw	1
  6904  0C2D  00B4               	movwf	??___flmul+4
  6905  0C2E                     u3975:
  6906  0C2E  0D33               	rlf	??___flmul+3,w
  6907  0C2F  0CB3               	rrf	??___flmul+3,f
  6908  0C30  0CB2               	rrf	??___flmul+2,f
  6909  0C31  0CB1               	rrf	??___flmul+1,f
  6910  0C32  0CB0               	rrf	??___flmul,f
  6911  0C33                     u3970:
  6912  0C33  0BB4               	decfsz	??___flmul+4,f
  6913  0C34  2C2E               	goto	u3975
  6914  0C35  0833               	movf	??___flmul+3,w
  6915  0C36  00BF               	movwf	___flmul@prod+3
  6916  0C37  0832               	movf	??___flmul+2,w
  6917  0C38  00BE               	movwf	___flmul@prod+2
  6918  0C39  0831               	movf	??___flmul+1,w
  6919  0C3A  00BD               	movwf	___flmul@prod+1
  6920  0C3B  0830               	movf	??___flmul,w
  6921  0C3C  00BC               	movwf	___flmul@prod
  6922  0C3D                     l2878:
  6923  0C3D  3001               	movlw	1
  6924  0C3E  07C0               	addwf	___flmul@temp,f
  6925  0C3F  1803               	skipnc
  6926  0C40  0AC1               	incf	___flmul@temp+1,f
  6927  0C41  3000               	movlw	0
  6928  0C42  07C1               	addwf	___flmul@temp+1,f
  6929  0C43                     l2880:
  6930  0C43  0841               	movf	___flmul@temp+1,w
  6931  0C44  3A80               	xorlw	128
  6932  0C45  00FF               	movwf	btemp+1
  6933  0C46  3080               	movlw	128
  6934  0C47  027F               	subwf	btemp+1,w
  6935  0C48  1D03               	skipz
  6936  0C49  2C4C               	goto	u3985
  6937  0C4A  30FF               	movlw	255
  6938  0C4B  0240               	subwf	___flmul@temp,w
  6939  0C4C                     u3985:
  6940  0C4C  1C03               	skipc
  6941  0C4D  2C4F               	goto	u3981
  6942  0C4E  2C50               	goto	u3980
  6943  0C4F                     u3981:
  6944  0C4F  2C5B               	goto	l2884
  6945  0C50                     u3980:
  6946  0C50                     l2882:
  6947  0C50  307F               	movlw	127
  6948  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0C53  00BF               	movwf	___flmul@prod+3
  6951  0C54  3080               	movlw	128
  6952  0C55  00BE               	movwf	___flmul@prod+2
  6953  0C56  3000               	movlw	0
  6954  0C57  00BD               	movwf	___flmul@prod+1
  6955  0C58  3000               	movlw	0
  6956  0C59  00BC               	movwf	___flmul@prod
  6957  0C5A  2C90               	goto	l876
  6958  0C5B                     l2884:
  6959  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6960  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6961  0C5D  0841               	movf	___flmul@temp+1,w
  6962  0C5E  3A80               	xorlw	128
  6963  0C5F  00FF               	movwf	btemp+1
  6964  0C60  3080               	movlw	128
  6965  0C61  027F               	subwf	btemp+1,w
  6966  0C62  1D03               	skipz
  6967  0C63  2C66               	goto	u3995
  6968  0C64  3001               	movlw	1
  6969  0C65  0240               	subwf	___flmul@temp,w
  6970  0C66                     u3995:
  6971  0C66  1803               	skipnc
  6972  0C67  2C69               	goto	u3991
  6973  0C68  2C6A               	goto	u3990
  6974  0C69                     u3991:
  6975  0C69  2C76               	goto	l2890
  6976  0C6A                     u3990:
  6977  0C6A                     l2886:
  6978  0C6A  3000               	movlw	0
  6979  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6980  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6981  0C6D  00BF               	movwf	___flmul@prod+3
  6982  0C6E  3000               	movlw	0
  6983  0C6F  00BE               	movwf	___flmul@prod+2
  6984  0C70  3000               	movlw	0
  6985  0C71  00BD               	movwf	___flmul@prod+1
  6986  0C72  3000               	movlw	0
  6987  0C73  00BC               	movwf	___flmul@prod
  6988  0C74                     l2888:
  6989  0C74  01B5               	clrf	___flmul@sign
  6990  0C75  2C90               	goto	l876
  6991  0C76                     l2890:
  6992  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6993  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6994  0C78  0840               	movf	___flmul@temp,w
  6995  0C79  00B0               	movwf	??___flmul
  6996  0C7A  0830               	movf	??___flmul,w
  6997  0C7B  00BB               	movwf	___flmul@bexp
  6998  0C7C  30FF               	movlw	255
  6999  0C7D  05BC               	andwf	___flmul@prod,f
  7000  0C7E  30FF               	movlw	255
  7001  0C7F  05BD               	andwf	___flmul@prod+1,f
  7002  0C80  307F               	movlw	127
  7003  0C81  05BE               	andwf	___flmul@prod+2,f
  7004  0C82  3000               	movlw	0
  7005  0C83  05BF               	andwf	___flmul@prod+3,f
  7006  0C84                     l2892:
  7007  0C84  1C3B               	btfss	___flmul@bexp,0
  7008  0C85  2C87               	goto	u4001
  7009  0C86  2C88               	goto	u4000
  7010  0C87                     u4001:
  7011  0C87  2C89               	goto	l2896
  7012  0C88                     u4000:
  7013  0C88                     l2894:
  7014  0C88  17BE               	bsf	___flmul@prod+2,7
  7015  0C89                     l2896:
  7016  0C89  083B               	movf	___flmul@bexp,w
  7017  0C8A  00B0               	movwf	??___flmul
  7018  0C8B  1003               	clrc
  7019  0C8C  0C30               	rrf	??___flmul,w
  7020  0C8D  00B1               	movwf	??___flmul+1
  7021  0C8E  0831               	movf	??___flmul+1,w
  7022  0C8F  00BF               	movwf	___flmul@prod+3
  7023  0C90                     l876:
  7024  0C90  0835               	movf	___flmul@sign,w
  7025  0C91  00B0               	movwf	??___flmul
  7026  0C92  0830               	movf	??___flmul,w
  7027  0C93  04BF               	iorwf	___flmul@prod+3,f
  7028  0C94                     l2898:
  7029  0C94  083F               	movf	___flmul@prod+3,w
  7030  0C95  00AB               	movwf	?___flmul+3
  7031  0C96  083E               	movf	___flmul@prod+2,w
  7032  0C97  00AA               	movwf	?___flmul+2
  7033  0C98  083D               	movf	___flmul@prod+1,w
  7034  0C99  00A9               	movwf	?___flmul+1
  7035  0C9A  083C               	movf	___flmul@prod,w
  7036  0C9B  00A8               	movwf	?___flmul
  7037  0C9C                     l864:
  7038  0C9C  0008               	return
  7039  0C9D                     __end_of___flmul:
  7040                           
  7041                           	psect	text11
  7042  1A19                     __ptext11:	
  7043 ;; *************** function __Umul8_16 *****************
  7044 ;; Defined at:
  7045 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  multiplier      1    wreg     unsigned char 
  7048 ;;  multiplicand    1    2[COMMON] unsigned char 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  multiplier      1   10[COMMON] unsigned char 
  7051 ;;  word_mpld       2    8[COMMON] unsigned int 
  7052 ;;  product         2    6[COMMON] unsigned int 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2    2[COMMON] unsigned int 
  7055 ;; Registers used:
  7056 ;;		wreg, status,2, status,0
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7062 ;;      Params:         2       0       0       0       0
  7063 ;;      Locals:         5       0       0       0       0
  7064 ;;      Temps:          2       0       0       0       0
  7065 ;;      Totals:         9       0       0       0       0
  7066 ;;Total ram usage:        9 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		___flmul
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           
  7077                           ;psect for function __Umul8_16
  7078  1A19                     __Umul8_16:
  7079                           
  7080                           ;incstack = 0
  7081                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7082                           ;__Umul8_16@multiplier stored from wreg
  7083  1A19  00FA               	movwf	__Umul8_16@multiplier
  7084  1A1A                     l2424:
  7085  1A1A  01F6               	clrf	__Umul8_16@product
  7086  1A1B  01F7               	clrf	__Umul8_16@product+1
  7087  1A1C                     l2426:
  7088  1A1C  0872               	movf	__Umul8_16@multiplicand,w
  7089  1A1D  00F4               	movwf	??__Umul8_16
  7090  1A1E  01F5               	clrf	??__Umul8_16+1
  7091  1A1F  0874               	movf	??__Umul8_16,w
  7092  1A20  00F8               	movwf	__Umul8_16@word_mpld
  7093  1A21  0875               	movf	??__Umul8_16+1,w
  7094  1A22  00F9               	movwf	__Umul8_16@word_mpld+1
  7095  1A23                     l2428:
  7096  1A23  1C7A               	btfss	__Umul8_16@multiplier,0
  7097  1A24  2A26               	goto	u2831
  7098  1A25  2A27               	goto	u2830
  7099  1A26                     u2831:
  7100  1A26  2A2D               	goto	l883
  7101  1A27                     u2830:
  7102  1A27                     l2430:
  7103  1A27  0878               	movf	__Umul8_16@word_mpld,w
  7104  1A28  07F6               	addwf	__Umul8_16@product,f
  7105  1A29  1803               	skipnc
  7106  1A2A  0AF7               	incf	__Umul8_16@product+1,f
  7107  1A2B  0879               	movf	__Umul8_16@word_mpld+1,w
  7108  1A2C  07F7               	addwf	__Umul8_16@product+1,f
  7109  1A2D                     l883:
  7110  1A2D  3001               	movlw	1
  7111  1A2E                     u2845:
  7112  1A2E  1003               	clrc
  7113  1A2F  0DF8               	rlf	__Umul8_16@word_mpld,f
  7114  1A30  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  7115  1A31  3EFF               	addlw	-1
  7116  1A32  1D03               	skipz
  7117  1A33  2A2E               	goto	u2845
  7118  1A34  1003               	clrc
  7119  1A35  0CFA               	rrf	__Umul8_16@multiplier,f
  7120  1A36                     l2432:
  7121  1A36  087A               	movf	__Umul8_16@multiplier,w
  7122  1A37  1D03               	btfss	3,2
  7123  1A38  2A3A               	goto	u2851
  7124  1A39  2A3B               	goto	u2850
  7125  1A3A                     u2851:
  7126  1A3A  2A23               	goto	l2428
  7127  1A3B                     u2850:
  7128  1A3B                     l2434:
  7129  1A3B  0877               	movf	__Umul8_16@product+1,w
  7130  1A3C  00F3               	movwf	?__Umul8_16+1
  7131  1A3D  0876               	movf	__Umul8_16@product,w
  7132  1A3E  00F2               	movwf	?__Umul8_16
  7133  1A3F                     l885:
  7134  1A3F  0008               	return
  7135  1A40                     __end_of__Umul8_16:
  7136                           
  7137                           	psect	text12
  7138  1F43                     __ptext12:	
  7139 ;; *************** function __tdiv_to_l_ *****************
  7140 ;; Defined at:
  7141 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  f1              4    2[COMMON] float 
  7144 ;;  f2              4    6[COMMON] float 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  quot            4    4[BANK0 ] unsigned long 
  7147 ;;  exp1            1    9[BANK0 ] unsigned char 
  7148 ;;  cntr            1    8[BANK0 ] unsigned char 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  4    2[COMMON] unsigned long 
  7151 ;; Registers used:
  7152 ;;		wreg, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7158 ;;      Params:         8       0       0       0       0
  7159 ;;      Locals:         0       6       0       0       0
  7160 ;;      Temps:          0       4       0       0       0
  7161 ;;      Totals:         8      10       0       0       0
  7162 ;;Total ram usage:       18 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    1
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_sprintf
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           
  7172                           
  7173                           ;psect for function __tdiv_to_l_
  7174  1F43                     __tdiv_to_l_:
  7175  1F43                     l2982:	
  7176                           ;incstack = 0
  7177                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7178                           
  7179  1F43  0872               	movf	__tdiv_to_l_@f1,w
  7180  1F44  1283               	bcf	3,5	;RP0=0, select bank0
  7181  1F45  1303               	bcf	3,6	;RP1=0, select bank0
  7182  1F46  00A0               	movwf	??__tdiv_to_l_
  7183  1F47  0873               	movf	__tdiv_to_l_@f1+1,w
  7184  1F48  00A1               	movwf	??__tdiv_to_l_+1
  7185  1F49  0874               	movf	__tdiv_to_l_@f1+2,w
  7186  1F4A  00A2               	movwf	??__tdiv_to_l_+2
  7187  1F4B  1003               	clrc
  7188  1F4C  0D21               	rlf	??__tdiv_to_l_+1,w
  7189  1F4D  0D22               	rlf	??__tdiv_to_l_+2,w
  7190  1F4E  00A3               	movwf	??__tdiv_to_l_+3
  7191  1F4F  0823               	movf	??__tdiv_to_l_+3,w
  7192  1F50  00A9               	movwf	__tdiv_to_l_@exp1
  7193  1F51  0829               	movf	__tdiv_to_l_@exp1,w
  7194  1F52  1D03               	btfss	3,2
  7195  1F53  2F55               	goto	u4311
  7196  1F54  2F56               	goto	u4310
  7197  1F55                     u4311:
  7198  1F55  2F5F               	goto	l2988
  7199  1F56                     u4310:
  7200  1F56                     l2984:
  7201  1F56  3000               	movlw	0
  7202  1F57  00F5               	movwf	?__tdiv_to_l_+3
  7203  1F58  3000               	movlw	0
  7204  1F59  00F4               	movwf	?__tdiv_to_l_+2
  7205  1F5A  3000               	movlw	0
  7206  1F5B  00F3               	movwf	?__tdiv_to_l_+1
  7207  1F5C  3000               	movlw	0
  7208  1F5D  00F2               	movwf	?__tdiv_to_l_
  7209  1F5E  2FFF               	goto	l658
  7210  1F5F                     l2988:
  7211  1F5F  0876               	movf	__tdiv_to_l_@f2,w
  7212  1F60  00A0               	movwf	??__tdiv_to_l_
  7213  1F61  0877               	movf	__tdiv_to_l_@f2+1,w
  7214  1F62  00A1               	movwf	??__tdiv_to_l_+1
  7215  1F63  0878               	movf	__tdiv_to_l_@f2+2,w
  7216  1F64  00A2               	movwf	??__tdiv_to_l_+2
  7217  1F65  1003               	clrc
  7218  1F66  0D21               	rlf	??__tdiv_to_l_+1,w
  7219  1F67  0D22               	rlf	??__tdiv_to_l_+2,w
  7220  1F68  00A3               	movwf	??__tdiv_to_l_+3
  7221  1F69  0823               	movf	??__tdiv_to_l_+3,w
  7222  1F6A  00A8               	movwf	__tdiv_to_l_@cntr
  7223  1F6B  0828               	movf	__tdiv_to_l_@cntr,w
  7224  1F6C  1D03               	btfss	3,2
  7225  1F6D  2F6F               	goto	u4321
  7226  1F6E  2F70               	goto	u4320
  7227  1F6F                     u4321:
  7228  1F6F  2F71               	goto	l659
  7229  1F70                     u4320:
  7230  1F70  2F56               	goto	l2984
  7231  1F71                     l659:
  7232  1F71  17F3               	bsf	__tdiv_to_l_@f1+1,7
  7233  1F72                     l2994:
  7234  1F72  30FF               	movlw	255
  7235  1F73  05F2               	andwf	__tdiv_to_l_@f1,f
  7236  1F74  30FF               	movlw	255
  7237  1F75  05F3               	andwf	__tdiv_to_l_@f1+1,f
  7238  1F76  3000               	movlw	0
  7239  1F77  05F4               	andwf	__tdiv_to_l_@f1+2,f
  7240  1F78                     l2996:
  7241  1F78  17F7               	bsf	__tdiv_to_l_@f2+1,7
  7242  1F79  30FF               	movlw	255
  7243  1F7A  05F6               	andwf	__tdiv_to_l_@f2,f
  7244  1F7B  30FF               	movlw	255
  7245  1F7C  05F7               	andwf	__tdiv_to_l_@f2+1,f
  7246  1F7D  3000               	movlw	0
  7247  1F7E  05F8               	andwf	__tdiv_to_l_@f2+2,f
  7248  1F7F  3000               	movlw	0
  7249  1F80  00A7               	movwf	__tdiv_to_l_@quot+3
  7250  1F81  3000               	movlw	0
  7251  1F82  00A6               	movwf	__tdiv_to_l_@quot+2
  7252  1F83  3000               	movlw	0
  7253  1F84  00A5               	movwf	__tdiv_to_l_@quot+1
  7254  1F85  3000               	movlw	0
  7255  1F86  00A4               	movwf	__tdiv_to_l_@quot
  7256  1F87                     l2998:
  7257  1F87  307F               	movlw	127
  7258  1F88  02A9               	subwf	__tdiv_to_l_@exp1,f
  7259  1F89                     l3000:
  7260  1F89  3098               	movlw	152
  7261  1F8A  0728               	addwf	__tdiv_to_l_@cntr,w
  7262  1F8B  00A0               	movwf	??__tdiv_to_l_
  7263  1F8C  0820               	movf	??__tdiv_to_l_,w
  7264  1F8D  02A9               	subwf	__tdiv_to_l_@exp1,f
  7265  1F8E  3018               	movlw	24
  7266  1F8F  00A0               	movwf	??__tdiv_to_l_
  7267  1F90  0820               	movf	??__tdiv_to_l_,w
  7268  1F91  00A8               	movwf	__tdiv_to_l_@cntr
  7269  1F92                     l3002:
  7270  1F92  3001               	movlw	1
  7271  1F93  00A0               	movwf	??__tdiv_to_l_
  7272  1F94                     u4335:
  7273  1F94  1003               	clrc
  7274  1F95  0DA4               	rlf	__tdiv_to_l_@quot,f
  7275  1F96  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7276  1F97  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7277  1F98  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7278  1F99  0BA0               	decfsz	??__tdiv_to_l_,f
  7279  1F9A  2F94               	goto	u4335
  7280  1F9B                     l3004:
  7281  1F9B  0878               	movf	__tdiv_to_l_@f2+2,w
  7282  1F9C  0274               	subwf	__tdiv_to_l_@f1+2,w
  7283  1F9D  1D03               	skipz
  7284  1F9E  2FA5               	goto	u4345
  7285  1F9F  0877               	movf	__tdiv_to_l_@f2+1,w
  7286  1FA0  0273               	subwf	__tdiv_to_l_@f1+1,w
  7287  1FA1  1D03               	skipz
  7288  1FA2  2FA5               	goto	u4345
  7289  1FA3  0876               	movf	__tdiv_to_l_@f2,w
  7290  1FA4  0272               	subwf	__tdiv_to_l_@f1,w
  7291  1FA5                     u4345:
  7292  1FA5  1C03               	skipc
  7293  1FA6  2FA8               	goto	u4341
  7294  1FA7  2FA9               	goto	u4340
  7295  1FA8                     u4341:
  7296  1FA8  2FB4               	goto	l3010
  7297  1FA9                     u4340:
  7298  1FA9                     l3006:
  7299  1FA9  0876               	movf	__tdiv_to_l_@f2,w
  7300  1FAA  02F2               	subwf	__tdiv_to_l_@f1,f
  7301  1FAB  0877               	movf	__tdiv_to_l_@f2+1,w
  7302  1FAC  1C03               	skipc
  7303  1FAD  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  7304  1FAE  02F3               	subwf	__tdiv_to_l_@f1+1,f
  7305  1FAF  0878               	movf	__tdiv_to_l_@f2+2,w
  7306  1FB0  1C03               	skipc
  7307  1FB1  0A78               	incf	__tdiv_to_l_@f2+2,w
  7308  1FB2  02F4               	subwf	__tdiv_to_l_@f1+2,f
  7309  1FB3                     l3008:
  7310  1FB3  1424               	bsf	__tdiv_to_l_@quot,0
  7311  1FB4                     l3010:
  7312  1FB4  3001               	movlw	1
  7313  1FB5                     u4355:
  7314  1FB5  1003               	clrc
  7315  1FB6  0DF2               	rlf	__tdiv_to_l_@f1,f
  7316  1FB7  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  7317  1FB8  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  7318  1FB9  3EFF               	addlw	-1
  7319  1FBA  1D03               	skipz
  7320  1FBB  2FB5               	goto	u4355
  7321  1FBC                     l3012:
  7322  1FBC  3001               	movlw	1
  7323  1FBD  02A8               	subwf	__tdiv_to_l_@cntr,f
  7324  1FBE  1D03               	btfss	3,2
  7325  1FBF  2FC1               	goto	u4361
  7326  1FC0  2FC2               	goto	u4360
  7327  1FC1                     u4361:
  7328  1FC1  2F92               	goto	l3002
  7329  1FC2                     u4360:
  7330  1FC2                     l662:
  7331  1FC2  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7332  1FC3  2FC5               	goto	u4371
  7333  1FC4  2FC6               	goto	u4370
  7334  1FC5                     u4371:
  7335  1FC5  2FE0               	goto	l3022
  7336  1FC6                     u4370:
  7337  1FC6                     l3014:
  7338  1FC6  0829               	movf	__tdiv_to_l_@exp1,w
  7339  1FC7  3A80               	xorlw	128
  7340  1FC8  3E97               	addlw	151
  7341  1FC9  1803               	skipnc
  7342  1FCA  2FCC               	goto	u4381
  7343  1FCB  2FCD               	goto	u4380
  7344  1FCC                     u4381:
  7345  1FCC  2FCE               	goto	l3020
  7346  1FCD                     u4380:
  7347  1FCD  2F56               	goto	l2984
  7348  1FCE                     l3020:
  7349  1FCE  3001               	movlw	1
  7350  1FCF                     u4395:
  7351  1FCF  1003               	clrc
  7352  1FD0  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7353  1FD1  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7354  1FD2  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7355  1FD3  0CA4               	rrf	__tdiv_to_l_@quot,f
  7356  1FD4  3EFF               	addlw	-1
  7357  1FD5  1D03               	skipz
  7358  1FD6  2FCF               	goto	u4395
  7359  1FD7  3001               	movlw	1
  7360  1FD8  00A0               	movwf	??__tdiv_to_l_
  7361  1FD9  0820               	movf	??__tdiv_to_l_,w
  7362  1FDA  07A9               	addwf	__tdiv_to_l_@exp1,f
  7363  1FDB  1D03               	btfss	3,2
  7364  1FDC  2FDE               	goto	u4401
  7365  1FDD  2FDF               	goto	u4400
  7366  1FDE                     u4401:
  7367  1FDE  2FCE               	goto	l3020
  7368  1FDF                     u4400:
  7369  1FDF  2FF7               	goto	l3030
  7370  1FE0                     l3022:
  7371  1FE0  3018               	movlw	24
  7372  1FE1  0229               	subwf	__tdiv_to_l_@exp1,w
  7373  1FE2  1C03               	skipc
  7374  1FE3  2FE5               	goto	u4411
  7375  1FE4  2FE6               	goto	u4410
  7376  1FE5                     u4411:
  7377  1FE5  2FF2               	goto	l669
  7378  1FE6                     u4410:
  7379  1FE6  2F56               	goto	l2984
  7380  1FE7                     l3028:
  7381  1FE7  3001               	movlw	1
  7382  1FE8  00A0               	movwf	??__tdiv_to_l_
  7383  1FE9                     u4425:
  7384  1FE9  1003               	clrc
  7385  1FEA  0DA4               	rlf	__tdiv_to_l_@quot,f
  7386  1FEB  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7387  1FEC  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7388  1FED  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7389  1FEE  0BA0               	decfsz	??__tdiv_to_l_,f
  7390  1FEF  2FE9               	goto	u4425
  7391  1FF0  3001               	movlw	1
  7392  1FF1  02A9               	subwf	__tdiv_to_l_@exp1,f
  7393  1FF2                     l669:
  7394  1FF2  0829               	movf	__tdiv_to_l_@exp1,w
  7395  1FF3  1D03               	btfss	3,2
  7396  1FF4  2FF6               	goto	u4431
  7397  1FF5  2FF7               	goto	u4430
  7398  1FF6                     u4431:
  7399  1FF6  2FE7               	goto	l3028
  7400  1FF7                     u4430:
  7401  1FF7                     l3030:
  7402  1FF7  0827               	movf	__tdiv_to_l_@quot+3,w
  7403  1FF8  00F5               	movwf	?__tdiv_to_l_+3
  7404  1FF9  0826               	movf	__tdiv_to_l_@quot+2,w
  7405  1FFA  00F4               	movwf	?__tdiv_to_l_+2
  7406  1FFB  0825               	movf	__tdiv_to_l_@quot+1,w
  7407  1FFC  00F3               	movwf	?__tdiv_to_l_+1
  7408  1FFD  0824               	movf	__tdiv_to_l_@quot,w
  7409  1FFE  00F2               	movwf	?__tdiv_to_l_
  7410  1FFF                     l658:
  7411  1FFF  0008               	return
  7412  2000                     __end_of__tdiv_to_l_:
  7413                           
  7414                           	psect	text13
  7415  119F                     __ptext13:	
  7416 ;; *************** function __div_to_l_ *****************
  7417 ;; Defined at:
  7418 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  f1              4    2[COMMON] unsigned long 
  7421 ;;  f2              4    6[COMMON] unsigned long 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  quot            4    0[BANK0 ] unsigned long 
  7424 ;;  exp1            1    5[BANK0 ] unsigned char 
  7425 ;;  cntr            1    4[BANK0 ] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  4    2[COMMON] unsigned long 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7435 ;;      Params:         8       0       0       0       0
  7436 ;;      Locals:         0       6       0       0       0
  7437 ;;      Temps:          1       0       0       0       0
  7438 ;;      Totals:         9       6       0       0       0
  7439 ;;Total ram usage:       15 bytes
  7440 ;; Hardware stack levels used:    1
  7441 ;; Hardware stack levels required when called:    1
  7442 ;; This function calls:
  7443 ;;		Nothing
  7444 ;; This function is called by:
  7445 ;;		_sprintf
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function __div_to_l_
  7451  119F                     __div_to_l_:
  7452  119F                     l3034:	
  7453                           ;incstack = 0
  7454                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7455                           
  7456  119F  1003               	clrc
  7457  11A0  0D74               	rlf	__div_to_l_@f1+2,w
  7458  11A1  0D75               	rlf	__div_to_l_@f1+3,w
  7459  11A2  00FA               	movwf	??__div_to_l_
  7460  11A3  087A               	movf	??__div_to_l_,w
  7461  11A4  1283               	bcf	3,5	;RP0=0, select bank0
  7462  11A5  1303               	bcf	3,6	;RP1=0, select bank0
  7463  11A6  00A5               	movwf	__div_to_l_@exp1
  7464  11A7  0825               	movf	__div_to_l_@exp1,w
  7465  11A8  1D03               	btfss	3,2
  7466  11A9  29AB               	goto	u4441
  7467  11AA  29AC               	goto	u4440
  7468  11AB                     u4441:
  7469  11AB  29B5               	goto	l3040
  7470  11AC                     u4440:
  7471  11AC                     l3036:
  7472  11AC  3000               	movlw	0
  7473  11AD  00F5               	movwf	?__div_to_l_+3
  7474  11AE  3000               	movlw	0
  7475  11AF  00F4               	movwf	?__div_to_l_+2
  7476  11B0  3000               	movlw	0
  7477  11B1  00F3               	movwf	?__div_to_l_+1
  7478  11B2  3000               	movlw	0
  7479  11B3  00F2               	movwf	?__div_to_l_
  7480  11B4  2A5C               	goto	l611
  7481  11B5                     l3040:
  7482  11B5  1003               	clrc
  7483  11B6  0D78               	rlf	__div_to_l_@f2+2,w
  7484  11B7  0D79               	rlf	__div_to_l_@f2+3,w
  7485  11B8  00FA               	movwf	??__div_to_l_
  7486  11B9  087A               	movf	??__div_to_l_,w
  7487  11BA  00A4               	movwf	__div_to_l_@cntr
  7488  11BB  0824               	movf	__div_to_l_@cntr,w
  7489  11BC  1D03               	btfss	3,2
  7490  11BD  29BF               	goto	u4451
  7491  11BE  29C0               	goto	u4450
  7492  11BF                     u4451:
  7493  11BF  29C1               	goto	l612
  7494  11C0                     u4450:
  7495  11C0  29AC               	goto	l3036
  7496  11C1                     l612:
  7497  11C1  17F4               	bsf	__div_to_l_@f1+2,7
  7498  11C2                     l3046:
  7499  11C2  30FF               	movlw	255
  7500  11C3  05F2               	andwf	__div_to_l_@f1,f
  7501  11C4  30FF               	movlw	255
  7502  11C5  05F3               	andwf	__div_to_l_@f1+1,f
  7503  11C6  30FF               	movlw	255
  7504  11C7  05F4               	andwf	__div_to_l_@f1+2,f
  7505  11C8  3000               	movlw	0
  7506  11C9  05F5               	andwf	__div_to_l_@f1+3,f
  7507  11CA                     l3048:
  7508  11CA  17F8               	bsf	__div_to_l_@f2+2,7
  7509  11CB  30FF               	movlw	255
  7510  11CC  05F6               	andwf	__div_to_l_@f2,f
  7511  11CD  30FF               	movlw	255
  7512  11CE  05F7               	andwf	__div_to_l_@f2+1,f
  7513  11CF  30FF               	movlw	255
  7514  11D0  05F8               	andwf	__div_to_l_@f2+2,f
  7515  11D1  3000               	movlw	0
  7516  11D2  05F9               	andwf	__div_to_l_@f2+3,f
  7517  11D3  3000               	movlw	0
  7518  11D4  00A3               	movwf	__div_to_l_@quot+3
  7519  11D5  3000               	movlw	0
  7520  11D6  00A2               	movwf	__div_to_l_@quot+2
  7521  11D7  3000               	movlw	0
  7522  11D8  00A1               	movwf	__div_to_l_@quot+1
  7523  11D9  3000               	movlw	0
  7524  11DA  00A0               	movwf	__div_to_l_@quot
  7525  11DB                     l3050:
  7526  11DB  307F               	movlw	127
  7527  11DC  02A5               	subwf	__div_to_l_@exp1,f
  7528  11DD                     l3052:
  7529  11DD  30A0               	movlw	160
  7530  11DE  0724               	addwf	__div_to_l_@cntr,w
  7531  11DF  00FA               	movwf	??__div_to_l_
  7532  11E0  087A               	movf	??__div_to_l_,w
  7533  11E1  02A5               	subwf	__div_to_l_@exp1,f
  7534  11E2  3020               	movlw	32
  7535  11E3  00FA               	movwf	??__div_to_l_
  7536  11E4  087A               	movf	??__div_to_l_,w
  7537  11E5  00A4               	movwf	__div_to_l_@cntr
  7538  11E6                     l3054:
  7539  11E6  3001               	movlw	1
  7540  11E7  00FA               	movwf	??__div_to_l_
  7541  11E8                     u4465:
  7542  11E8  1003               	clrc
  7543  11E9  0DA0               	rlf	__div_to_l_@quot,f
  7544  11EA  0DA1               	rlf	__div_to_l_@quot+1,f
  7545  11EB  0DA2               	rlf	__div_to_l_@quot+2,f
  7546  11EC  0DA3               	rlf	__div_to_l_@quot+3,f
  7547  11ED  0BFA               	decfsz	??__div_to_l_,f
  7548  11EE  29E8               	goto	u4465
  7549  11EF                     l3056:
  7550  11EF  0879               	movf	__div_to_l_@f2+3,w
  7551  11F0  0275               	subwf	__div_to_l_@f1+3,w
  7552  11F1  1D03               	skipz
  7553  11F2  29FD               	goto	u4475
  7554  11F3  0878               	movf	__div_to_l_@f2+2,w
  7555  11F4  0274               	subwf	__div_to_l_@f1+2,w
  7556  11F5  1D03               	skipz
  7557  11F6  29FD               	goto	u4475
  7558  11F7  0877               	movf	__div_to_l_@f2+1,w
  7559  11F8  0273               	subwf	__div_to_l_@f1+1,w
  7560  11F9  1D03               	skipz
  7561  11FA  29FD               	goto	u4475
  7562  11FB  0876               	movf	__div_to_l_@f2,w
  7563  11FC  0272               	subwf	__div_to_l_@f1,w
  7564  11FD                     u4475:
  7565  11FD  1C03               	skipc
  7566  11FE  2A00               	goto	u4471
  7567  11FF  2A01               	goto	u4470
  7568  1200                     u4471:
  7569  1200  2A10               	goto	l3062
  7570  1201                     u4470:
  7571  1201                     l3058:
  7572  1201  0876               	movf	__div_to_l_@f2,w
  7573  1202  02F2               	subwf	__div_to_l_@f1,f
  7574  1203  0877               	movf	__div_to_l_@f2+1,w
  7575  1204  1C03               	skipc
  7576  1205  0F77               	incfsz	__div_to_l_@f2+1,w
  7577  1206  02F3               	subwf	__div_to_l_@f1+1,f
  7578  1207  0878               	movf	__div_to_l_@f2+2,w
  7579  1208  1C03               	skipc
  7580  1209  0F78               	incfsz	__div_to_l_@f2+2,w
  7581  120A  02F4               	subwf	__div_to_l_@f1+2,f
  7582  120B  0879               	movf	__div_to_l_@f2+3,w
  7583  120C  1C03               	skipc
  7584  120D  0F79               	incfsz	__div_to_l_@f2+3,w
  7585  120E  02F5               	subwf	__div_to_l_@f1+3,f
  7586  120F                     l3060:
  7587  120F  1420               	bsf	__div_to_l_@quot,0
  7588  1210                     l3062:
  7589  1210  3001               	movlw	1
  7590  1211  00FA               	movwf	??__div_to_l_
  7591  1212                     u4485:
  7592  1212  1003               	clrc
  7593  1213  0DF2               	rlf	__div_to_l_@f1,f
  7594  1214  0DF3               	rlf	__div_to_l_@f1+1,f
  7595  1215  0DF4               	rlf	__div_to_l_@f1+2,f
  7596  1216  0DF5               	rlf	__div_to_l_@f1+3,f
  7597  1217  0BFA               	decfsz	??__div_to_l_,f
  7598  1218  2A12               	goto	u4485
  7599  1219                     l3064:
  7600  1219  3001               	movlw	1
  7601  121A  02A4               	subwf	__div_to_l_@cntr,f
  7602  121B  1D03               	btfss	3,2
  7603  121C  2A1E               	goto	u4491
  7604  121D  2A1F               	goto	u4490
  7605  121E                     u4491:
  7606  121E  29E6               	goto	l3054
  7607  121F                     u4490:
  7608  121F                     l615:
  7609  121F  1FA5               	btfss	__div_to_l_@exp1,7
  7610  1220  2A22               	goto	u4501
  7611  1221  2A23               	goto	u4500
  7612  1222                     u4501:
  7613  1222  2A3D               	goto	l3074
  7614  1223                     u4500:
  7615  1223                     l3066:
  7616  1223  0825               	movf	__div_to_l_@exp1,w
  7617  1224  3A80               	xorlw	128
  7618  1225  3E9F               	addlw	159
  7619  1226  1803               	skipnc
  7620  1227  2A29               	goto	u4511
  7621  1228  2A2A               	goto	u4510
  7622  1229                     u4511:
  7623  1229  2A2B               	goto	l3072
  7624  122A                     u4510:
  7625  122A  29AC               	goto	l3036
  7626  122B                     l3072:
  7627  122B  3001               	movlw	1
  7628  122C                     u4525:
  7629  122C  1003               	clrc
  7630  122D  0CA3               	rrf	__div_to_l_@quot+3,f
  7631  122E  0CA2               	rrf	__div_to_l_@quot+2,f
  7632  122F  0CA1               	rrf	__div_to_l_@quot+1,f
  7633  1230  0CA0               	rrf	__div_to_l_@quot,f
  7634  1231  3EFF               	addlw	-1
  7635  1232  1D03               	skipz
  7636  1233  2A2C               	goto	u4525
  7637  1234  3001               	movlw	1
  7638  1235  00FA               	movwf	??__div_to_l_
  7639  1236  087A               	movf	??__div_to_l_,w
  7640  1237  07A5               	addwf	__div_to_l_@exp1,f
  7641  1238  1D03               	btfss	3,2
  7642  1239  2A3B               	goto	u4531
  7643  123A  2A3C               	goto	u4530
  7644  123B                     u4531:
  7645  123B  2A2B               	goto	l3072
  7646  123C                     u4530:
  7647  123C  2A54               	goto	l3082
  7648  123D                     l3074:
  7649  123D  3020               	movlw	32
  7650  123E  0225               	subwf	__div_to_l_@exp1,w
  7651  123F  1C03               	skipc
  7652  1240  2A42               	goto	u4541
  7653  1241  2A43               	goto	u4540
  7654  1242                     u4541:
  7655  1242  2A4F               	goto	l622
  7656  1243                     u4540:
  7657  1243  29AC               	goto	l3036
  7658  1244                     l3080:
  7659  1244  3001               	movlw	1
  7660  1245  00FA               	movwf	??__div_to_l_
  7661  1246                     u4555:
  7662  1246  1003               	clrc
  7663  1247  0DA0               	rlf	__div_to_l_@quot,f
  7664  1248  0DA1               	rlf	__div_to_l_@quot+1,f
  7665  1249  0DA2               	rlf	__div_to_l_@quot+2,f
  7666  124A  0DA3               	rlf	__div_to_l_@quot+3,f
  7667  124B  0BFA               	decfsz	??__div_to_l_,f
  7668  124C  2A46               	goto	u4555
  7669  124D  3001               	movlw	1
  7670  124E  02A5               	subwf	__div_to_l_@exp1,f
  7671  124F                     l622:
  7672  124F  0825               	movf	__div_to_l_@exp1,w
  7673  1250  1D03               	btfss	3,2
  7674  1251  2A53               	goto	u4561
  7675  1252  2A54               	goto	u4560
  7676  1253                     u4561:
  7677  1253  2A44               	goto	l3080
  7678  1254                     u4560:
  7679  1254                     l3082:
  7680  1254  0823               	movf	__div_to_l_@quot+3,w
  7681  1255  00F5               	movwf	?__div_to_l_+3
  7682  1256  0822               	movf	__div_to_l_@quot+2,w
  7683  1257  00F4               	movwf	?__div_to_l_+2
  7684  1258  0821               	movf	__div_to_l_@quot+1,w
  7685  1259  00F3               	movwf	?__div_to_l_+1
  7686  125A  0820               	movf	__div_to_l_@quot,w
  7687  125B  00F2               	movwf	?__div_to_l_
  7688  125C                     l611:
  7689  125C  0008               	return
  7690  125D                     __end_of__div_to_l_:
  7691                           
  7692                           	psect	text14
  7693  1E87                     __ptext14:	
  7694 ;; *************** function ___xxtofl *****************
  7695 ;; Defined at:
  7696 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  sign            1    wreg     unsigned char 
  7699 ;;  val             4    2[COMMON] long 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;  sign            1    0[BANK0 ] unsigned char 
  7702 ;;  arg             4    2[BANK0 ] unsigned long 
  7703 ;;  exp             1    1[BANK0 ] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  4    2[COMMON] unsigned char 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7713 ;;      Params:         4       0       0       0       0
  7714 ;;      Locals:         0       6       0       0       0
  7715 ;;      Temps:          4       0       0       0       0
  7716 ;;      Totals:         8       6       0       0       0
  7717 ;;Total ram usage:       14 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_sprintf
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function ___xxtofl
  7729  1E87                     ___xxtofl:
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7733                           ;___xxtofl@sign stored from wreg
  7734  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  7735  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  7736  1E89  00A0               	movwf	___xxtofl@sign
  7737  1E8A                     l3226:
  7738  1E8A  0820               	movf	___xxtofl@sign,w
  7739  1E8B  1903               	btfsc	3,2
  7740  1E8C  2E8E               	goto	u4951
  7741  1E8D  2E8F               	goto	u4950
  7742  1E8E                     u4951:
  7743  1E8E  2EA3               	goto	l3232
  7744  1E8F                     u4950:
  7745  1E8F                     l3228:
  7746  1E8F  1FF5               	btfss	___xxtofl@val+3,7
  7747  1E90  2E92               	goto	u4961
  7748  1E91  2E93               	goto	u4960
  7749  1E92                     u4961:
  7750  1E92  2EA3               	goto	l3232
  7751  1E93                     u4960:
  7752  1E93                     l3230:
  7753  1E93  0972               	comf	___xxtofl@val,w
  7754  1E94  00A2               	movwf	___xxtofl@arg
  7755  1E95  0973               	comf	___xxtofl@val+1,w
  7756  1E96  00A3               	movwf	___xxtofl@arg+1
  7757  1E97  0974               	comf	___xxtofl@val+2,w
  7758  1E98  00A4               	movwf	___xxtofl@arg+2
  7759  1E99  0975               	comf	___xxtofl@val+3,w
  7760  1E9A  00A5               	movwf	___xxtofl@arg+3
  7761  1E9B  0AA2               	incf	___xxtofl@arg,f
  7762  1E9C  1903               	skipnz
  7763  1E9D  0AA3               	incf	___xxtofl@arg+1,f
  7764  1E9E  1903               	skipnz
  7765  1E9F  0AA4               	incf	___xxtofl@arg+2,f
  7766  1EA0  1903               	skipnz
  7767  1EA1  0AA5               	incf	___xxtofl@arg+3,f
  7768  1EA2  2EAB               	goto	l908
  7769  1EA3                     l3232:
  7770  1EA3  0875               	movf	___xxtofl@val+3,w
  7771  1EA4  00A5               	movwf	___xxtofl@arg+3
  7772  1EA5  0874               	movf	___xxtofl@val+2,w
  7773  1EA6  00A4               	movwf	___xxtofl@arg+2
  7774  1EA7  0873               	movf	___xxtofl@val+1,w
  7775  1EA8  00A3               	movwf	___xxtofl@arg+1
  7776  1EA9  0872               	movf	___xxtofl@val,w
  7777  1EAA  00A2               	movwf	___xxtofl@arg
  7778  1EAB                     l908:
  7779  1EAB  0875               	movf	___xxtofl@val+3,w
  7780  1EAC  0474               	iorwf	___xxtofl@val+2,w
  7781  1EAD  0473               	iorwf	___xxtofl@val+1,w
  7782  1EAE  0472               	iorwf	___xxtofl@val,w
  7783  1EAF  1D03               	skipz
  7784  1EB0  2EB2               	goto	u4971
  7785  1EB1  2EB3               	goto	u4970
  7786  1EB2                     u4971:
  7787  1EB2  2EBC               	goto	l3238
  7788  1EB3                     u4970:
  7789  1EB3                     l3234:
  7790  1EB3  3000               	movlw	0
  7791  1EB4  00F5               	movwf	?___xxtofl+3
  7792  1EB5  3000               	movlw	0
  7793  1EB6  00F4               	movwf	?___xxtofl+2
  7794  1EB7  3000               	movlw	0
  7795  1EB8  00F3               	movwf	?___xxtofl+1
  7796  1EB9  3000               	movlw	0
  7797  1EBA  00F2               	movwf	?___xxtofl
  7798  1EBB  2F42               	goto	l910
  7799  1EBC                     l3238:
  7800  1EBC  3096               	movlw	150
  7801  1EBD  00F6               	movwf	??___xxtofl
  7802  1EBE  0876               	movf	??___xxtofl,w
  7803  1EBF  00A1               	movwf	___xxtofl@exp
  7804  1EC0  2ECE               	goto	l3242
  7805  1EC1                     l3240:
  7806  1EC1  3001               	movlw	1
  7807  1EC2  00F6               	movwf	??___xxtofl
  7808  1EC3  0876               	movf	??___xxtofl,w
  7809  1EC4  07A1               	addwf	___xxtofl@exp,f
  7810  1EC5  3001               	movlw	1
  7811  1EC6                     u4985:
  7812  1EC6  1003               	clrc
  7813  1EC7  0CA5               	rrf	___xxtofl@arg+3,f
  7814  1EC8  0CA4               	rrf	___xxtofl@arg+2,f
  7815  1EC9  0CA3               	rrf	___xxtofl@arg+1,f
  7816  1ECA  0CA2               	rrf	___xxtofl@arg,f
  7817  1ECB  3EFF               	addlw	-1
  7818  1ECC  1D03               	skipz
  7819  1ECD  2EC6               	goto	u4985
  7820  1ECE                     l3242:
  7821  1ECE  30FE               	movlw	254
  7822  1ECF  0525               	andwf	___xxtofl@arg+3,w
  7823  1ED0  1D03               	btfss	3,2
  7824  1ED1  2ED3               	goto	u4991
  7825  1ED2  2ED4               	goto	u4990
  7826  1ED3                     u4991:
  7827  1ED3  2EC1               	goto	l3240
  7828  1ED4                     u4990:
  7829  1ED4  2EF0               	goto	l914
  7830  1ED5                     l3244:
  7831  1ED5  3001               	movlw	1
  7832  1ED6  00F6               	movwf	??___xxtofl
  7833  1ED7  0876               	movf	??___xxtofl,w
  7834  1ED8  07A1               	addwf	___xxtofl@exp,f
  7835  1ED9                     l3246:
  7836  1ED9  3001               	movlw	1
  7837  1EDA  07A2               	addwf	___xxtofl@arg,f
  7838  1EDB  3000               	movlw	0
  7839  1EDC  1803               	skipnc
  7840  1EDD  3001               	movlw	1
  7841  1EDE  07A3               	addwf	___xxtofl@arg+1,f
  7842  1EDF  3000               	movlw	0
  7843  1EE0  1803               	skipnc
  7844  1EE1  3001               	movlw	1
  7845  1EE2  07A4               	addwf	___xxtofl@arg+2,f
  7846  1EE3  3000               	movlw	0
  7847  1EE4  1803               	skipnc
  7848  1EE5  3001               	movlw	1
  7849  1EE6  07A5               	addwf	___xxtofl@arg+3,f
  7850  1EE7                     l3248:
  7851  1EE7  3001               	movlw	1
  7852  1EE8                     u5005:
  7853  1EE8  1003               	clrc
  7854  1EE9  0CA5               	rrf	___xxtofl@arg+3,f
  7855  1EEA  0CA4               	rrf	___xxtofl@arg+2,f
  7856  1EEB  0CA3               	rrf	___xxtofl@arg+1,f
  7857  1EEC  0CA2               	rrf	___xxtofl@arg,f
  7858  1EED  3EFF               	addlw	-1
  7859  1EEE  1D03               	skipz
  7860  1EEF  2EE8               	goto	u5005
  7861  1EF0                     l914:
  7862  1EF0  30FF               	movlw	255
  7863  1EF1  0525               	andwf	___xxtofl@arg+3,w
  7864  1EF2  1D03               	btfss	3,2
  7865  1EF3  2EF5               	goto	u5011
  7866  1EF4  2EF6               	goto	u5010
  7867  1EF5                     u5011:
  7868  1EF5  2ED5               	goto	l3244
  7869  1EF6                     u5010:
  7870  1EF6  2F02               	goto	l3252
  7871  1EF7                     l3250:
  7872  1EF7  3001               	movlw	1
  7873  1EF8  02A1               	subwf	___xxtofl@exp,f
  7874  1EF9  3001               	movlw	1
  7875  1EFA  00F6               	movwf	??___xxtofl
  7876  1EFB                     u5025:
  7877  1EFB  1003               	clrc
  7878  1EFC  0DA2               	rlf	___xxtofl@arg,f
  7879  1EFD  0DA3               	rlf	___xxtofl@arg+1,f
  7880  1EFE  0DA4               	rlf	___xxtofl@arg+2,f
  7881  1EFF  0DA5               	rlf	___xxtofl@arg+3,f
  7882  1F00  0BF6               	decfsz	??___xxtofl,f
  7883  1F01  2EFB               	goto	u5025
  7884  1F02                     l3252:
  7885  1F02  1BA4               	btfsc	___xxtofl@arg+2,7
  7886  1F03  2F05               	goto	u5031
  7887  1F04  2F06               	goto	u5030
  7888  1F05                     u5031:
  7889  1F05  2F0C               	goto	l921
  7890  1F06                     u5030:
  7891  1F06                     l3254:
  7892  1F06  3002               	movlw	2
  7893  1F07  0221               	subwf	___xxtofl@exp,w
  7894  1F08  1803               	skipnc
  7895  1F09  2F0B               	goto	u5041
  7896  1F0A  2F0C               	goto	u5040
  7897  1F0B                     u5041:
  7898  1F0B  2EF7               	goto	l3250
  7899  1F0C                     u5040:
  7900  1F0C                     l921:
  7901  1F0C  1821               	btfsc	___xxtofl@exp,0
  7902  1F0D  2F0F               	goto	u5051
  7903  1F0E  2F10               	goto	u5050
  7904  1F0F                     u5051:
  7905  1F0F  2F18               	goto	l922
  7906  1F10                     u5050:
  7907  1F10                     l3256:
  7908  1F10  30FF               	movlw	255
  7909  1F11  05A2               	andwf	___xxtofl@arg,f
  7910  1F12  30FF               	movlw	255
  7911  1F13  05A3               	andwf	___xxtofl@arg+1,f
  7912  1F14  307F               	movlw	127
  7913  1F15  05A4               	andwf	___xxtofl@arg+2,f
  7914  1F16  30FF               	movlw	255
  7915  1F17  05A5               	andwf	___xxtofl@arg+3,f
  7916  1F18                     l922:
  7917  1F18  1003               	clrc
  7918  1F19  0CA1               	rrf	___xxtofl@exp,f
  7919  1F1A                     l3258:
  7920  1F1A  0821               	movf	___xxtofl@exp,w
  7921  1F1B  00F6               	movwf	??___xxtofl
  7922  1F1C  01F7               	clrf	??___xxtofl+1
  7923  1F1D  01F8               	clrf	??___xxtofl+2
  7924  1F1E  01F9               	clrf	??___xxtofl+3
  7925  1F1F  3018               	movlw	24
  7926  1F20                     u5065:
  7927  1F20  1003               	clrc
  7928  1F21  0DF6               	rlf	??___xxtofl,f
  7929  1F22  0DF7               	rlf	??___xxtofl+1,f
  7930  1F23  0DF8               	rlf	??___xxtofl+2,f
  7931  1F24  0DF9               	rlf	??___xxtofl+3,f
  7932  1F25                     u5060:
  7933  1F25  3EFF               	addlw	-1
  7934  1F26  1D03               	skipz
  7935  1F27  2F20               	goto	u5065
  7936  1F28  0876               	movf	??___xxtofl,w
  7937  1F29  04A2               	iorwf	___xxtofl@arg,f
  7938  1F2A  0877               	movf	??___xxtofl+1,w
  7939  1F2B  04A3               	iorwf	___xxtofl@arg+1,f
  7940  1F2C  0878               	movf	??___xxtofl+2,w
  7941  1F2D  04A4               	iorwf	___xxtofl@arg+2,f
  7942  1F2E  0879               	movf	??___xxtofl+3,w
  7943  1F2F  04A5               	iorwf	___xxtofl@arg+3,f
  7944  1F30                     l3260:
  7945  1F30  0820               	movf	___xxtofl@sign,w
  7946  1F31  1903               	btfsc	3,2
  7947  1F32  2F34               	goto	u5071
  7948  1F33  2F35               	goto	u5070
  7949  1F34                     u5071:
  7950  1F34  2F3A               	goto	l3266
  7951  1F35                     u5070:
  7952  1F35                     l3262:
  7953  1F35  1FF5               	btfss	___xxtofl@val+3,7
  7954  1F36  2F38               	goto	u5081
  7955  1F37  2F39               	goto	u5080
  7956  1F38                     u5081:
  7957  1F38  2F3A               	goto	l3266
  7958  1F39                     u5080:
  7959  1F39                     l3264:
  7960  1F39  17A5               	bsf	___xxtofl@arg+3,7
  7961  1F3A                     l3266:
  7962  1F3A  0825               	movf	___xxtofl@arg+3,w
  7963  1F3B  00F5               	movwf	?___xxtofl+3
  7964  1F3C  0824               	movf	___xxtofl@arg+2,w
  7965  1F3D  00F4               	movwf	?___xxtofl+2
  7966  1F3E  0823               	movf	___xxtofl@arg+1,w
  7967  1F3F  00F3               	movwf	?___xxtofl+1
  7968  1F40  0822               	movf	___xxtofl@arg,w
  7969  1F41  00F2               	movwf	?___xxtofl
  7970  1F42                     l910:
  7971  1F42  0008               	return
  7972  1F43                     __end_of___xxtofl:
  7973                           
  7974                           	psect	text15
  7975  19CE                     __ptext15:	
  7976 ;; *************** function ___wmul *****************
  7977 ;; Defined at:
  7978 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  multiplier      2    2[COMMON] unsigned int 
  7981 ;;  multiplicand    2    4[COMMON] unsigned int 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  product         2    6[COMMON] unsigned int 
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  2    2[COMMON] unsigned int 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7993 ;;      Params:         4       0       0       0       0
  7994 ;;      Locals:         2       0       0       0       0
  7995 ;;      Temps:          0       0       0       0       0
  7996 ;;      Totals:         6       0       0       0       0
  7997 ;;Total ram usage:        6 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; Hardware stack levels required when called:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_sprintf
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           
  8008                           ;psect for function ___wmul
  8009  19CE                     ___wmul:
  8010  19CE                     l3086:	
  8011                           ;incstack = 0
  8012                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8013                           
  8014  19CE  01F6               	clrf	___wmul@product
  8015  19CF  01F7               	clrf	___wmul@product+1
  8016  19D0                     l3088:
  8017  19D0  1C72               	btfss	___wmul@multiplier,0
  8018  19D1  29D3               	goto	u4571
  8019  19D2  29D4               	goto	u4570
  8020  19D3                     u4571:
  8021  19D3  29DA               	goto	l441
  8022  19D4                     u4570:
  8023  19D4                     l3090:
  8024  19D4  0874               	movf	___wmul@multiplicand,w
  8025  19D5  07F6               	addwf	___wmul@product,f
  8026  19D6  1803               	skipnc
  8027  19D7  0AF7               	incf	___wmul@product+1,f
  8028  19D8  0875               	movf	___wmul@multiplicand+1,w
  8029  19D9  07F7               	addwf	___wmul@product+1,f
  8030  19DA                     l441:
  8031  19DA  3001               	movlw	1
  8032  19DB                     u4585:
  8033  19DB  1003               	clrc
  8034  19DC  0DF4               	rlf	___wmul@multiplicand,f
  8035  19DD  0DF5               	rlf	___wmul@multiplicand+1,f
  8036  19DE  3EFF               	addlw	-1
  8037  19DF  1D03               	skipz
  8038  19E0  29DB               	goto	u4585
  8039  19E1                     l3092:
  8040  19E1  3001               	movlw	1
  8041  19E2                     u4595:
  8042  19E2  1003               	clrc
  8043  19E3  0CF3               	rrf	___wmul@multiplier+1,f
  8044  19E4  0CF2               	rrf	___wmul@multiplier,f
  8045  19E5  3EFF               	addlw	-1
  8046  19E6  1D03               	skipz
  8047  19E7  29E2               	goto	u4595
  8048  19E8                     l3094:
  8049  19E8  0872               	movf	___wmul@multiplier,w
  8050  19E9  0473               	iorwf	___wmul@multiplier+1,w
  8051  19EA  1D03               	btfss	3,2
  8052  19EB  29ED               	goto	u4601
  8053  19EC  29EE               	goto	u4600
  8054  19ED                     u4601:
  8055  19ED  29D0               	goto	l3088
  8056  19EE                     u4600:
  8057  19EE                     l3096:
  8058  19EE  0877               	movf	___wmul@product+1,w
  8059  19EF  00F3               	movwf	?___wmul+1
  8060  19F0  0876               	movf	___wmul@product,w
  8061  19F1  00F2               	movwf	?___wmul
  8062  19F2                     l443:
  8063  19F2  0008               	return
  8064  19F3                     __end_of___wmul:
  8065                           
  8066                           	psect	text16
  8067  1C8B                     __ptext16:	
  8068 ;; *************** function ___llmod *****************
  8069 ;; Defined at:
  8070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8071 ;; Parameters:    Size  Location     Type
  8072 ;;  divisor         4    5[BANK0 ] unsigned long 
  8073 ;;  dividend        4    9[BANK0 ] unsigned long 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;  counter         1   14[BANK0 ] unsigned char 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  4    5[BANK0 ] unsigned long 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2, status,0
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8085 ;;      Params:         0       8       0       0       0
  8086 ;;      Locals:         0       1       0       0       0
  8087 ;;      Temps:          0       1       0       0       0
  8088 ;;      Totals:         0      10       0       0       0
  8089 ;;Total ram usage:       10 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    1
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_sprintf
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099                           
  8100                           ;psect for function ___llmod
  8101  1C8B                     ___llmod:
  8102  1C8B                     l3856:	
  8103                           ;incstack = 0
  8104                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8105                           
  8106  1C8B  1283               	bcf	3,5	;RP0=0, select bank0
  8107  1C8C  1303               	bcf	3,6	;RP1=0, select bank0
  8108  1C8D  0828               	movf	___llmod@divisor+3,w
  8109  1C8E  0427               	iorwf	___llmod@divisor+2,w
  8110  1C8F  0426               	iorwf	___llmod@divisor+1,w
  8111  1C90  0425               	iorwf	___llmod@divisor,w
  8112  1C91  1903               	skipnz
  8113  1C92  2C94               	goto	u5801
  8114  1C93  2C95               	goto	u5800
  8115  1C94                     u5801:
  8116  1C94  2CD8               	goto	l3872
  8117  1C95                     u5800:
  8118  1C95                     l3858:
  8119  1C95  01AE               	clrf	___llmod@counter
  8120  1C96  0AAE               	incf	___llmod@counter,f
  8121  1C97  2CA5               	goto	l3862
  8122  1C98                     l3860:
  8123  1C98  3001               	movlw	1
  8124  1C99  00AD               	movwf	??___llmod
  8125  1C9A                     u5815:
  8126  1C9A  1003               	clrc
  8127  1C9B  0DA5               	rlf	___llmod@divisor,f
  8128  1C9C  0DA6               	rlf	___llmod@divisor+1,f
  8129  1C9D  0DA7               	rlf	___llmod@divisor+2,f
  8130  1C9E  0DA8               	rlf	___llmod@divisor+3,f
  8131  1C9F  0BAD               	decfsz	??___llmod,f
  8132  1CA0  2C9A               	goto	u5815
  8133  1CA1  3001               	movlw	1
  8134  1CA2  00AD               	movwf	??___llmod
  8135  1CA3  082D               	movf	??___llmod,w
  8136  1CA4  07AE               	addwf	___llmod@counter,f
  8137  1CA5                     l3862:
  8138  1CA5  1FA8               	btfss	___llmod@divisor+3,7
  8139  1CA6  2CA8               	goto	u5821
  8140  1CA7  2CA9               	goto	u5820
  8141  1CA8                     u5821:
  8142  1CA8  2C98               	goto	l3860
  8143  1CA9                     u5820:
  8144  1CA9                     l3864:
  8145  1CA9  0828               	movf	___llmod@divisor+3,w
  8146  1CAA  022C               	subwf	___llmod@dividend+3,w
  8147  1CAB  1D03               	skipz
  8148  1CAC  2CB7               	goto	u5835
  8149  1CAD  0827               	movf	___llmod@divisor+2,w
  8150  1CAE  022B               	subwf	___llmod@dividend+2,w
  8151  1CAF  1D03               	skipz
  8152  1CB0  2CB7               	goto	u5835
  8153  1CB1  0826               	movf	___llmod@divisor+1,w
  8154  1CB2  022A               	subwf	___llmod@dividend+1,w
  8155  1CB3  1D03               	skipz
  8156  1CB4  2CB7               	goto	u5835
  8157  1CB5  0825               	movf	___llmod@divisor,w
  8158  1CB6  0229               	subwf	___llmod@dividend,w
  8159  1CB7                     u5835:
  8160  1CB7  1C03               	skipc
  8161  1CB8  2CBA               	goto	u5831
  8162  1CB9  2CBB               	goto	u5830
  8163  1CBA                     u5831:
  8164  1CBA  2CC9               	goto	l3868
  8165  1CBB                     u5830:
  8166  1CBB                     l3866:
  8167  1CBB  0825               	movf	___llmod@divisor,w
  8168  1CBC  02A9               	subwf	___llmod@dividend,f
  8169  1CBD  0826               	movf	___llmod@divisor+1,w
  8170  1CBE  1C03               	skipc
  8171  1CBF  0F26               	incfsz	___llmod@divisor+1,w
  8172  1CC0  02AA               	subwf	___llmod@dividend+1,f
  8173  1CC1  0827               	movf	___llmod@divisor+2,w
  8174  1CC2  1C03               	skipc
  8175  1CC3  0F27               	incfsz	___llmod@divisor+2,w
  8176  1CC4  02AB               	subwf	___llmod@dividend+2,f
  8177  1CC5  0828               	movf	___llmod@divisor+3,w
  8178  1CC6  1C03               	skipc
  8179  1CC7  0F28               	incfsz	___llmod@divisor+3,w
  8180  1CC8  02AC               	subwf	___llmod@dividend+3,f
  8181  1CC9                     l3868:
  8182  1CC9  3001               	movlw	1
  8183  1CCA                     u5845:
  8184  1CCA  1003               	clrc
  8185  1CCB  0CA8               	rrf	___llmod@divisor+3,f
  8186  1CCC  0CA7               	rrf	___llmod@divisor+2,f
  8187  1CCD  0CA6               	rrf	___llmod@divisor+1,f
  8188  1CCE  0CA5               	rrf	___llmod@divisor,f
  8189  1CCF  3EFF               	addlw	-1
  8190  1CD0  1D03               	skipz
  8191  1CD1  2CCA               	goto	u5845
  8192  1CD2                     l3870:
  8193  1CD2  3001               	movlw	1
  8194  1CD3  02AE               	subwf	___llmod@counter,f
  8195  1CD4  1D03               	btfss	3,2
  8196  1CD5  2CD7               	goto	u5851
  8197  1CD6  2CD8               	goto	u5850
  8198  1CD7                     u5851:
  8199  1CD7  2CA9               	goto	l3864
  8200  1CD8                     u5850:
  8201  1CD8                     l3872:
  8202  1CD8  082C               	movf	___llmod@dividend+3,w
  8203  1CD9  00A8               	movwf	?___llmod+3
  8204  1CDA  082B               	movf	___llmod@dividend+2,w
  8205  1CDB  00A7               	movwf	?___llmod+2
  8206  1CDC  082A               	movf	___llmod@dividend+1,w
  8207  1CDD  00A6               	movwf	?___llmod+1
  8208  1CDE  0829               	movf	___llmod@dividend,w
  8209  1CDF  00A5               	movwf	?___llmod
  8210  1CE0                     l697:
  8211  1CE0  0008               	return
  8212  1CE1                     __end_of___llmod:
  8213                           
  8214                           	psect	text17
  8215  1E0B                     __ptext17:	
  8216 ;; *************** function ___fltol *****************
  8217 ;; Defined at:
  8218 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  f1              4   53[BANK0 ] unsigned long 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;  exp1            1   63[BANK0 ] unsigned char 
  8223 ;;  sign1           1   62[BANK0 ] unsigned char 
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  4   53[BANK0 ] long 
  8226 ;; Registers used:
  8227 ;;		wreg, status,2, status,0
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8233 ;;      Params:         0       4       0       0       0
  8234 ;;      Locals:         0       2       0       0       0
  8235 ;;      Temps:          0       5       0       0       0
  8236 ;;      Totals:         0      11       0       0       0
  8237 ;;Total ram usage:       11 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    1
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_sprintf
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function ___fltol
  8249  1E0B                     ___fltol:
  8250  1E0B                     l3164:	
  8251                           ;incstack = 0
  8252                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8253                           
  8254  1E0B  1003               	clrc
  8255  1E0C  1283               	bcf	3,5	;RP0=0, select bank0
  8256  1E0D  1303               	bcf	3,6	;RP1=0, select bank0
  8257  1E0E  0D57               	rlf	___fltol@f1+2,w
  8258  1E0F  0D58               	rlf	___fltol@f1+3,w
  8259  1E10  00D9               	movwf	??___fltol
  8260  1E11  0859               	movf	??___fltol,w
  8261  1E12  00DF               	movwf	___fltol@exp1
  8262  1E13  085F               	movf	___fltol@exp1,w
  8263  1E14  1D03               	btfss	3,2
  8264  1E15  2E17               	goto	u4791
  8265  1E16  2E18               	goto	u4790
  8266  1E17                     u4791:
  8267  1E17  2E21               	goto	l3170
  8268  1E18                     u4790:
  8269  1E18                     l3166:
  8270  1E18  3000               	movlw	0
  8271  1E19  00D8               	movwf	?___fltol+3
  8272  1E1A  3000               	movlw	0
  8273  1E1B  00D7               	movwf	?___fltol+2
  8274  1E1C  3000               	movlw	0
  8275  1E1D  00D6               	movwf	?___fltol+1
  8276  1E1E  3000               	movlw	0
  8277  1E1F  00D5               	movwf	?___fltol
  8278  1E20  2E86               	goto	l644
  8279  1E21                     l3170:
  8280  1E21  0855               	movf	___fltol@f1,w
  8281  1E22  00D9               	movwf	??___fltol
  8282  1E23  0856               	movf	___fltol@f1+1,w
  8283  1E24  00DA               	movwf	??___fltol+1
  8284  1E25  0857               	movf	___fltol@f1+2,w
  8285  1E26  00DB               	movwf	??___fltol+2
  8286  1E27  0858               	movf	___fltol@f1+3,w
  8287  1E28  00DC               	movwf	??___fltol+3
  8288  1E29  301F               	movlw	31
  8289  1E2A                     u4805:
  8290  1E2A  1003               	clrc
  8291  1E2B  0CDC               	rrf	??___fltol+3,f
  8292  1E2C  0CDB               	rrf	??___fltol+2,f
  8293  1E2D  0CDA               	rrf	??___fltol+1,f
  8294  1E2E  0CD9               	rrf	??___fltol,f
  8295  1E2F                     u4800:
  8296  1E2F  3EFF               	addlw	-1
  8297  1E30  1D03               	skipz
  8298  1E31  2E2A               	goto	u4805
  8299  1E32  0859               	movf	??___fltol,w
  8300  1E33  00DD               	movwf	??___fltol+4
  8301  1E34  085D               	movf	??___fltol+4,w
  8302  1E35  00DE               	movwf	___fltol@sign1
  8303  1E36                     l3172:
  8304  1E36  17D7               	bsf	___fltol@f1+2,7
  8305  1E37                     l3174:
  8306  1E37  30FF               	movlw	255
  8307  1E38  05D5               	andwf	___fltol@f1,f
  8308  1E39  30FF               	movlw	255
  8309  1E3A  05D6               	andwf	___fltol@f1+1,f
  8310  1E3B  30FF               	movlw	255
  8311  1E3C  05D7               	andwf	___fltol@f1+2,f
  8312  1E3D  3000               	movlw	0
  8313  1E3E  05D8               	andwf	___fltol@f1+3,f
  8314  1E3F                     l3176:
  8315  1E3F  3096               	movlw	150
  8316  1E40  02DF               	subwf	___fltol@exp1,f
  8317  1E41                     l3178:
  8318  1E41  1FDF               	btfss	___fltol@exp1,7
  8319  1E42  2E44               	goto	u4811
  8320  1E43  2E45               	goto	u4810
  8321  1E44                     u4811:
  8322  1E44  2E5F               	goto	l3188
  8323  1E45                     u4810:
  8324  1E45                     l3180:
  8325  1E45  085F               	movf	___fltol@exp1,w
  8326  1E46  3A80               	xorlw	128
  8327  1E47  3E97               	addlw	151
  8328  1E48  1803               	skipnc
  8329  1E49  2E4B               	goto	u4821
  8330  1E4A  2E4C               	goto	u4820
  8331  1E4B                     u4821:
  8332  1E4B  2E4D               	goto	l3186
  8333  1E4C                     u4820:
  8334  1E4C  2E18               	goto	l3166
  8335  1E4D                     l3186:
  8336  1E4D  3001               	movlw	1
  8337  1E4E                     u4835:
  8338  1E4E  1003               	clrc
  8339  1E4F  0CD8               	rrf	___fltol@f1+3,f
  8340  1E50  0CD7               	rrf	___fltol@f1+2,f
  8341  1E51  0CD6               	rrf	___fltol@f1+1,f
  8342  1E52  0CD5               	rrf	___fltol@f1,f
  8343  1E53  3EFF               	addlw	-1
  8344  1E54  1D03               	skipz
  8345  1E55  2E4E               	goto	u4835
  8346  1E56  3001               	movlw	1
  8347  1E57  00D9               	movwf	??___fltol
  8348  1E58  0859               	movf	??___fltol,w
  8349  1E59  07DF               	addwf	___fltol@exp1,f
  8350  1E5A  1D03               	btfss	3,2
  8351  1E5B  2E5D               	goto	u4841
  8352  1E5C  2E5E               	goto	u4840
  8353  1E5D                     u4841:
  8354  1E5D  2E4D               	goto	l3186
  8355  1E5E                     u4840:
  8356  1E5E  2E76               	goto	l3196
  8357  1E5F                     l3188:
  8358  1E5F  3020               	movlw	32
  8359  1E60  025F               	subwf	___fltol@exp1,w
  8360  1E61  1C03               	skipc
  8361  1E62  2E64               	goto	u4851
  8362  1E63  2E65               	goto	u4850
  8363  1E64                     u4851:
  8364  1E64  2E71               	goto	l651
  8365  1E65                     u4850:
  8366  1E65  2E18               	goto	l3166
  8367  1E66                     l3194:
  8368  1E66  3001               	movlw	1
  8369  1E67  00D9               	movwf	??___fltol
  8370  1E68                     u4865:
  8371  1E68  1003               	clrc
  8372  1E69  0DD5               	rlf	___fltol@f1,f
  8373  1E6A  0DD6               	rlf	___fltol@f1+1,f
  8374  1E6B  0DD7               	rlf	___fltol@f1+2,f
  8375  1E6C  0DD8               	rlf	___fltol@f1+3,f
  8376  1E6D  0BD9               	decfsz	??___fltol,f
  8377  1E6E  2E68               	goto	u4865
  8378  1E6F  3001               	movlw	1
  8379  1E70  02DF               	subwf	___fltol@exp1,f
  8380  1E71                     l651:
  8381  1E71  085F               	movf	___fltol@exp1,w
  8382  1E72  1D03               	btfss	3,2
  8383  1E73  2E75               	goto	u4871
  8384  1E74  2E76               	goto	u4870
  8385  1E75                     u4871:
  8386  1E75  2E66               	goto	l3194
  8387  1E76                     u4870:
  8388  1E76                     l3196:
  8389  1E76  085E               	movf	___fltol@sign1,w
  8390  1E77  1903               	btfsc	3,2
  8391  1E78  2E7A               	goto	u4881
  8392  1E79  2E7B               	goto	u4880
  8393  1E7A                     u4881:
  8394  1E7A  2E86               	goto	l654
  8395  1E7B                     u4880:
  8396  1E7B                     l3198:
  8397  1E7B  09D5               	comf	___fltol@f1,f
  8398  1E7C  09D6               	comf	___fltol@f1+1,f
  8399  1E7D  09D7               	comf	___fltol@f1+2,f
  8400  1E7E  09D8               	comf	___fltol@f1+3,f
  8401  1E7F  0AD5               	incf	___fltol@f1,f
  8402  1E80  1903               	skipnz
  8403  1E81  0AD6               	incf	___fltol@f1+1,f
  8404  1E82  1903               	skipnz
  8405  1E83  0AD7               	incf	___fltol@f1+2,f
  8406  1E84  1903               	skipnz
  8407  1E85  0AD8               	incf	___fltol@f1+3,f
  8408  1E86                     l654:
  8409  1E86                     l644:
  8410  1E86  0008               	return
  8411  1E87                     __end_of___fltol:
  8412                           
  8413                           	psect	text18
  8414  1C3B                     __ptext18:	
  8415 ;; *************** function ___flsub *****************
  8416 ;; Defined at:
  8417 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  a               4    0[BANK1 ] long 
  8420 ;;  b               4    4[BANK1 ] long 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;		None
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  4    0[BANK1 ] long 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         0       0       8       0       0
  8433 ;;      Locals:         0       0       0       0       0
  8434 ;;      Temps:          0       0       0       0       0
  8435 ;;      Totals:         0       0       8       0       0
  8436 ;;Total ram usage:        8 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    2
  8439 ;; This function calls:
  8440 ;;		___fladd
  8441 ;; This function is called by:
  8442 ;;		_sprintf
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function ___flsub
  8448  1C3B                     ___flsub:
  8449  1C3B                     l3220:	
  8450                           ;incstack = 0
  8451                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8452                           
  8453  1C3B  3080               	movlw	128
  8454  1C3C  1683               	bsf	3,5	;RP0=1, select bank1
  8455  1C3D  1303               	bcf	3,6	;RP1=0, select bank1
  8456  1C3E  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8457  1C3F                     l3222:
  8458  1C3F  0827               	movf	(___flsub@b+3)^(0+128),w
  8459  1C40  1283               	bcf	3,5	;RP0=0, select bank0
  8460  1C41  1303               	bcf	3,6	;RP1=0, select bank0
  8461  1C42  00D9               	movwf	___fladd@b+3
  8462  1C43  1683               	bsf	3,5	;RP0=1, select bank1
  8463  1C44  1303               	bcf	3,6	;RP1=0, select bank1
  8464  1C45  0826               	movf	(___flsub@b+2)^(0+128),w
  8465  1C46  1283               	bcf	3,5	;RP0=0, select bank0
  8466  1C47  1303               	bcf	3,6	;RP1=0, select bank0
  8467  1C48  00D8               	movwf	___fladd@b+2
  8468  1C49  1683               	bsf	3,5	;RP0=1, select bank1
  8469  1C4A  1303               	bcf	3,6	;RP1=0, select bank1
  8470  1C4B  0825               	movf	(___flsub@b+1)^(0+128),w
  8471  1C4C  1283               	bcf	3,5	;RP0=0, select bank0
  8472  1C4D  1303               	bcf	3,6	;RP1=0, select bank0
  8473  1C4E  00D7               	movwf	___fladd@b+1
  8474  1C4F  1683               	bsf	3,5	;RP0=1, select bank1
  8475  1C50  1303               	bcf	3,6	;RP1=0, select bank1
  8476  1C51  0824               	movf	___flsub@b^(0+128),w
  8477  1C52  1283               	bcf	3,5	;RP0=0, select bank0
  8478  1C53  1303               	bcf	3,6	;RP1=0, select bank0
  8479  1C54  00D6               	movwf	___fladd@b
  8480  1C55  1683               	bsf	3,5	;RP0=1, select bank1
  8481  1C56  1303               	bcf	3,6	;RP1=0, select bank1
  8482  1C57  0823               	movf	(___flsub@a+3)^(0+128),w
  8483  1C58  1283               	bcf	3,5	;RP0=0, select bank0
  8484  1C59  1303               	bcf	3,6	;RP1=0, select bank0
  8485  1C5A  00DD               	movwf	___fladd@a+3
  8486  1C5B  1683               	bsf	3,5	;RP0=1, select bank1
  8487  1C5C  1303               	bcf	3,6	;RP1=0, select bank1
  8488  1C5D  0822               	movf	(___flsub@a+2)^(0+128),w
  8489  1C5E  1283               	bcf	3,5	;RP0=0, select bank0
  8490  1C5F  1303               	bcf	3,6	;RP1=0, select bank0
  8491  1C60  00DC               	movwf	___fladd@a+2
  8492  1C61  1683               	bsf	3,5	;RP0=1, select bank1
  8493  1C62  1303               	bcf	3,6	;RP1=0, select bank1
  8494  1C63  0821               	movf	(___flsub@a+1)^(0+128),w
  8495  1C64  1283               	bcf	3,5	;RP0=0, select bank0
  8496  1C65  1303               	bcf	3,6	;RP1=0, select bank0
  8497  1C66  00DB               	movwf	___fladd@a+1
  8498  1C67  1683               	bsf	3,5	;RP0=1, select bank1
  8499  1C68  1303               	bcf	3,6	;RP1=0, select bank1
  8500  1C69  0820               	movf	___flsub@a^(0+128),w
  8501  1C6A  1283               	bcf	3,5	;RP0=0, select bank0
  8502  1C6B  1303               	bcf	3,6	;RP1=0, select bank0
  8503  1C6C  00DA               	movwf	___fladd@a
  8504  1C6D  160A  118A  2578  160A  158A  	fcall	___fladd
  8505  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  8506  1C73  1303               	bcf	3,6	;RP1=0, select bank0
  8507  1C74  0859               	movf	?___fladd+3,w
  8508  1C75  1683               	bsf	3,5	;RP0=1, select bank1
  8509  1C76  1303               	bcf	3,6	;RP1=0, select bank1
  8510  1C77  00A3               	movwf	(?___flsub+3)^(0+128)
  8511  1C78  1283               	bcf	3,5	;RP0=0, select bank0
  8512  1C79  1303               	bcf	3,6	;RP1=0, select bank0
  8513  1C7A  0858               	movf	?___fladd+2,w
  8514  1C7B  1683               	bsf	3,5	;RP0=1, select bank1
  8515  1C7C  1303               	bcf	3,6	;RP1=0, select bank1
  8516  1C7D  00A2               	movwf	(?___flsub+2)^(0+128)
  8517  1C7E  1283               	bcf	3,5	;RP0=0, select bank0
  8518  1C7F  1303               	bcf	3,6	;RP1=0, select bank0
  8519  1C80  0857               	movf	?___fladd+1,w
  8520  1C81  1683               	bsf	3,5	;RP0=1, select bank1
  8521  1C82  1303               	bcf	3,6	;RP1=0, select bank1
  8522  1C83  00A1               	movwf	(?___flsub+1)^(0+128)
  8523  1C84  1283               	bcf	3,5	;RP0=0, select bank0
  8524  1C85  1303               	bcf	3,6	;RP1=0, select bank0
  8525  1C86  0856               	movf	?___fladd,w
  8526  1C87  1683               	bsf	3,5	;RP0=1, select bank1
  8527  1C88  1303               	bcf	3,6	;RP1=0, select bank1
  8528  1C89  00A0               	movwf	?___flsub^(0+128)
  8529  1C8A                     l814:
  8530  1C8A  0008               	return
  8531  1C8B                     __end_of___flsub:
  8532                           
  8533                           	psect	text19
  8534  1578                     __ptext19:	
  8535 ;; *************** function ___fladd *****************
  8536 ;; Defined at:
  8537 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8538 ;; Parameters:    Size  Location     Type
  8539 ;;  b               4   54[BANK0 ] long 
  8540 ;;  a               4   58[BANK0 ] long 
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  grs             1   73[BANK0 ] unsigned char 
  8543 ;;  bexp            1   72[BANK0 ] unsigned char 
  8544 ;;  aexp            1   71[BANK0 ] unsigned char 
  8545 ;;  signs           1   70[BANK0 ] unsigned char 
  8546 ;; Return value:  Size  Location     Type
  8547 ;;                  4   54[BANK0 ] unsigned char 
  8548 ;; Registers used:
  8549 ;;		wreg, status,2, status,0, btemp+1
  8550 ;; Tracked objects:
  8551 ;;		On entry : 0/0
  8552 ;;		On exit  : 0/0
  8553 ;;		Unchanged: 0/0
  8554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8555 ;;      Params:         0       8       0       0       0
  8556 ;;      Locals:         0       4       0       0       0
  8557 ;;      Temps:          0       8       0       0       0
  8558 ;;      Totals:         0      20       0       0       0
  8559 ;;Total ram usage:       20 bytes
  8560 ;; Hardware stack levels used:    1
  8561 ;; Hardware stack levels required when called:    1
  8562 ;; This function calls:
  8563 ;;		Nothing
  8564 ;; This function is called by:
  8565 ;;		_sprintf
  8566 ;;		___flsub
  8567 ;; This function uses a non-reentrant model
  8568 ;;
  8569                           
  8570                           
  8571                           ;psect for function ___fladd
  8572  1578                     ___fladd:
  8573  1578                     l2568:	
  8574                           ;incstack = 0
  8575                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8576                           
  8577  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8578  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8579  157A  0859               	movf	___fladd@b+3,w
  8580  157B  3980               	andlw	128
  8581  157C  00DE               	movwf	??___fladd
  8582  157D  085E               	movf	??___fladd,w
  8583  157E  00E6               	movwf	___fladd@signs
  8584  157F                     l2570:
  8585  157F  0859               	movf	___fladd@b+3,w
  8586  1580  00DE               	movwf	??___fladd
  8587  1581  075E               	addwf	??___fladd,w
  8588  1582  00DF               	movwf	??___fladd+1
  8589  1583  085F               	movf	??___fladd+1,w
  8590  1584  00E8               	movwf	___fladd@bexp
  8591  1585                     l2572:
  8592  1585  1FD8               	btfss	___fladd@b+2,7
  8593  1586  2D88               	goto	u3181
  8594  1587  2D89               	goto	u3180
  8595  1588                     u3181:
  8596  1588  2D8A               	goto	l2576
  8597  1589                     u3180:
  8598  1589                     l2574:
  8599  1589  1468               	bsf	___fladd@bexp,0
  8600  158A                     l2576:
  8601  158A  0868               	movf	___fladd@bexp,w
  8602  158B  1903               	btfsc	3,2
  8603  158C  2D8E               	goto	u3191
  8604  158D  2D8F               	goto	u3190
  8605  158E                     u3191:
  8606  158E  2D9F               	goto	l2586
  8607  158F                     u3190:
  8608  158F                     l2578:
  8609  158F  0A68               	incf	___fladd@bexp,w
  8610  1590  1D03               	btfss	3,2
  8611  1591  2D93               	goto	u3201
  8612  1592  2D94               	goto	u3200
  8613  1593                     u3201:
  8614  1593  2D9C               	goto	l2582
  8615  1594                     u3200:
  8616  1594                     l2580:
  8617  1594  3000               	movlw	0
  8618  1595  00D9               	movwf	___fladd@b+3
  8619  1596  3000               	movlw	0
  8620  1597  00D8               	movwf	___fladd@b+2
  8621  1598  3000               	movlw	0
  8622  1599  00D7               	movwf	___fladd@b+1
  8623  159A  3000               	movlw	0
  8624  159B  00D6               	movwf	___fladd@b
  8625  159C                     l2582:
  8626  159C  17D8               	bsf	___fladd@b+2,7
  8627  159D                     l2584:
  8628  159D  01D9               	clrf	___fladd@b+3
  8629  159E  2DA7               	goto	l2588
  8630  159F                     l2586:
  8631  159F  3000               	movlw	0
  8632  15A0  00D9               	movwf	___fladd@b+3
  8633  15A1  3000               	movlw	0
  8634  15A2  00D8               	movwf	___fladd@b+2
  8635  15A3  3000               	movlw	0
  8636  15A4  00D7               	movwf	___fladd@b+1
  8637  15A5  3000               	movlw	0
  8638  15A6  00D6               	movwf	___fladd@b
  8639  15A7                     l2588:
  8640  15A7  085D               	movf	___fladd@a+3,w
  8641  15A8  3980               	andlw	128
  8642  15A9  00DE               	movwf	??___fladd
  8643  15AA  085E               	movf	??___fladd,w
  8644  15AB  00E7               	movwf	___fladd@aexp
  8645  15AC                     l2590:
  8646  15AC  0867               	movf	___fladd@aexp,w
  8647  15AD  0666               	xorwf	___fladd@signs,w
  8648  15AE  1903               	skipnz
  8649  15AF  2DB1               	goto	u3211
  8650  15B0  2DB2               	goto	u3210
  8651  15B1                     u3211:
  8652  15B1  2DB3               	goto	l2594
  8653  15B2                     u3210:
  8654  15B2                     l2592:
  8655  15B2  1766               	bsf	___fladd@signs,6
  8656  15B3                     l2594:
  8657  15B3  085D               	movf	___fladd@a+3,w
  8658  15B4  00DE               	movwf	??___fladd
  8659  15B5  075E               	addwf	??___fladd,w
  8660  15B6  00DF               	movwf	??___fladd+1
  8661  15B7  085F               	movf	??___fladd+1,w
  8662  15B8  00E7               	movwf	___fladd@aexp
  8663  15B9                     l2596:
  8664  15B9  1FDC               	btfss	___fladd@a+2,7
  8665  15BA  2DBC               	goto	u3221
  8666  15BB  2DBD               	goto	u3220
  8667  15BC                     u3221:
  8668  15BC  2DBE               	goto	l2600
  8669  15BD                     u3220:
  8670  15BD                     l2598:
  8671  15BD  1467               	bsf	___fladd@aexp,0
  8672  15BE                     l2600:
  8673  15BE  0867               	movf	___fladd@aexp,w
  8674  15BF  1903               	btfsc	3,2
  8675  15C0  2DC2               	goto	u3231
  8676  15C1  2DC3               	goto	u3230
  8677  15C2                     u3231:
  8678  15C2  2DD3               	goto	l2610
  8679  15C3                     u3230:
  8680  15C3                     l2602:
  8681  15C3  0A67               	incf	___fladd@aexp,w
  8682  15C4  1D03               	btfss	3,2
  8683  15C5  2DC7               	goto	u3241
  8684  15C6  2DC8               	goto	u3240
  8685  15C7                     u3241:
  8686  15C7  2DD0               	goto	l2606
  8687  15C8                     u3240:
  8688  15C8                     l2604:
  8689  15C8  3000               	movlw	0
  8690  15C9  00DD               	movwf	___fladd@a+3
  8691  15CA  3000               	movlw	0
  8692  15CB  00DC               	movwf	___fladd@a+2
  8693  15CC  3000               	movlw	0
  8694  15CD  00DB               	movwf	___fladd@a+1
  8695  15CE  3000               	movlw	0
  8696  15CF  00DA               	movwf	___fladd@a
  8697  15D0                     l2606:
  8698  15D0  17DC               	bsf	___fladd@a+2,7
  8699  15D1                     l2608:
  8700  15D1  01DD               	clrf	___fladd@a+3
  8701  15D2  2DDB               	goto	l768
  8702  15D3                     l2610:
  8703  15D3  3000               	movlw	0
  8704  15D4  00DD               	movwf	___fladd@a+3
  8705  15D5  3000               	movlw	0
  8706  15D6  00DC               	movwf	___fladd@a+2
  8707  15D7  3000               	movlw	0
  8708  15D8  00DB               	movwf	___fladd@a+1
  8709  15D9  3000               	movlw	0
  8710  15DA  00DA               	movwf	___fladd@a
  8711  15DB                     l768:
  8712  15DB  0868               	movf	___fladd@bexp,w
  8713  15DC  0267               	subwf	___fladd@aexp,w
  8714  15DD  1803               	skipnc
  8715  15DE  2DE0               	goto	u3251
  8716  15DF  2DE1               	goto	u3250
  8717  15E0                     u3251:
  8718  15E0  2E25               	goto	l2646
  8719  15E1                     u3250:
  8720  15E1                     l2612:
  8721  15E1  1F66               	btfss	___fladd@signs,6
  8722  15E2  2DE4               	goto	u3261
  8723  15E3  2DE5               	goto	u3260
  8724  15E4                     u3261:
  8725  15E4  2DE9               	goto	l2616
  8726  15E5                     u3260:
  8727  15E5                     l2614:
  8728  15E5  3080               	movlw	128
  8729  15E6  00DE               	movwf	??___fladd
  8730  15E7  085E               	movf	??___fladd,w
  8731  15E8  06E6               	xorwf	___fladd@signs,f
  8732  15E9                     l2616:
  8733  15E9  0868               	movf	___fladd@bexp,w
  8734  15EA  00DE               	movwf	??___fladd
  8735  15EB  085E               	movf	??___fladd,w
  8736  15EC  00E9               	movwf	___fladd@grs
  8737  15ED                     l2618:
  8738  15ED  0867               	movf	___fladd@aexp,w
  8739  15EE  00DE               	movwf	??___fladd
  8740  15EF  085E               	movf	??___fladd,w
  8741  15F0  00E8               	movwf	___fladd@bexp
  8742  15F1                     l2620:
  8743  15F1  0869               	movf	___fladd@grs,w
  8744  15F2  00DE               	movwf	??___fladd
  8745  15F3  085E               	movf	??___fladd,w
  8746  15F4  00E7               	movwf	___fladd@aexp
  8747  15F5                     l2622:
  8748  15F5  0856               	movf	___fladd@b,w
  8749  15F6  00DE               	movwf	??___fladd
  8750  15F7  085E               	movf	??___fladd,w
  8751  15F8  00E9               	movwf	___fladd@grs
  8752  15F9                     l2624:
  8753  15F9  085A               	movf	___fladd@a,w
  8754  15FA  00DE               	movwf	??___fladd
  8755  15FB  085E               	movf	??___fladd,w
  8756  15FC  00D6               	movwf	___fladd@b
  8757  15FD                     l2626:
  8758  15FD  0869               	movf	___fladd@grs,w
  8759  15FE  00DE               	movwf	??___fladd
  8760  15FF  085E               	movf	??___fladd,w
  8761  1600  00DA               	movwf	___fladd@a
  8762  1601                     l2628:
  8763  1601  0857               	movf	___fladd@b+1,w
  8764  1602  00DE               	movwf	??___fladd
  8765  1603  085E               	movf	??___fladd,w
  8766  1604  00E9               	movwf	___fladd@grs
  8767  1605                     l2630:
  8768  1605  085B               	movf	___fladd@a+1,w
  8769  1606  00DE               	movwf	??___fladd
  8770  1607  085E               	movf	??___fladd,w
  8771  1608  00D7               	movwf	___fladd@b+1
  8772  1609                     l2632:
  8773  1609  0869               	movf	___fladd@grs,w
  8774  160A  00DE               	movwf	??___fladd
  8775  160B  085E               	movf	??___fladd,w
  8776  160C  00DB               	movwf	___fladd@a+1
  8777  160D                     l2634:
  8778  160D  0858               	movf	___fladd@b+2,w
  8779  160E  00DE               	movwf	??___fladd
  8780  160F  085E               	movf	??___fladd,w
  8781  1610  00E9               	movwf	___fladd@grs
  8782  1611                     l2636:
  8783  1611  085C               	movf	___fladd@a+2,w
  8784  1612  00DE               	movwf	??___fladd
  8785  1613  085E               	movf	??___fladd,w
  8786  1614  00D8               	movwf	___fladd@b+2
  8787  1615                     l2638:
  8788  1615  0869               	movf	___fladd@grs,w
  8789  1616  00DE               	movwf	??___fladd
  8790  1617  085E               	movf	??___fladd,w
  8791  1618  00DC               	movwf	___fladd@a+2
  8792  1619                     l2640:
  8793  1619  0859               	movf	___fladd@b+3,w
  8794  161A  00DE               	movwf	??___fladd
  8795  161B  085E               	movf	??___fladd,w
  8796  161C  00E9               	movwf	___fladd@grs
  8797  161D                     l2642:
  8798  161D  085D               	movf	___fladd@a+3,w
  8799  161E  00DE               	movwf	??___fladd
  8800  161F  085E               	movf	??___fladd,w
  8801  1620  00D9               	movwf	___fladd@b+3
  8802  1621                     l2644:
  8803  1621  0869               	movf	___fladd@grs,w
  8804  1622  00DE               	movwf	??___fladd
  8805  1623  085E               	movf	??___fladd,w
  8806  1624  00DD               	movwf	___fladd@a+3
  8807  1625                     l2646:
  8808  1625  01E9               	clrf	___fladd@grs
  8809  1626                     l2648:
  8810  1626  0867               	movf	___fladd@aexp,w
  8811  1627  00DE               	movwf	??___fladd
  8812  1628  01DF               	clrf	??___fladd+1
  8813  1629  085F               	movf	??___fladd+1,w
  8814  162A  00E1               	movwf	??___fladd+3
  8815  162B  0868               	movf	___fladd@bexp,w
  8816  162C  025E               	subwf	??___fladd,w
  8817  162D  00E0               	movwf	??___fladd+2
  8818  162E  1C03               	skipc
  8819  162F  03E1               	decf	??___fladd+3,f
  8820  1630  0861               	movf	??___fladd+3,w
  8821  1631  3A80               	xorlw	128
  8822  1632  00FF               	movwf	btemp+1
  8823  1633  3080               	movlw	128
  8824  1634  027F               	subwf	btemp+1,w
  8825  1635  1D03               	skipz
  8826  1636  2E39               	goto	u3275
  8827  1637  301A               	movlw	26
  8828  1638  0260               	subwf	??___fladd+2,w
  8829  1639                     u3275:
  8830  1639  1C03               	skipc
  8831  163A  2E3C               	goto	u3271
  8832  163B  2E3D               	goto	u3270
  8833  163C                     u3271:
  8834  163C  2E7A               	goto	l2664
  8835  163D                     u3270:
  8836  163D                     l2650:
  8837  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8838  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8839  163F  0859               	movf	___fladd@b+3,w
  8840  1640  0458               	iorwf	___fladd@b+2,w
  8841  1641  0457               	iorwf	___fladd@b+1,w
  8842  1642  0456               	iorwf	___fladd@b,w
  8843  1643  1D03               	skipz
  8844  1644  2E46               	goto	u3281
  8845  1645  2E48               	goto	u3280
  8846  1646                     u3281:
  8847  1646  3001               	movlw	1
  8848  1647  2E49               	goto	u3290
  8849  1648                     u3280:
  8850  1648  3000               	movlw	0
  8851  1649                     u3290:
  8852  1649  00DE               	movwf	??___fladd
  8853  164A  085E               	movf	??___fladd,w
  8854  164B  00E9               	movwf	___fladd@grs
  8855  164C  3000               	movlw	0
  8856  164D  00D9               	movwf	___fladd@b+3
  8857  164E  3000               	movlw	0
  8858  164F  00D8               	movwf	___fladd@b+2
  8859  1650  3000               	movlw	0
  8860  1651  00D7               	movwf	___fladd@b+1
  8861  1652  3000               	movlw	0
  8862  1653  00D6               	movwf	___fladd@b
  8863  1654  0867               	movf	___fladd@aexp,w
  8864  1655  00DE               	movwf	??___fladd
  8865  1656  085E               	movf	??___fladd,w
  8866  1657  00E8               	movwf	___fladd@bexp
  8867  1658  2E82               	goto	l772
  8868  1659                     l774:
  8869  1659  1C69               	btfss	___fladd@grs,0
  8870  165A  2E5C               	goto	u3301
  8871  165B  2E5D               	goto	u3300
  8872  165C                     u3301:
  8873  165C  2E66               	goto	l2654
  8874  165D                     u3300:
  8875  165D                     l2652:
  8876  165D  0869               	movf	___fladd@grs,w
  8877  165E  00DE               	movwf	??___fladd
  8878  165F  1003               	clrc
  8879  1660  0C5E               	rrf	??___fladd,w
  8880  1661  3801               	iorlw	1
  8881  1662  00DF               	movwf	??___fladd+1
  8882  1663  085F               	movf	??___fladd+1,w
  8883  1664  00E9               	movwf	___fladd@grs
  8884  1665  2E68               	goto	l2656
  8885  1666                     l2654:
  8886  1666  1003               	clrc
  8887  1667  0CE9               	rrf	___fladd@grs,f
  8888  1668                     l2656:
  8889  1668  1C56               	btfss	___fladd@b,0
  8890  1669  2E6B               	goto	u3311
  8891  166A  2E6C               	goto	u3310
  8892  166B                     u3311:
  8893  166B  2E6D               	goto	l2660
  8894  166C                     u3310:
  8895  166C                     l2658:
  8896  166C  17E9               	bsf	___fladd@grs,7
  8897  166D                     l2660:
  8898  166D  3001               	movlw	1
  8899  166E  00DE               	movwf	??___fladd
  8900  166F                     u3325:
  8901  166F  0D59               	rlf	___fladd@b+3,w
  8902  1670  0CD9               	rrf	___fladd@b+3,f
  8903  1671  0CD8               	rrf	___fladd@b+2,f
  8904  1672  0CD7               	rrf	___fladd@b+1,f
  8905  1673  0CD6               	rrf	___fladd@b,f
  8906  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8907  1675  2E6F               	goto	u3325
  8908  1676                     l2662:
  8909  1676  3001               	movlw	1
  8910  1677  00DE               	movwf	??___fladd
  8911  1678  085E               	movf	??___fladd,w
  8912  1679  07E8               	addwf	___fladd@bexp,f
  8913  167A                     l2664:
  8914  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8915  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8916  167C  0867               	movf	___fladd@aexp,w
  8917  167D  0268               	subwf	___fladd@bexp,w
  8918  167E  1C03               	skipc
  8919  167F  2E81               	goto	u3331
  8920  1680  2E82               	goto	u3330
  8921  1681                     u3331:
  8922  1681  2E59               	goto	l774
  8923  1682                     u3330:
  8924  1682                     l772:
  8925  1682  1B66               	btfsc	___fladd@signs,6
  8926  1683  2E85               	goto	u3341
  8927  1684  2E86               	goto	u3340
  8928  1685                     u3341:
  8929  1685  2ED1               	goto	l2690
  8930  1686                     u3340:
  8931  1686                     l2666:
  8932  1686  0868               	movf	___fladd@bexp,w
  8933  1687  1D03               	btfss	3,2
  8934  1688  2E8A               	goto	u3351
  8935  1689  2E8B               	goto	u3350
  8936  168A                     u3351:
  8937  168A  2E94               	goto	l2672
  8938  168B                     u3350:
  8939  168B                     l2668:
  8940  168B  3000               	movlw	0
  8941  168C  00D9               	movwf	?___fladd+3
  8942  168D  3000               	movlw	0
  8943  168E  00D8               	movwf	?___fladd+2
  8944  168F  3000               	movlw	0
  8945  1690  00D7               	movwf	?___fladd+1
  8946  1691  3000               	movlw	0
  8947  1692  00D6               	movwf	?___fladd
  8948  1693  2FFF               	goto	l781
  8949  1694                     l2672:
  8950  1694  085A               	movf	___fladd@a,w
  8951  1695  07D6               	addwf	___fladd@b,f
  8952  1696  085B               	movf	___fladd@a+1,w
  8953  1697  1103               	clrz
  8954  1698  1803               	skipnc
  8955  1699  3E01               	addlw	1
  8956  169A  1903               	skipnz
  8957  169B  2E9D               	goto	u3361
  8958  169C  07D7               	addwf	___fladd@b+1,f
  8959  169D                     u3361:
  8960  169D  085C               	movf	___fladd@a+2,w
  8961  169E  1103               	clrz
  8962  169F  1803               	skipnc
  8963  16A0  3E01               	addlw	1
  8964  16A1  1903               	skipnz
  8965  16A2  2EA4               	goto	u3362
  8966  16A3  07D8               	addwf	___fladd@b+2,f
  8967  16A4                     u3362:
  8968  16A4  085D               	movf	___fladd@a+3,w
  8969  16A5  1103               	clrz
  8970  16A6  1803               	skipnc
  8971  16A7  3E01               	addlw	1
  8972  16A8  1903               	skipnz
  8973  16A9  2EAB               	goto	u3363
  8974  16AA  07D9               	addwf	___fladd@b+3,f
  8975  16AB                     u3363:
  8976  16AB                     l2674:
  8977  16AB  1C59               	btfss	___fladd@b+3,0
  8978  16AC  2EAE               	goto	u3371
  8979  16AD  2EAF               	goto	u3370
  8980  16AE                     u3371:
  8981  16AE  2F85               	goto	l2724
  8982  16AF                     u3370:
  8983  16AF                     l2676:
  8984  16AF  1C69               	btfss	___fladd@grs,0
  8985  16B0  2EB2               	goto	u3381
  8986  16B1  2EB3               	goto	u3380
  8987  16B2                     u3381:
  8988  16B2  2EBC               	goto	l2680
  8989  16B3                     u3380:
  8990  16B3                     l2678:
  8991  16B3  0869               	movf	___fladd@grs,w
  8992  16B4  00DE               	movwf	??___fladd
  8993  16B5  1003               	clrc
  8994  16B6  0C5E               	rrf	??___fladd,w
  8995  16B7  3801               	iorlw	1
  8996  16B8  00DF               	movwf	??___fladd+1
  8997  16B9  085F               	movf	??___fladd+1,w
  8998  16BA  00E9               	movwf	___fladd@grs
  8999  16BB  2EBE               	goto	l2682
  9000  16BC                     l2680:
  9001  16BC  1003               	clrc
  9002  16BD  0CE9               	rrf	___fladd@grs,f
  9003  16BE                     l2682:
  9004  16BE  1C56               	btfss	___fladd@b,0
  9005  16BF  2EC1               	goto	u3391
  9006  16C0  2EC2               	goto	u3390
  9007  16C1                     u3391:
  9008  16C1  2EC3               	goto	l2686
  9009  16C2                     u3390:
  9010  16C2                     l2684:
  9011  16C2  17E9               	bsf	___fladd@grs,7
  9012  16C3                     l2686:
  9013  16C3  3001               	movlw	1
  9014  16C4  00DE               	movwf	??___fladd
  9015  16C5                     u3405:
  9016  16C5  0D59               	rlf	___fladd@b+3,w
  9017  16C6  0CD9               	rrf	___fladd@b+3,f
  9018  16C7  0CD8               	rrf	___fladd@b+2,f
  9019  16C8  0CD7               	rrf	___fladd@b+1,f
  9020  16C9  0CD6               	rrf	___fladd@b,f
  9021  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  9022  16CB  2EC5               	goto	u3405
  9023  16CC                     l2688:
  9024  16CC  3001               	movlw	1
  9025  16CD  00DE               	movwf	??___fladd
  9026  16CE  085E               	movf	??___fladd,w
  9027  16CF  07E8               	addwf	___fladd@bexp,f
  9028  16D0  2F85               	goto	l2724
  9029  16D1                     l2690:
  9030  16D1  0859               	movf	___fladd@b+3,w
  9031  16D2  3A80               	xorlw	128
  9032  16D3  00FF               	movwf	btemp+1
  9033  16D4  085D               	movf	___fladd@a+3,w
  9034  16D5  3A80               	xorlw	128
  9035  16D6  027F               	subwf	btemp+1,w
  9036  16D7  1D03               	skipz
  9037  16D8  2EE3               	goto	u3413
  9038  16D9  085C               	movf	___fladd@a+2,w
  9039  16DA  0258               	subwf	___fladd@b+2,w
  9040  16DB  1D03               	skipz
  9041  16DC  2EE3               	goto	u3413
  9042  16DD  085B               	movf	___fladd@a+1,w
  9043  16DE  0257               	subwf	___fladd@b+1,w
  9044  16DF  1D03               	skipz
  9045  16E0  2EE3               	goto	u3413
  9046  16E1  085A               	movf	___fladd@a,w
  9047  16E2  0256               	subwf	___fladd@b,w
  9048  16E3                     u3413:
  9049  16E3  1803               	skipnc
  9050  16E4  2EE6               	goto	u3411
  9051  16E5  2EE7               	goto	u3410
  9052  16E6                     u3411:
  9053  16E6  2F3F               	goto	l2700
  9054  16E7                     u3410:
  9055  16E7                     l2692:
  9056  16E7  30FF               	movlw	255
  9057  16E8  00DE               	movwf	??___fladd
  9058  16E9  30FF               	movlw	255
  9059  16EA  00DF               	movwf	??___fladd+1
  9060  16EB  30FF               	movlw	255
  9061  16EC  00E0               	movwf	??___fladd+2
  9062  16ED  30FF               	movlw	255
  9063  16EE  00E1               	movwf	??___fladd+3
  9064  16EF  085A               	movf	___fladd@a,w
  9065  16F0  00E2               	movwf	??___fladd+4
  9066  16F1  085B               	movf	___fladd@a+1,w
  9067  16F2  00E3               	movwf	??___fladd+5
  9068  16F3  085C               	movf	___fladd@a+2,w
  9069  16F4  00E4               	movwf	??___fladd+6
  9070  16F5  085D               	movf	___fladd@a+3,w
  9071  16F6  00E5               	movwf	??___fladd+7
  9072  16F7  0856               	movf	___fladd@b,w
  9073  16F8  02E2               	subwf	??___fladd+4,f
  9074  16F9  0857               	movf	___fladd@b+1,w
  9075  16FA  1C03               	skipc
  9076  16FB  0F57               	incfsz	___fladd@b+1,w
  9077  16FC  2EFE               	goto	u3421
  9078  16FD  2EFF               	goto	u3422
  9079  16FE                     u3421:
  9080  16FE  02E3               	subwf	??___fladd+5,f
  9081  16FF                     u3422:
  9082  16FF  0858               	movf	___fladd@b+2,w
  9083  1700  1C03               	skipc
  9084  1701  0F58               	incfsz	___fladd@b+2,w
  9085  1702  2F04               	goto	u3423
  9086  1703  2F05               	goto	u3424
  9087  1704                     u3423:
  9088  1704  02E4               	subwf	??___fladd+6,f
  9089  1705                     u3424:
  9090  1705  0859               	movf	___fladd@b+3,w
  9091  1706  1C03               	skipc
  9092  1707  0F59               	incfsz	___fladd@b+3,w
  9093  1708  2F0A               	goto	u3425
  9094  1709  2F0B               	goto	u3426
  9095  170A                     u3425:
  9096  170A  02E5               	subwf	??___fladd+7,f
  9097  170B                     u3426:
  9098  170B  0862               	movf	??___fladd+4,w
  9099  170C  07DE               	addwf	??___fladd,f
  9100  170D  0863               	movf	??___fladd+5,w
  9101  170E  1803               	skipnc
  9102  170F  0F63               	incfsz	??___fladd+5,w
  9103  1710  2F12               	goto	u3430
  9104  1711  2F13               	goto	u3431
  9105  1712                     u3430:
  9106  1712  07DF               	addwf	??___fladd+1,f
  9107  1713                     u3431:
  9108  1713  0864               	movf	??___fladd+6,w
  9109  1714  1803               	skipnc
  9110  1715  0F64               	incfsz	??___fladd+6,w
  9111  1716  2F18               	goto	u3432
  9112  1717  2F19               	goto	u3433
  9113  1718                     u3432:
  9114  1718  07E0               	addwf	??___fladd+2,f
  9115  1719                     u3433:
  9116  1719  0865               	movf	??___fladd+7,w
  9117  171A  1803               	skipnc
  9118  171B  0A65               	incf	??___fladd+7,w
  9119  171C  07E1               	addwf	??___fladd+3,f
  9120  171D  0861               	movf	??___fladd+3,w
  9121  171E  00D9               	movwf	___fladd@b+3
  9122  171F  0860               	movf	??___fladd+2,w
  9123  1720  00D8               	movwf	___fladd@b+2
  9124  1721  085F               	movf	??___fladd+1,w
  9125  1722  00D7               	movwf	___fladd@b+1
  9126  1723  085E               	movf	??___fladd,w
  9127  1724  00D6               	movwf	___fladd@b
  9128  1725                     l2694:
  9129  1725  3080               	movlw	128
  9130  1726  00DE               	movwf	??___fladd
  9131  1727  085E               	movf	??___fladd,w
  9132  1728  06E6               	xorwf	___fladd@signs,f
  9133  1729  09E9               	comf	___fladd@grs,f
  9134  172A  0AE9               	incf	___fladd@grs,f
  9135  172B                     l2696:
  9136  172B  0869               	movf	___fladd@grs,w
  9137  172C  1D03               	btfss	3,2
  9138  172D  2F2F               	goto	u3441
  9139  172E  2F30               	goto	u3440
  9140  172F                     u3441:
  9141  172F  2F4D               	goto	l789
  9142  1730                     u3440:
  9143  1730                     l2698:
  9144  1730  3001               	movlw	1
  9145  1731  07D6               	addwf	___fladd@b,f
  9146  1732  3000               	movlw	0
  9147  1733  1803               	skipnc
  9148  1734  3001               	movlw	1
  9149  1735  07D7               	addwf	___fladd@b+1,f
  9150  1736  3000               	movlw	0
  9151  1737  1803               	skipnc
  9152  1738  3001               	movlw	1
  9153  1739  07D8               	addwf	___fladd@b+2,f
  9154  173A  3000               	movlw	0
  9155  173B  1803               	skipnc
  9156  173C  3001               	movlw	1
  9157  173D  07D9               	addwf	___fladd@b+3,f
  9158  173E  2F4D               	goto	l789
  9159  173F                     l2700:
  9160  173F  085A               	movf	___fladd@a,w
  9161  1740  02D6               	subwf	___fladd@b,f
  9162  1741  085B               	movf	___fladd@a+1,w
  9163  1742  1C03               	skipc
  9164  1743  0F5B               	incfsz	___fladd@a+1,w
  9165  1744  02D7               	subwf	___fladd@b+1,f
  9166  1745  085C               	movf	___fladd@a+2,w
  9167  1746  1C03               	skipc
  9168  1747  0F5C               	incfsz	___fladd@a+2,w
  9169  1748  02D8               	subwf	___fladd@b+2,f
  9170  1749  085D               	movf	___fladd@a+3,w
  9171  174A  1C03               	skipc
  9172  174B  0F5D               	incfsz	___fladd@a+3,w
  9173  174C  02D9               	subwf	___fladd@b+3,f
  9174  174D                     l789:
  9175  174D  0859               	movf	___fladd@b+3,w
  9176  174E  0458               	iorwf	___fladd@b+2,w
  9177  174F  0457               	iorwf	___fladd@b+1,w
  9178  1750  0456               	iorwf	___fladd@b,w
  9179  1751  1D03               	skipz
  9180  1752  2F54               	goto	u3451
  9181  1753  2F55               	goto	u3450
  9182  1754                     u3451:
  9183  1754  2F81               	goto	l2722
  9184  1755                     u3450:
  9185  1755                     l2702:
  9186  1755  0869               	movf	___fladd@grs,w
  9187  1756  1D03               	btfss	3,2
  9188  1757  2F59               	goto	u3461
  9189  1758  2F5A               	goto	u3460
  9190  1759                     u3461:
  9191  1759  2F81               	goto	l2722
  9192  175A                     u3460:
  9193  175A                     l2704:
  9194  175A  3000               	movlw	0
  9195  175B  00D9               	movwf	?___fladd+3
  9196  175C  3000               	movlw	0
  9197  175D  00D8               	movwf	?___fladd+2
  9198  175E  3000               	movlw	0
  9199  175F  00D7               	movwf	?___fladd+1
  9200  1760  3000               	movlw	0
  9201  1761  00D6               	movwf	?___fladd
  9202  1762  2FFF               	goto	l781
  9203  1763                     l2708:
  9204  1763  3001               	movlw	1
  9205  1764  00DE               	movwf	??___fladd
  9206  1765                     u3475:
  9207  1765  1003               	clrc
  9208  1766  0DD6               	rlf	___fladd@b,f
  9209  1767  0DD7               	rlf	___fladd@b+1,f
  9210  1768  0DD8               	rlf	___fladd@b+2,f
  9211  1769  0DD9               	rlf	___fladd@b+3,f
  9212  176A  0BDE               	decfsz	??___fladd,f
  9213  176B  2F65               	goto	u3475
  9214  176C                     l2710:
  9215  176C  1FE9               	btfss	___fladd@grs,7
  9216  176D  2F6F               	goto	u3481
  9217  176E  2F70               	goto	u3480
  9218  176F                     u3481:
  9219  176F  2F71               	goto	l793
  9220  1770                     u3480:
  9221  1770                     l2712:
  9222  1770  1456               	bsf	___fladd@b,0
  9223  1771                     l793:
  9224  1771  1C69               	btfss	___fladd@grs,0
  9225  1772  2F74               	goto	u3491
  9226  1773  2F75               	goto	u3490
  9227  1774                     u3491:
  9228  1774  2F78               	goto	l2716
  9229  1775                     u3490:
  9230  1775                     l2714:
  9231  1775  1403               	setc
  9232  1776  0DE9               	rlf	___fladd@grs,f
  9233  1777  2F7A               	goto	l2718
  9234  1778                     l2716:
  9235  1778  1003               	clrc
  9236  1779  0DE9               	rlf	___fladd@grs,f
  9237  177A                     l2718:
  9238  177A  0868               	movf	___fladd@bexp,w
  9239  177B  1903               	btfsc	3,2
  9240  177C  2F7E               	goto	u3501
  9241  177D  2F7F               	goto	u3500
  9242  177E                     u3501:
  9243  177E  2F81               	goto	l2722
  9244  177F                     u3500:
  9245  177F                     l2720:
  9246  177F  3001               	movlw	1
  9247  1780  02E8               	subwf	___fladd@bexp,f
  9248  1781                     l2722:
  9249  1781  1FD8               	btfss	___fladd@b+2,7
  9250  1782  2F84               	goto	u3511
  9251  1783  2F85               	goto	u3510
  9252  1784                     u3511:
  9253  1784  2F63               	goto	l2708
  9254  1785                     u3510:
  9255  1785                     l2724:
  9256  1785  01E7               	clrf	___fladd@aexp
  9257  1786                     l2726:
  9258  1786  1FE9               	btfss	___fladd@grs,7
  9259  1787  2F89               	goto	u3521
  9260  1788  2F8A               	goto	u3520
  9261  1789                     u3521:
  9262  1789  2F98               	goto	l2734
  9263  178A                     u3520:
  9264  178A                     l2728:
  9265  178A  0869               	movf	___fladd@grs,w
  9266  178B  397F               	andlw	127
  9267  178C  1903               	btfsc	3,2
  9268  178D  2F8F               	goto	u3531
  9269  178E  2F90               	goto	u3530
  9270  178F                     u3531:
  9271  178F  2F93               	goto	l799
  9272  1790                     u3530:
  9273  1790                     l2730:
  9274  1790  01E7               	clrf	___fladd@aexp
  9275  1791  0AE7               	incf	___fladd@aexp,f
  9276  1792  2F98               	goto	l2734
  9277  1793                     l799:
  9278  1793  1C56               	btfss	___fladd@b,0
  9279  1794  2F96               	goto	u3541
  9280  1795  2F97               	goto	u3540
  9281  1796                     u3541:
  9282  1796  2F98               	goto	l2734
  9283  1797                     u3540:
  9284  1797  2F90               	goto	l2730
  9285  1798                     l2734:
  9286  1798  0867               	movf	___fladd@aexp,w
  9287  1799  1903               	btfsc	3,2
  9288  179A  2F9C               	goto	u3551
  9289  179B  2F9D               	goto	u3550
  9290  179C                     u3551:
  9291  179C  2FD1               	goto	l802
  9292  179D                     u3550:
  9293  179D                     l2736:
  9294  179D  3001               	movlw	1
  9295  179E  07D6               	addwf	___fladd@b,f
  9296  179F  3000               	movlw	0
  9297  17A0  1803               	skipnc
  9298  17A1  3001               	movlw	1
  9299  17A2  07D7               	addwf	___fladd@b+1,f
  9300  17A3  3000               	movlw	0
  9301  17A4  1803               	skipnc
  9302  17A5  3001               	movlw	1
  9303  17A6  07D8               	addwf	___fladd@b+2,f
  9304  17A7  3000               	movlw	0
  9305  17A8  1803               	skipnc
  9306  17A9  3001               	movlw	1
  9307  17AA  07D9               	addwf	___fladd@b+3,f
  9308  17AB                     l2738:
  9309  17AB  1C59               	btfss	___fladd@b+3,0
  9310  17AC  2FAE               	goto	u3561
  9311  17AD  2FAF               	goto	u3560
  9312  17AE                     u3561:
  9313  17AE  2FD1               	goto	l802
  9314  17AF                     u3560:
  9315  17AF                     l2740:
  9316  17AF  0856               	movf	___fladd@b,w
  9317  17B0  00DE               	movwf	??___fladd
  9318  17B1  0857               	movf	___fladd@b+1,w
  9319  17B2  00DF               	movwf	??___fladd+1
  9320  17B3  0858               	movf	___fladd@b+2,w
  9321  17B4  00E0               	movwf	??___fladd+2
  9322  17B5  0859               	movf	___fladd@b+3,w
  9323  17B6  00E1               	movwf	??___fladd+3
  9324  17B7  3001               	movlw	1
  9325  17B8  00E2               	movwf	??___fladd+4
  9326  17B9                     u3575:
  9327  17B9  0D61               	rlf	??___fladd+3,w
  9328  17BA  0CE1               	rrf	??___fladd+3,f
  9329  17BB  0CE0               	rrf	??___fladd+2,f
  9330  17BC  0CDF               	rrf	??___fladd+1,f
  9331  17BD  0CDE               	rrf	??___fladd,f
  9332  17BE                     u3570:
  9333  17BE  0BE2               	decfsz	??___fladd+4,f
  9334  17BF  2FB9               	goto	u3575
  9335  17C0  0861               	movf	??___fladd+3,w
  9336  17C1  00D9               	movwf	___fladd@b+3
  9337  17C2  0860               	movf	??___fladd+2,w
  9338  17C3  00D8               	movwf	___fladd@b+2
  9339  17C4  085F               	movf	??___fladd+1,w
  9340  17C5  00D7               	movwf	___fladd@b+1
  9341  17C6  085E               	movf	??___fladd,w
  9342  17C7  00D6               	movwf	___fladd@b
  9343  17C8  0A68               	incf	___fladd@bexp,w
  9344  17C9  1903               	btfsc	3,2
  9345  17CA  2FCC               	goto	u3581
  9346  17CB  2FCD               	goto	u3580
  9347  17CC                     u3581:
  9348  17CC  2FD1               	goto	l802
  9349  17CD                     u3580:
  9350  17CD                     l2742:
  9351  17CD  3001               	movlw	1
  9352  17CE  00DE               	movwf	??___fladd
  9353  17CF  085E               	movf	??___fladd,w
  9354  17D0  07E8               	addwf	___fladd@bexp,f
  9355  17D1                     l802:
  9356  17D1  0A68               	incf	___fladd@bexp,w
  9357  17D2  1903               	btfsc	3,2
  9358  17D3  2FD5               	goto	u3591
  9359  17D4  2FD6               	goto	u3590
  9360  17D5                     u3591:
  9361  17D5  2FDB               	goto	l2746
  9362  17D6                     u3590:
  9363  17D6                     l2744:
  9364  17D6  0868               	movf	___fladd@bexp,w
  9365  17D7  1D03               	btfss	3,2
  9366  17D8  2FDA               	goto	u3601
  9367  17D9  2FDB               	goto	u3600
  9368  17DA                     u3601:
  9369  17DA  2FE9               	goto	l2752
  9370  17DB                     u3600:
  9371  17DB                     l2746:
  9372  17DB  3000               	movlw	0
  9373  17DC  00D9               	movwf	___fladd@b+3
  9374  17DD  3000               	movlw	0
  9375  17DE  00D8               	movwf	___fladd@b+2
  9376  17DF  3000               	movlw	0
  9377  17E0  00D7               	movwf	___fladd@b+1
  9378  17E1  3000               	movlw	0
  9379  17E2  00D6               	movwf	___fladd@b
  9380  17E3                     l2748:
  9381  17E3  0868               	movf	___fladd@bexp,w
  9382  17E4  1D03               	btfss	3,2
  9383  17E5  2FE7               	goto	u3611
  9384  17E6  2FE8               	goto	u3610
  9385  17E7                     u3611:
  9386  17E7  2FE9               	goto	l2752
  9387  17E8                     u3610:
  9388  17E8                     l2750:
  9389  17E8  01E6               	clrf	___fladd@signs
  9390  17E9                     l2752:
  9391  17E9  1C68               	btfss	___fladd@bexp,0
  9392  17EA  2FEC               	goto	u3621
  9393  17EB  2FED               	goto	u3620
  9394  17EC                     u3621:
  9395  17EC  2FEF               	goto	l2756
  9396  17ED                     u3620:
  9397  17ED                     l2754:
  9398  17ED  17D8               	bsf	___fladd@b+2,7
  9399  17EE  2FF3               	goto	l810
  9400  17EF                     l2756:
  9401  17EF  307F               	movlw	127
  9402  17F0  00DE               	movwf	??___fladd
  9403  17F1  085E               	movf	??___fladd,w
  9404  17F2  05D8               	andwf	___fladd@b+2,f
  9405  17F3                     l810:
  9406  17F3  0868               	movf	___fladd@bexp,w
  9407  17F4  00DE               	movwf	??___fladd
  9408  17F5  1003               	clrc
  9409  17F6  0C5E               	rrf	??___fladd,w
  9410  17F7  00DF               	movwf	??___fladd+1
  9411  17F8  085F               	movf	??___fladd+1,w
  9412  17F9  00D9               	movwf	___fladd@b+3
  9413  17FA                     l2758:
  9414  17FA  1FE6               	btfss	___fladd@signs,7
  9415  17FB  2FFD               	goto	u3631
  9416  17FC  2FFE               	goto	u3630
  9417  17FD                     u3631:
  9418  17FD  2FFF               	goto	l811
  9419  17FE                     u3630:
  9420  17FE                     l2760:
  9421  17FE  17D9               	bsf	___fladd@b+3,7
  9422  17FF                     l811:
  9423  17FF                     l781:
  9424  17FF  0008               	return
  9425  1800                     __end_of___fladd:
  9426                           
  9427                           	psect	text20
  9428  193C                     __ptext20:	
  9429 ;; *************** function ___flneg *****************
  9430 ;; Defined at:
  9431 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  f1              4    2[COMMON] unsigned char 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  4    2[COMMON] unsigned char 
  9438 ;; Registers used:
  9439 ;;		wreg
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9445 ;;      Params:         4       0       0       0       0
  9446 ;;      Locals:         0       0       0       0       0
  9447 ;;      Temps:          0       0       0       0       0
  9448 ;;      Totals:         4       0       0       0       0
  9449 ;;Total ram usage:        4 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; Hardware stack levels required when called:    1
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_sprintf
  9456 ;; This function uses a non-reentrant model
  9457 ;;
  9458                           
  9459                           
  9460                           ;psect for function ___flneg
  9461  193C                     ___flneg:
  9462  193C                     l3156:	
  9463                           ;incstack = 0
  9464                           ; Regs used in ___flneg: [wreg]
  9465                           
  9466  193C  0875               	movf	___flneg@f1+3,w
  9467  193D  0474               	iorwf	___flneg@f1+2,w
  9468  193E  0473               	iorwf	___flneg@f1+1,w
  9469  193F  0472               	iorwf	___flneg@f1,w
  9470  1940  1903               	skipnz
  9471  1941  2943               	goto	u4781
  9472  1942  2944               	goto	u4780
  9473  1943                     u4781:
  9474  1943  2946               	goto	l3160
  9475  1944                     u4780:
  9476  1944                     l3158:
  9477  1944  3080               	movlw	128
  9478  1945  06F5               	xorwf	___flneg@f1+3,f
  9479  1946                     l3160:
  9480  1946                     l640:
  9481  1946  0008               	return
  9482  1947                     __end_of___flneg:
  9483                           
  9484                           	psect	text21
  9485  10FB                     __ptext21:	
  9486 ;; *************** function ___flge *****************
  9487 ;; Defined at:
  9488 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  ff1             4    2[COMMON] unsigned char 
  9491 ;;  ff2             4    6[COMMON] unsigned char 
  9492 ;; Auto vars:     Size  Location     Type
  9493 ;;		None
  9494 ;; Return value:  Size  Location     Type
  9495 ;;		None               void
  9496 ;; Registers used:
  9497 ;;		wreg, status,2, status,0
  9498 ;; Tracked objects:
  9499 ;;		On entry : 0/0
  9500 ;;		On exit  : 0/0
  9501 ;;		Unchanged: 0/0
  9502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9503 ;;      Params:         8       0       0       0       0
  9504 ;;      Locals:         0       0       0       0       0
  9505 ;;      Temps:          0       4       0       0       0
  9506 ;;      Totals:         8       4       0       0       0
  9507 ;;Total ram usage:       12 bytes
  9508 ;; Hardware stack levels used:    1
  9509 ;; Hardware stack levels required when called:    1
  9510 ;; This function calls:
  9511 ;;		Nothing
  9512 ;; This function is called by:
  9513 ;;		_sprintf
  9514 ;; This function uses a non-reentrant model
  9515 ;;
  9516                           
  9517                           
  9518                           ;psect for function ___flge
  9519  10FB                     ___flge:
  9520  10FB                     l3136:	
  9521                           ;incstack = 0
  9522                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9523                           
  9524  10FB  3000               	movlw	0
  9525  10FC  0572               	andwf	___flge@ff1,w
  9526  10FD  1283               	bcf	3,5	;RP0=0, select bank0
  9527  10FE  1303               	bcf	3,6	;RP1=0, select bank0
  9528  10FF  00A0               	movwf	??___flge
  9529  1100  3000               	movlw	0
  9530  1101  0573               	andwf	___flge@ff1+1,w
  9531  1102  00A1               	movwf	??___flge+1
  9532  1103  3080               	movlw	128
  9533  1104  0574               	andwf	___flge@ff1+2,w
  9534  1105  00A2               	movwf	??___flge+2
  9535  1106  307F               	movlw	127
  9536  1107  0575               	andwf	___flge@ff1+3,w
  9537  1108  00A3               	movwf	??___flge+3
  9538  1109  0823               	movf	??___flge+3,w
  9539  110A  0422               	iorwf	??___flge+2,w
  9540  110B  0421               	iorwf	??___flge+1,w
  9541  110C  0420               	iorwf	??___flge,w
  9542  110D  1D03               	skipz
  9543  110E  2910               	goto	u4711
  9544  110F  2911               	goto	u4710
  9545  1110                     u4711:
  9546  1110  2919               	goto	l632
  9547  1111                     u4710:
  9548  1111                     l3138:
  9549  1111  3000               	movlw	0
  9550  1112  00F5               	movwf	___flge@ff1+3
  9551  1113  3000               	movlw	0
  9552  1114  00F4               	movwf	___flge@ff1+2
  9553  1115  3000               	movlw	0
  9554  1116  00F3               	movwf	___flge@ff1+1
  9555  1117  3000               	movlw	0
  9556  1118  00F2               	movwf	___flge@ff1
  9557  1119                     l632:
  9558  1119  3000               	movlw	0
  9559  111A  0576               	andwf	___flge@ff2,w
  9560  111B  00A0               	movwf	??___flge
  9561  111C  3000               	movlw	0
  9562  111D  0577               	andwf	___flge@ff2+1,w
  9563  111E  00A1               	movwf	??___flge+1
  9564  111F  3080               	movlw	128
  9565  1120  0578               	andwf	___flge@ff2+2,w
  9566  1121  00A2               	movwf	??___flge+2
  9567  1122  307F               	movlw	127
  9568  1123  0579               	andwf	___flge@ff2+3,w
  9569  1124  00A3               	movwf	??___flge+3
  9570  1125  0823               	movf	??___flge+3,w
  9571  1126  0422               	iorwf	??___flge+2,w
  9572  1127  0421               	iorwf	??___flge+1,w
  9573  1128  0420               	iorwf	??___flge,w
  9574  1129  1D03               	skipz
  9575  112A  292C               	goto	u4721
  9576  112B  292D               	goto	u4720
  9577  112C                     u4721:
  9578  112C  2935               	goto	l3142
  9579  112D                     u4720:
  9580  112D                     l3140:
  9581  112D  3000               	movlw	0
  9582  112E  00F9               	movwf	___flge@ff2+3
  9583  112F  3000               	movlw	0
  9584  1130  00F8               	movwf	___flge@ff2+2
  9585  1131  3000               	movlw	0
  9586  1132  00F7               	movwf	___flge@ff2+1
  9587  1133  3000               	movlw	0
  9588  1134  00F6               	movwf	___flge@ff2
  9589  1135                     l3142:
  9590  1135  1FF5               	btfss	___flge@ff1+3,7
  9591  1136  2938               	goto	u4731
  9592  1137  2939               	goto	u4730
  9593  1138                     u4731:
  9594  1138  295D               	goto	l3146
  9595  1139                     u4730:
  9596  1139                     l3144:
  9597  1139  3000               	movlw	0
  9598  113A  00A0               	movwf	??___flge
  9599  113B  3000               	movlw	0
  9600  113C  00A1               	movwf	??___flge+1
  9601  113D  3000               	movlw	0
  9602  113E  00A2               	movwf	??___flge+2
  9603  113F  3080               	movlw	128
  9604  1140  00A3               	movwf	??___flge+3
  9605  1141  0872               	movf	___flge@ff1,w
  9606  1142  02A0               	subwf	??___flge,f
  9607  1143  0873               	movf	___flge@ff1+1,w
  9608  1144  1C03               	skipc
  9609  1145  0F73               	incfsz	___flge@ff1+1,w
  9610  1146  2948               	goto	u4741
  9611  1147  2949               	goto	u4742
  9612  1148                     u4741:
  9613  1148  02A1               	subwf	??___flge+1,f
  9614  1149                     u4742:
  9615  1149  0874               	movf	___flge@ff1+2,w
  9616  114A  1C03               	skipc
  9617  114B  0F74               	incfsz	___flge@ff1+2,w
  9618  114C  294E               	goto	u4743
  9619  114D  294F               	goto	u4744
  9620  114E                     u4743:
  9621  114E  02A2               	subwf	??___flge+2,f
  9622  114F                     u4744:
  9623  114F  0875               	movf	___flge@ff1+3,w
  9624  1150  1C03               	skipc
  9625  1151  0F75               	incfsz	___flge@ff1+3,w
  9626  1152  2954               	goto	u4745
  9627  1153  2955               	goto	u4746
  9628  1154                     u4745:
  9629  1154  02A3               	subwf	??___flge+3,f
  9630  1155                     u4746:
  9631  1155  0823               	movf	??___flge+3,w
  9632  1156  00F5               	movwf	___flge@ff1+3
  9633  1157  0822               	movf	??___flge+2,w
  9634  1158  00F4               	movwf	___flge@ff1+2
  9635  1159  0821               	movf	??___flge+1,w
  9636  115A  00F3               	movwf	___flge@ff1+1
  9637  115B  0820               	movf	??___flge,w
  9638  115C  00F2               	movwf	___flge@ff1
  9639  115D                     l3146:
  9640  115D  1FF9               	btfss	___flge@ff2+3,7
  9641  115E  2960               	goto	u4751
  9642  115F  2961               	goto	u4750
  9643  1160                     u4751:
  9644  1160  2985               	goto	l635
  9645  1161                     u4750:
  9646  1161                     l3148:
  9647  1161  3000               	movlw	0
  9648  1162  00A0               	movwf	??___flge
  9649  1163  3000               	movlw	0
  9650  1164  00A1               	movwf	??___flge+1
  9651  1165  3000               	movlw	0
  9652  1166  00A2               	movwf	??___flge+2
  9653  1167  3080               	movlw	128
  9654  1168  00A3               	movwf	??___flge+3
  9655  1169  0876               	movf	___flge@ff2,w
  9656  116A  02A0               	subwf	??___flge,f
  9657  116B  0877               	movf	___flge@ff2+1,w
  9658  116C  1C03               	skipc
  9659  116D  0F77               	incfsz	___flge@ff2+1,w
  9660  116E  2970               	goto	u4761
  9661  116F  2971               	goto	u4762
  9662  1170                     u4761:
  9663  1170  02A1               	subwf	??___flge+1,f
  9664  1171                     u4762:
  9665  1171  0878               	movf	___flge@ff2+2,w
  9666  1172  1C03               	skipc
  9667  1173  0F78               	incfsz	___flge@ff2+2,w
  9668  1174  2976               	goto	u4763
  9669  1175  2977               	goto	u4764
  9670  1176                     u4763:
  9671  1176  02A2               	subwf	??___flge+2,f
  9672  1177                     u4764:
  9673  1177  0879               	movf	___flge@ff2+3,w
  9674  1178  1C03               	skipc
  9675  1179  0F79               	incfsz	___flge@ff2+3,w
  9676  117A  297C               	goto	u4765
  9677  117B  297D               	goto	u4766
  9678  117C                     u4765:
  9679  117C  02A3               	subwf	??___flge+3,f
  9680  117D                     u4766:
  9681  117D  0823               	movf	??___flge+3,w
  9682  117E  00F9               	movwf	___flge@ff2+3
  9683  117F  0822               	movf	??___flge+2,w
  9684  1180  00F8               	movwf	___flge@ff2+2
  9685  1181  0821               	movf	??___flge+1,w
  9686  1182  00F7               	movwf	___flge@ff2+1
  9687  1183  0820               	movf	??___flge,w
  9688  1184  00F6               	movwf	___flge@ff2
  9689  1185                     l635:
  9690  1185  3080               	movlw	128
  9691  1186  06F5               	xorwf	___flge@ff1+3,f
  9692  1187  3080               	movlw	128
  9693  1188  06F9               	xorwf	___flge@ff2+3,f
  9694  1189  0879               	movf	___flge@ff2+3,w
  9695  118A  0275               	subwf	___flge@ff1+3,w
  9696  118B  1D03               	skipz
  9697  118C  2997               	goto	u4775
  9698  118D  0878               	movf	___flge@ff2+2,w
  9699  118E  0274               	subwf	___flge@ff1+2,w
  9700  118F  1D03               	skipz
  9701  1190  2997               	goto	u4775
  9702  1191  0877               	movf	___flge@ff2+1,w
  9703  1192  0273               	subwf	___flge@ff1+1,w
  9704  1193  1D03               	skipz
  9705  1194  2997               	goto	u4775
  9706  1195  0876               	movf	___flge@ff2,w
  9707  1196  0272               	subwf	___flge@ff1,w
  9708  1197                     u4775:
  9709  1197  1803               	skipnc
  9710  1198  299A               	goto	u4771
  9711  1199  299B               	goto	u4770
  9712  119A                     u4771:
  9713  119A  299D               	goto	l3152
  9714  119B                     u4770:
  9715  119B                     l3150:
  9716  119B  1003               	clrc
  9717  119C  299E               	goto	l636
  9718  119D                     l3152:
  9719  119D  1403               	setc
  9720  119E                     l636:
  9721  119E  0008               	return
  9722  119F                     __end_of___flge:
  9723                           
  9724                           	psect	text22
  9725  1BEB                     __ptext22:	
  9726 ;; *************** function ___fleq *****************
  9727 ;; Defined at:
  9728 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  ff1             4    2[COMMON] unsigned char 
  9731 ;;  ff2             4    6[COMMON] unsigned char 
  9732 ;; Auto vars:     Size  Location     Type
  9733 ;;		None
  9734 ;; Return value:  Size  Location     Type
  9735 ;;		None               void
  9736 ;; Registers used:
  9737 ;;		wreg, status,2, status,0
  9738 ;; Tracked objects:
  9739 ;;		On entry : 0/0
  9740 ;;		On exit  : 0/0
  9741 ;;		Unchanged: 0/0
  9742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9743 ;;      Params:         8       0       0       0       0
  9744 ;;      Locals:         0       0       0       0       0
  9745 ;;      Temps:          0       4       0       0       0
  9746 ;;      Totals:         8       4       0       0       0
  9747 ;;Total ram usage:       12 bytes
  9748 ;; Hardware stack levels used:    1
  9749 ;; Hardware stack levels required when called:    1
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_sprintf
  9754 ;; This function uses a non-reentrant model
  9755 ;;
  9756                           
  9757                           
  9758                           ;psect for function ___fleq
  9759  1BEB                     ___fleq:
  9760  1BEB                     l3124:	
  9761                           ;incstack = 0
  9762                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9763                           
  9764  1BEB  3000               	movlw	0
  9765  1BEC  0572               	andwf	___fleq@ff1,w
  9766  1BED  1283               	bcf	3,5	;RP0=0, select bank0
  9767  1BEE  1303               	bcf	3,6	;RP1=0, select bank0
  9768  1BEF  00A0               	movwf	??___fleq
  9769  1BF0  3000               	movlw	0
  9770  1BF1  0573               	andwf	___fleq@ff1+1,w
  9771  1BF2  00A1               	movwf	??___fleq+1
  9772  1BF3  3080               	movlw	128
  9773  1BF4  0574               	andwf	___fleq@ff1+2,w
  9774  1BF5  00A2               	movwf	??___fleq+2
  9775  1BF6  307F               	movlw	127
  9776  1BF7  0575               	andwf	___fleq@ff1+3,w
  9777  1BF8  00A3               	movwf	??___fleq+3
  9778  1BF9  0823               	movf	??___fleq+3,w
  9779  1BFA  0422               	iorwf	??___fleq+2,w
  9780  1BFB  0421               	iorwf	??___fleq+1,w
  9781  1BFC  0420               	iorwf	??___fleq,w
  9782  1BFD  1D03               	skipz
  9783  1BFE  2C00               	goto	u4681
  9784  1BFF  2C01               	goto	u4680
  9785  1C00                     u4681:
  9786  1C00  2C09               	goto	l627
  9787  1C01                     u4680:
  9788  1C01                     l3126:
  9789  1C01  3000               	movlw	0
  9790  1C02  00F5               	movwf	___fleq@ff1+3
  9791  1C03  3000               	movlw	0
  9792  1C04  00F4               	movwf	___fleq@ff1+2
  9793  1C05  3000               	movlw	0
  9794  1C06  00F3               	movwf	___fleq@ff1+1
  9795  1C07  3000               	movlw	0
  9796  1C08  00F2               	movwf	___fleq@ff1
  9797  1C09                     l627:
  9798  1C09  3000               	movlw	0
  9799  1C0A  0576               	andwf	___fleq@ff2,w
  9800  1C0B  00A0               	movwf	??___fleq
  9801  1C0C  3000               	movlw	0
  9802  1C0D  0577               	andwf	___fleq@ff2+1,w
  9803  1C0E  00A1               	movwf	??___fleq+1
  9804  1C0F  3080               	movlw	128
  9805  1C10  0578               	andwf	___fleq@ff2+2,w
  9806  1C11  00A2               	movwf	??___fleq+2
  9807  1C12  307F               	movlw	127
  9808  1C13  0579               	andwf	___fleq@ff2+3,w
  9809  1C14  00A3               	movwf	??___fleq+3
  9810  1C15  0823               	movf	??___fleq+3,w
  9811  1C16  0422               	iorwf	??___fleq+2,w
  9812  1C17  0421               	iorwf	??___fleq+1,w
  9813  1C18  0420               	iorwf	??___fleq,w
  9814  1C19  1D03               	skipz
  9815  1C1A  2C1C               	goto	u4691
  9816  1C1B  2C1D               	goto	u4690
  9817  1C1C                     u4691:
  9818  1C1C  2C25               	goto	l628
  9819  1C1D                     u4690:
  9820  1C1D                     l3128:
  9821  1C1D  3000               	movlw	0
  9822  1C1E  00F9               	movwf	___fleq@ff2+3
  9823  1C1F  3000               	movlw	0
  9824  1C20  00F8               	movwf	___fleq@ff2+2
  9825  1C21  3000               	movlw	0
  9826  1C22  00F7               	movwf	___fleq@ff2+1
  9827  1C23  3000               	movlw	0
  9828  1C24  00F6               	movwf	___fleq@ff2
  9829  1C25                     l628:
  9830  1C25  0879               	movf	___fleq@ff2+3,w
  9831  1C26  0675               	xorwf	___fleq@ff1+3,w
  9832  1C27  1D03               	skipz
  9833  1C28  2C33               	goto	u4705
  9834  1C29  0878               	movf	___fleq@ff2+2,w
  9835  1C2A  0674               	xorwf	___fleq@ff1+2,w
  9836  1C2B  1D03               	skipz
  9837  1C2C  2C33               	goto	u4705
  9838  1C2D  0877               	movf	___fleq@ff2+1,w
  9839  1C2E  0673               	xorwf	___fleq@ff1+1,w
  9840  1C2F  1D03               	skipz
  9841  1C30  2C33               	goto	u4705
  9842  1C31  0876               	movf	___fleq@ff2,w
  9843  1C32  0672               	xorwf	___fleq@ff1,w
  9844  1C33                     u4705:
  9845  1C33  1903               	skipnz
  9846  1C34  2C36               	goto	u4701
  9847  1C35  2C37               	goto	u4700
  9848  1C36                     u4701:
  9849  1C36  2C39               	goto	l3132
  9850  1C37                     u4700:
  9851  1C37                     l3130:
  9852  1C37  1003               	clrc
  9853  1C38  2C3A               	goto	l629
  9854  1C39                     l3132:
  9855  1C39  1403               	setc
  9856  1C3A                     l629:
  9857  1C3A  0008               	return
  9858  1C3B                     __end_of___fleq:
  9859                           
  9860                           	psect	text23
  9861  1989                     __ptext23:	
  9862 ;; *************** function _cadena_caracteres *****************
  9863 ;; Defined at:
  9864 ;;		line 28 in file "UARTP_Master.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;  st              1    wreg     PTR unsigned char 
  9867 ;;		 -> s(20), 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  st              1    6[COMMON] PTR unsigned char 
  9870 ;;		 -> s(20), 
  9871 ;;  i               2    4[COMMON] int 
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9881 ;;      Params:         0       0       0       0       0
  9882 ;;      Locals:         3       0       0       0       0
  9883 ;;      Temps:          1       0       0       0       0
  9884 ;;      Totals:         4       0       0       0       0
  9885 ;;Total ram usage:        4 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    2
  9888 ;; This function calls:
  9889 ;;		_Envio_caracter
  9890 ;; This function is called by:
  9891 ;;		_valorsensores
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           
  9896                           ;psect for function _cadena_caracteres
  9897  1989                     _cadena_caracteres:
  9898                           
  9899                           ;incstack = 0
  9900                           ; Regs used in _cadena_caracteres: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9901                           ;cadena_caracteres@st stored from wreg
  9902  1989  00F6               	movwf	cadena_caracteres@st
  9903  198A                     l3286:
  9904                           
  9905                           ;UARTP_Master.c: 28: void cadena_caracteres(char st[]);UARTP_Master.c: 29: {;UARTP_Maste
      +                          r.c: 30:     int i = 0;
  9906  198A  01F4               	clrf	cadena_caracteres@i
  9907  198B  01F5               	clrf	cadena_caracteres@i+1
  9908                           
  9909                           ;UARTP_Master.c: 31:     while (st[i] !=0)
  9910  198C  299E               	goto	l3292
  9911  198D                     l3288:
  9912                           
  9913                           ;UARTP_Master.c: 32:     {;UARTP_Master.c: 33:         Envio_caracter(st[i]);
  9914  198D  0874               	movf	cadena_caracteres@i,w
  9915  198E  0776               	addwf	cadena_caracteres@st,w
  9916  198F  00F3               	movwf	??_cadena_caracteres
  9917  1990  0873               	movf	??_cadena_caracteres,w
  9918  1991  0084               	movwf	4
  9919  1992  0800               	movf	0,w
  9920  1993  160A  158A  2132  160A  158A  	fcall	_Envio_caracter
  9921  1998                     l3290:
  9922                           
  9923                           ;UARTP_Master.c: 34:         i++;
  9924  1998  3001               	movlw	1
  9925  1999  07F4               	addwf	cadena_caracteres@i,f
  9926  199A  1803               	skipnc
  9927  199B  0AF5               	incf	cadena_caracteres@i+1,f
  9928  199C  3000               	movlw	0
  9929  199D  07F5               	addwf	cadena_caracteres@i+1,f
  9930  199E                     l3292:
  9931                           
  9932                           ;UARTP_Master.c: 31:     while (st[i] !=0)
  9933  199E  0874               	movf	cadena_caracteres@i,w
  9934  199F  0776               	addwf	cadena_caracteres@st,w
  9935  19A0  00F3               	movwf	??_cadena_caracteres
  9936  19A1  0873               	movf	??_cadena_caracteres,w
  9937  19A2  0084               	movwf	4
  9938  19A3  1783               	bsf	3,7	;select IRP bank2
  9939  19A4  0800               	movf	0,w
  9940  19A5  1D03               	btfss	3,2
  9941  19A6  29A8               	goto	u5091
  9942  19A7  29A9               	goto	u5090
  9943  19A8                     u5091:
  9944  19A8  298D               	goto	l3288
  9945  19A9                     u5090:
  9946  19A9                     l64:
  9947  19A9  0008               	return
  9948  19AA                     __end_of_cadena_caracteres:
  9949                           
  9950                           	psect	text24
  9951  1932                     __ptext24:	
  9952 ;; *************** function _Envio_caracter *****************
  9953 ;; Defined at:
  9954 ;;		line 22 in file "UARTP_Master.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  caracter        1    wreg     unsigned char 
  9957 ;; Auto vars:     Size  Location     Type
  9958 ;;  caracter        1    2[COMMON] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      void 
  9961 ;; Registers used:
  9962 ;;		wreg
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9968 ;;      Params:         0       0       0       0       0
  9969 ;;      Locals:         1       0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0
  9971 ;;      Totals:         1       0       0       0       0
  9972 ;;Total ram usage:        1 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    1
  9975 ;; This function calls:
  9976 ;;		Nothing
  9977 ;; This function is called by:
  9978 ;;		_cadena_caracteres
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function _Envio_caracter
  9984  1932                     _Envio_caracter:
  9985                           
  9986                           ;incstack = 0
  9987                           ; Regs used in _Envio_caracter: [wreg]
  9988                           ;Envio_caracter@caracter stored from wreg
  9989  1932  00F2               	movwf	Envio_caracter@caracter
  9990  1933                     l2902:
  9991  1933                     l55:	
  9992                           ;UARTP_Master.c: 22: void Envio_caracter(char caracter);UARTP_Master.c: 23: {;UARTP_Mast
      +                          er.c: 24:     while(!TXIF);
  9993                           
  9994  1933  1283               	bcf	3,5	;RP0=0, select bank0
  9995  1934  1303               	bcf	3,6	;RP1=0, select bank0
  9996  1935  1E0C               	btfss	12,4	;volatile
  9997  1936  2938               	goto	u4011
  9998  1937  2939               	goto	u4010
  9999  1938                     u4011:
 10000  1938  2933               	goto	l55
 10001  1939                     u4010:
 10002  1939                     l2904:
 10003                           
 10004                           ;UARTP_Master.c: 25:     TXREG = caracter;
 10005  1939  0872               	movf	Envio_caracter@caracter,w
 10006  193A  0099               	movwf	25	;volatile
 10007  193B                     l58:
 10008  193B  0008               	return
 10009  193C                     __end_of_Envio_caracter:
 10010                           
 10011                           	psect	text25
 10012  1A40                     __ptext25:	
 10013 ;; *************** function _setup *****************
 10014 ;; Defined at:
 10015 ;;		line 124 in file "main_proyectoMaster.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;		None
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;		None
 10020 ;; Return value:  Size  Location     Type
 10021 ;;                  1    wreg      void 
 10022 ;; Registers used:
 10023 ;;		wreg, status,2, status,0, pclath, cstack
 10024 ;; Tracked objects:
 10025 ;;		On entry : 0/0
 10026 ;;		On exit  : 0/0
 10027 ;;		Unchanged: 0/0
 10028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10029 ;;      Params:         0       0       0       0       0
 10030 ;;      Locals:         0       0       0       0       0
 10031 ;;      Temps:          0       0       0       0       0
 10032 ;;      Totals:         0       0       0       0       0
 10033 ;;Total ram usage:        0 bytes
 10034 ;; Hardware stack levels used:    1
 10035 ;; Hardware stack levels required when called:    3
 10036 ;; This function calls:
 10037 ;;		_I2C_Master_Init
 10038 ;;		_configuracionUART
 10039 ;; This function is called by:
 10040 ;;		_main
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           
 10045                           ;psect for function _setup
 10046  1A40                     _setup:
 10047  1A40                     l3632:	
 10048                           ;incstack = 0
 10049                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
 10050                           
 10051                           
 10052                           ;main_proyectoMaster.c: 127:     ANSEL = 0b00000000;
 10053  1A40  1683               	bsf	3,5	;RP0=1, select bank3
 10054  1A41  1703               	bsf	3,6	;RP1=1, select bank3
 10055  1A42  0188               	clrf	8	;volatile
 10056                           
 10057                           ;main_proyectoMaster.c: 128:     ANSELH = 0x00;
 10058  1A43  0189               	clrf	9	;volatile
 10059                           
 10060                           ;main_proyectoMaster.c: 130:     TRISA = 0x00;
 10061  1A44  1683               	bsf	3,5	;RP0=1, select bank1
 10062  1A45  1303               	bcf	3,6	;RP1=0, select bank1
 10063  1A46  0185               	clrf	5	;volatile
 10064  1A47                     l3634:
 10065                           
 10066                           ;main_proyectoMaster.c: 131:     TRISB = 0b00000001;
 10067  1A47  3001               	movlw	1
 10068  1A48  0086               	movwf	6	;volatile
 10069  1A49                     l3636:
 10070                           
 10071                           ;main_proyectoMaster.c: 132:     TRISE = 0x00;
 10072  1A49  0189               	clrf	9	;volatile
 10073  1A4A                     l3638:
 10074                           
 10075                           ;main_proyectoMaster.c: 133:     TRISBbits.TRISB0 = 1;
 10076  1A4A  1406               	bsf	6,0	;volatile
 10077  1A4B                     l3640:
 10078                           
 10079                           ;main_proyectoMaster.c: 134:     OPTION_REGbits.nRBPU = 0;
 10080  1A4B  1381               	bcf	1,7	;volatile
 10081                           
 10082                           ;main_proyectoMaster.c: 135:     WPUB = 0b00000001;
 10083  1A4C  3001               	movlw	1
 10084  1A4D  0095               	movwf	21	;volatile
 10085  1A4E                     l3642:
 10086                           
 10087                           ;main_proyectoMaster.c: 136:     PORTA = 0x00;
 10088  1A4E  1283               	bcf	3,5	;RP0=0, select bank0
 10089  1A4F  1303               	bcf	3,6	;RP1=0, select bank0
 10090  1A50  0185               	clrf	5	;volatile
 10091  1A51                     l3644:
 10092                           
 10093                           ;main_proyectoMaster.c: 137:     PORTE = 0x00;
 10094  1A51  0189               	clrf	9	;volatile
 10095  1A52                     l3646:
 10096                           
 10097                           ;main_proyectoMaster.c: 139:     I2C_Master_Init(100000);
 10098  1A52  3000               	movlw	0
 10099  1A53  00A8               	movwf	I2C_Master_Init@c+3
 10100  1A54  3001               	movlw	1
 10101  1A55  00A7               	movwf	I2C_Master_Init@c+2
 10102  1A56  3086               	movlw	134
 10103  1A57  00A6               	movwf	I2C_Master_Init@c+1
 10104  1A58  30A0               	movlw	160
 10105  1A59  00A5               	movwf	I2C_Master_Init@c
 10106  1A5A  160A  158A  22A7  160A  158A  	fcall	_I2C_Master_Init
 10107  1A5F                     l3648:
 10108                           
 10109                           ;main_proyectoMaster.c: 141:     OSCCONbits. IRCF2 = 1;
 10110  1A5F  1683               	bsf	3,5	;RP0=1, select bank1
 10111  1A60  1303               	bcf	3,6	;RP1=0, select bank1
 10112  1A61  170F               	bsf	15,6	;volatile
 10113  1A62                     l3650:
 10114                           
 10115                           ;main_proyectoMaster.c: 142:     OSCCONbits. IRCF1 = 1;
 10116  1A62  168F               	bsf	15,5	;volatile
 10117  1A63                     l3652:
 10118                           
 10119                           ;main_proyectoMaster.c: 143:     OSCCONbits. IRCF0 = 0;
 10120  1A63  120F               	bcf	15,4	;volatile
 10121  1A64                     l3654:
 10122                           
 10123                           ;main_proyectoMaster.c: 144:     OSCCONbits. SCS = 1;
 10124  1A64  140F               	bsf	15,0	;volatile
 10125  1A65                     l3656:
 10126                           
 10127                           ;main_proyectoMaster.c: 146:     configuracionUART();
 10128  1A65  120A  158A  2003  160A  158A  	fcall	_configuracionUART
 10129  1A6A                     l3658:
 10130                           
 10131                           ;main_proyectoMaster.c: 148:     IOCBbits. IOCB0 = 1;
 10132  1A6A  1683               	bsf	3,5	;RP0=1, select bank1
 10133  1A6B  1303               	bcf	3,6	;RP1=0, select bank1
 10134  1A6C  1416               	bsf	22,0	;volatile
 10135  1A6D                     l3660:
 10136                           
 10137                           ;main_proyectoMaster.c: 151:     INTCONbits. GIE = 1;
 10138  1A6D  178B               	bsf	11,7	;volatile
 10139  1A6E                     l3662:
 10140                           
 10141                           ;main_proyectoMaster.c: 152:     INTCONbits. RBIE = 1;
 10142  1A6E  158B               	bsf	11,3	;volatile
 10143  1A6F                     l3664:
 10144                           
 10145                           ;main_proyectoMaster.c: 153:     INTCONbits. RBIF = 0;
 10146  1A6F  100B               	bcf	11,0	;volatile
 10147  1A70                     l3666:
 10148                           
 10149                           ;main_proyectoMaster.c: 154:     INTCONbits.PEIE = 1;
 10150  1A70  170B               	bsf	11,6	;volatile
 10151  1A71                     l192:
 10152  1A71  0008               	return
 10153  1A72                     __end_of_setup:
 10154                           
 10155                           	psect	text26
 10156  0803                     __ptext26:	
 10157 ;; *************** function _configuracionUART *****************
 10158 ;; Defined at:
 10159 ;;		line 156 in file "main_proyectoMaster.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      void 
 10166 ;; Registers used:
 10167 ;;		wreg, status,2
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10173 ;;      Params:         0       0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    1
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_setup
 10184 ;; This function uses a non-reentrant model
 10185 ;;
 10186                           
 10187                           
 10188                           ;psect for function _configuracionUART
 10189  0803                     _configuracionUART:
 10190  0803                     l3544:	
 10191                           ;incstack = 0
 10192                           ; Regs used in _configuracionUART: [wreg+status,2]
 10193                           
 10194                           
 10195                           ;main_proyectoMaster.c: 158:     TXSTAbits.SYNC = 0;
 10196  0803  1683               	bsf	3,5	;RP0=1, select bank1
 10197  0804  1303               	bcf	3,6	;RP1=0, select bank1
 10198  0805  1218               	bcf	24,4	;volatile
 10199                           
 10200                           ;main_proyectoMaster.c: 159:     TXSTAbits.BRGH = 1;
 10201  0806  1518               	bsf	24,2	;volatile
 10202                           
 10203                           ;main_proyectoMaster.c: 160:     BAUDCTLbits.BRG16 = 0;
 10204  0807  1683               	bsf	3,5	;RP0=1, select bank3
 10205  0808  1703               	bsf	3,6	;RP1=1, select bank3
 10206  0809  1187               	bcf	7,3	;volatile
 10207  080A                     l3546:
 10208                           
 10209                           ;main_proyectoMaster.c: 162:     SPBRG = 25;
 10210  080A  3019               	movlw	25
 10211  080B  1683               	bsf	3,5	;RP0=1, select bank1
 10212  080C  1303               	bcf	3,6	;RP1=0, select bank1
 10213  080D  0099               	movwf	25	;volatile
 10214  080E                     l3548:
 10215                           
 10216                           ;main_proyectoMaster.c: 163:     SPBRGH = 0;
 10217  080E  019A               	clrf	26	;volatile
 10218  080F                     l3550:
 10219                           
 10220                           ;main_proyectoMaster.c: 165:     RCSTAbits.SPEN = 1;
 10221  080F  1283               	bcf	3,5	;RP0=0, select bank0
 10222  0810  1303               	bcf	3,6	;RP1=0, select bank0
 10223  0811  1798               	bsf	24,7	;volatile
 10224  0812                     l3552:
 10225                           
 10226                           ;main_proyectoMaster.c: 166:     RCSTAbits.RX9 = 0;
 10227  0812  1318               	bcf	24,6	;volatile
 10228  0813                     l3554:
 10229                           
 10230                           ;main_proyectoMaster.c: 167:     RCSTAbits.CREN = 1;
 10231  0813  1618               	bsf	24,4	;volatile
 10232  0814                     l3556:
 10233                           
 10234                           ;main_proyectoMaster.c: 169:     TXSTAbits.TXEN = 1;
 10235  0814  1683               	bsf	3,5	;RP0=1, select bank1
 10236  0815  1303               	bcf	3,6	;RP1=0, select bank1
 10237  0816  1698               	bsf	24,5	;volatile
 10238  0817                     l195:
 10239  0817  0008               	return
 10240  0818                     __end_of_configuracionUART:
 10241                           
 10242                           	psect	text27
 10243  1AA7                     __ptext27:	
 10244 ;; *************** function _I2C_Master_Init *****************
 10245 ;; Defined at:
 10246 ;;		line 9 in file "I2CP_Master.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  c               4    5[BANK0 ] const unsigned long 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;		None
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		wreg, status,2, status,0, pclath, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10260 ;;      Params:         0       4       0       0       0
 10261 ;;      Locals:         0       0       0       0       0
 10262 ;;      Temps:          0       4       0       0       0
 10263 ;;      Totals:         0       8       0       0       0
 10264 ;;Total ram usage:        8 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    2
 10267 ;; This function calls:
 10268 ;;		___lldiv
 10269 ;; This function is called by:
 10270 ;;		_setup
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           
 10275                           ;psect for function _I2C_Master_Init
 10276  1AA7                     _I2C_Master_Init:
 10277  1AA7                     l3532:	
 10278                           ;incstack = 0
 10279                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10280                           
 10281                           
 10282                           ;I2CP_Master.c: 9: void I2C_Master_Init(const unsigned long c);I2CP_Master.c: 10: {;I2CP
      +                          _Master.c: 11:     SSPCON = 0b00101000;
 10283  1AA7  3028               	movlw	40
 10284  1AA8  1283               	bcf	3,5	;RP0=0, select bank0
 10285  1AA9  1303               	bcf	3,6	;RP1=0, select bank0
 10286  1AAA  0094               	movwf	20	;volatile
 10287  1AAB                     l3534:
 10288                           
 10289                           ;I2CP_Master.c: 12:     SSPCON2 = 0;
 10290  1AAB  1683               	bsf	3,5	;RP0=1, select bank1
 10291  1AAC  1303               	bcf	3,6	;RP1=0, select bank1
 10292  1AAD  0191               	clrf	17	;volatile
 10293  1AAE                     l3536:
 10294                           
 10295                           ;I2CP_Master.c: 13:     SSPADD = (4000000/(4*c))-1;
 10296  1AAE  1283               	bcf	3,5	;RP0=0, select bank0
 10297  1AAF  1303               	bcf	3,6	;RP1=0, select bank0
 10298  1AB0  0825               	movf	I2C_Master_Init@c,w
 10299  1AB1  00A9               	movwf	??_I2C_Master_Init
 10300  1AB2  0826               	movf	I2C_Master_Init@c+1,w
 10301  1AB3  00AA               	movwf	??_I2C_Master_Init+1
 10302  1AB4  0827               	movf	I2C_Master_Init@c+2,w
 10303  1AB5  00AB               	movwf	??_I2C_Master_Init+2
 10304  1AB6  0828               	movf	I2C_Master_Init@c+3,w
 10305  1AB7  00AC               	movwf	??_I2C_Master_Init+3
 10306  1AB8  3002               	movlw	2
 10307  1AB9                     u5515:
 10308  1AB9  1003               	clrc
 10309  1ABA  0DA9               	rlf	??_I2C_Master_Init,f
 10310  1ABB  0DAA               	rlf	??_I2C_Master_Init+1,f
 10311  1ABC  0DAB               	rlf	??_I2C_Master_Init+2,f
 10312  1ABD  0DAC               	rlf	??_I2C_Master_Init+3,f
 10313  1ABE                     u5510:
 10314  1ABE  3EFF               	addlw	-1
 10315  1ABF  1D03               	skipz
 10316  1AC0  2AB9               	goto	u5515
 10317  1AC1  082C               	movf	??_I2C_Master_Init+3,w
 10318  1AC2  00F5               	movwf	___lldiv@divisor+3
 10319  1AC3  082B               	movf	??_I2C_Master_Init+2,w
 10320  1AC4  00F4               	movwf	___lldiv@divisor+2
 10321  1AC5  082A               	movf	??_I2C_Master_Init+1,w
 10322  1AC6  00F3               	movwf	___lldiv@divisor+1
 10323  1AC7  0829               	movf	??_I2C_Master_Init,w
 10324  1AC8  00F2               	movwf	___lldiv@divisor
 10325  1AC9  3000               	movlw	0
 10326  1ACA  00F9               	movwf	___lldiv@dividend+3
 10327  1ACB  303D               	movlw	61
 10328  1ACC  00F8               	movwf	___lldiv@dividend+2
 10329  1ACD  3009               	movlw	9
 10330  1ACE  00F7               	movwf	___lldiv@dividend+1
 10331  1ACF  3000               	movlw	0
 10332  1AD0  00F6               	movwf	___lldiv@dividend
 10333  1AD1  160A  158A  253A  160A  158A  	fcall	___lldiv
 10334  1AD6  0872               	movf	?___lldiv,w
 10335  1AD7  3EFF               	addlw	255
 10336  1AD8  1683               	bsf	3,5	;RP0=1, select bank1
 10337  1AD9  1303               	bcf	3,6	;RP1=0, select bank1
 10338  1ADA  0093               	movwf	19	;volatile
 10339  1ADB                     l3538:
 10340                           
 10341                           ;I2CP_Master.c: 14:     SSPSTAT = 0;
 10342  1ADB  0194               	clrf	20	;volatile
 10343  1ADC                     l3540:
 10344                           
 10345                           ;I2CP_Master.c: 15:     TRISCbits.TRISC3 = 1;
 10346  1ADC  1587               	bsf	7,3	;volatile
 10347  1ADD                     l3542:
 10348                           
 10349                           ;I2CP_Master.c: 16:     TRISCbits.TRISC4 = 1;
 10350  1ADD  1607               	bsf	7,4	;volatile
 10351  1ADE                     l227:
 10352  1ADE  0008               	return
 10353  1ADF                     __end_of_I2C_Master_Init:
 10354                           
 10355                           	psect	text28
 10356  1D3A                     __ptext28:	
 10357 ;; *************** function ___lldiv *****************
 10358 ;; Defined at:
 10359 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
 10360 ;; Parameters:    Size  Location     Type
 10361 ;;  divisor         4    2[COMMON] unsigned long 
 10362 ;;  dividend        4    6[COMMON] unsigned long 
 10363 ;; Auto vars:     Size  Location     Type
 10364 ;;  quotient        4    0[BANK0 ] unsigned long 
 10365 ;;  counter         1    4[BANK0 ] unsigned char 
 10366 ;; Return value:  Size  Location     Type
 10367 ;;                  4    2[COMMON] unsigned long 
 10368 ;; Registers used:
 10369 ;;		wreg, status,2, status,0
 10370 ;; Tracked objects:
 10371 ;;		On entry : 0/0
 10372 ;;		On exit  : 0/0
 10373 ;;		Unchanged: 0/0
 10374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10375 ;;      Params:         8       0       0       0       0
 10376 ;;      Locals:         0       5       0       0       0
 10377 ;;      Temps:          1       0       0       0       0
 10378 ;;      Totals:         9       5       0       0       0
 10379 ;;Total ram usage:       14 bytes
 10380 ;; Hardware stack levels used:    1
 10381 ;; Hardware stack levels required when called:    1
 10382 ;; This function calls:
 10383 ;;		Nothing
 10384 ;; This function is called by:
 10385 ;;		_I2C_Master_Init
 10386 ;;		_sprintf
 10387 ;; This function uses a non-reentrant model
 10388 ;;
 10389                           
 10390                           
 10391                           ;psect for function ___lldiv
 10392  1D3A                     ___lldiv:
 10393  1D3A                     l3100:	
 10394                           ;incstack = 0
 10395                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10396                           
 10397  1D3A  3000               	movlw	0
 10398  1D3B  1283               	bcf	3,5	;RP0=0, select bank0
 10399  1D3C  1303               	bcf	3,6	;RP1=0, select bank0
 10400  1D3D  00A3               	movwf	___lldiv@quotient+3
 10401  1D3E  3000               	movlw	0
 10402  1D3F  00A2               	movwf	___lldiv@quotient+2
 10403  1D40  3000               	movlw	0
 10404  1D41  00A1               	movwf	___lldiv@quotient+1
 10405  1D42  3000               	movlw	0
 10406  1D43  00A0               	movwf	___lldiv@quotient
 10407  1D44  0875               	movf	___lldiv@divisor+3,w
 10408  1D45  0474               	iorwf	___lldiv@divisor+2,w
 10409  1D46  0473               	iorwf	___lldiv@divisor+1,w
 10410  1D47  0472               	iorwf	___lldiv@divisor,w
 10411  1D48  1903               	skipnz
 10412  1D49  2D4B               	goto	u4611
 10413  1D4A  2D4C               	goto	u4610
 10414  1D4B                     u4611:
 10415  1D4B  2D99               	goto	l3120
 10416  1D4C                     u4610:
 10417  1D4C                     l3102:
 10418  1D4C  01A4               	clrf	___lldiv@counter
 10419  1D4D  0AA4               	incf	___lldiv@counter,f
 10420  1D4E  2D5C               	goto	l3106
 10421  1D4F                     l3104:
 10422  1D4F  3001               	movlw	1
 10423  1D50  00FA               	movwf	??___lldiv
 10424  1D51                     u4625:
 10425  1D51  1003               	clrc
 10426  1D52  0DF2               	rlf	___lldiv@divisor,f
 10427  1D53  0DF3               	rlf	___lldiv@divisor+1,f
 10428  1D54  0DF4               	rlf	___lldiv@divisor+2,f
 10429  1D55  0DF5               	rlf	___lldiv@divisor+3,f
 10430  1D56  0BFA               	decfsz	??___lldiv,f
 10431  1D57  2D51               	goto	u4625
 10432  1D58  3001               	movlw	1
 10433  1D59  00FA               	movwf	??___lldiv
 10434  1D5A  087A               	movf	??___lldiv,w
 10435  1D5B  07A4               	addwf	___lldiv@counter,f
 10436  1D5C                     l3106:
 10437  1D5C  1FF5               	btfss	___lldiv@divisor+3,7
 10438  1D5D  2D5F               	goto	u4631
 10439  1D5E  2D60               	goto	u4630
 10440  1D5F                     u4631:
 10441  1D5F  2D4F               	goto	l3104
 10442  1D60                     u4630:
 10443  1D60                     l3108:
 10444  1D60  3001               	movlw	1
 10445  1D61  00FA               	movwf	??___lldiv
 10446  1D62                     u4645:
 10447  1D62  1003               	clrc
 10448  1D63  0DA0               	rlf	___lldiv@quotient,f
 10449  1D64  0DA1               	rlf	___lldiv@quotient+1,f
 10450  1D65  0DA2               	rlf	___lldiv@quotient+2,f
 10451  1D66  0DA3               	rlf	___lldiv@quotient+3,f
 10452  1D67  0BFA               	decfsz	??___lldiv,f
 10453  1D68  2D62               	goto	u4645
 10454  1D69                     l3110:
 10455  1D69  0875               	movf	___lldiv@divisor+3,w
 10456  1D6A  0279               	subwf	___lldiv@dividend+3,w
 10457  1D6B  1D03               	skipz
 10458  1D6C  2D77               	goto	u4655
 10459  1D6D  0874               	movf	___lldiv@divisor+2,w
 10460  1D6E  0278               	subwf	___lldiv@dividend+2,w
 10461  1D6F  1D03               	skipz
 10462  1D70  2D77               	goto	u4655
 10463  1D71  0873               	movf	___lldiv@divisor+1,w
 10464  1D72  0277               	subwf	___lldiv@dividend+1,w
 10465  1D73  1D03               	skipz
 10466  1D74  2D77               	goto	u4655
 10467  1D75  0872               	movf	___lldiv@divisor,w
 10468  1D76  0276               	subwf	___lldiv@dividend,w
 10469  1D77                     u4655:
 10470  1D77  1C03               	skipc
 10471  1D78  2D7A               	goto	u4651
 10472  1D79  2D7B               	goto	u4650
 10473  1D7A                     u4651:
 10474  1D7A  2D8A               	goto	l3116
 10475  1D7B                     u4650:
 10476  1D7B                     l3112:
 10477  1D7B  0872               	movf	___lldiv@divisor,w
 10478  1D7C  02F6               	subwf	___lldiv@dividend,f
 10479  1D7D  0873               	movf	___lldiv@divisor+1,w
 10480  1D7E  1C03               	skipc
 10481  1D7F  0F73               	incfsz	___lldiv@divisor+1,w
 10482  1D80  02F7               	subwf	___lldiv@dividend+1,f
 10483  1D81  0874               	movf	___lldiv@divisor+2,w
 10484  1D82  1C03               	skipc
 10485  1D83  0F74               	incfsz	___lldiv@divisor+2,w
 10486  1D84  02F8               	subwf	___lldiv@dividend+2,f
 10487  1D85  0875               	movf	___lldiv@divisor+3,w
 10488  1D86  1C03               	skipc
 10489  1D87  0F75               	incfsz	___lldiv@divisor+3,w
 10490  1D88  02F9               	subwf	___lldiv@dividend+3,f
 10491  1D89                     l3114:
 10492  1D89  1420               	bsf	___lldiv@quotient,0
 10493  1D8A                     l3116:
 10494  1D8A  3001               	movlw	1
 10495  1D8B                     u4665:
 10496  1D8B  1003               	clrc
 10497  1D8C  0CF5               	rrf	___lldiv@divisor+3,f
 10498  1D8D  0CF4               	rrf	___lldiv@divisor+2,f
 10499  1D8E  0CF3               	rrf	___lldiv@divisor+1,f
 10500  1D8F  0CF2               	rrf	___lldiv@divisor,f
 10501  1D90  3EFF               	addlw	-1
 10502  1D91  1D03               	skipz
 10503  1D92  2D8B               	goto	u4665
 10504  1D93                     l3118:
 10505  1D93  3001               	movlw	1
 10506  1D94  02A4               	subwf	___lldiv@counter,f
 10507  1D95  1D03               	btfss	3,2
 10508  1D96  2D98               	goto	u4671
 10509  1D97  2D99               	goto	u4670
 10510  1D98                     u4671:
 10511  1D98  2D60               	goto	l3108
 10512  1D99                     u4670:
 10513  1D99                     l3120:
 10514  1D99  0823               	movf	___lldiv@quotient+3,w
 10515  1D9A  00F5               	movwf	?___lldiv+3
 10516  1D9B  0822               	movf	___lldiv@quotient+2,w
 10517  1D9C  00F4               	movwf	?___lldiv+2
 10518  1D9D  0821               	movf	___lldiv@quotient+1,w
 10519  1D9E  00F3               	movwf	?___lldiv+1
 10520  1D9F  0820               	movf	___lldiv@quotient,w
 10521  1DA0  00F2               	movwf	?___lldiv
 10522  1DA1                     l477:
 10523  1DA1  0008               	return
 10524  1DA2                     __end_of___lldiv:
 10525                           
 10526                           	psect	text29
 10527  125D                     __ptext29:	
 10528 ;; *************** function _com_master *****************
 10529 ;; Defined at:
 10530 ;;		line 171 in file "main_proyectoMaster.c"
 10531 ;; Parameters:    Size  Location     Type
 10532 ;;		None
 10533 ;; Auto vars:     Size  Location     Type
 10534 ;;		None
 10535 ;; Return value:  Size  Location     Type
 10536 ;;                  1    wreg      void 
 10537 ;; Registers used:
 10538 ;;		wreg, status,2, status,0, pclath, cstack
 10539 ;; Tracked objects:
 10540 ;;		On entry : 0/0
 10541 ;;		On exit  : 0/0
 10542 ;;		Unchanged: 0/0
 10543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10544 ;;      Params:         0       0       0       0       0
 10545 ;;      Locals:         0       0       0       0       0
 10546 ;;      Temps:          3       0       0       0       0
 10547 ;;      Totals:         3       0       0       0       0
 10548 ;;Total ram usage:        3 bytes
 10549 ;; Hardware stack levels used:    1
 10550 ;; Hardware stack levels required when called:    3
 10551 ;; This function calls:
 10552 ;;		_I2C_Master_Read
 10553 ;;		_I2C_Master_Start
 10554 ;;		_I2C_Master_Stop
 10555 ;;		_I2C_Master_Write
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _com_master
 10563  125D                     _com_master:
 10564  125D                     l3668:	
 10565                           ;incstack = 0
 10566                           ; Regs used in _com_master: [wreg+status,2+status,0+pclath+cstack]
 10567                           
 10568                           
 10569                           ;main_proyectoMaster.c: 174:     I2C_Master_Start();
 10570  125D  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10571                           
 10572                           ;main_proyectoMaster.c: 175:     I2C_Master_Write(0x50);
 10573  1262  3050               	movlw	80
 10574  1263  00F2               	movwf	I2C_Master_Write@d
 10575  1264  3000               	movlw	0
 10576  1265  00F3               	movwf	I2C_Master_Write@d+1
 10577  1266  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10578                           
 10579                           ;main_proyectoMaster.c: 176:     I2C_Master_Write(BanStart);
 10580  126B  087B               	movf	_BanStart,w
 10581  126C  00F8               	movwf	??_com_master
 10582  126D  01F9               	clrf	??_com_master+1
 10583  126E  0878               	movf	??_com_master,w
 10584  126F  00F2               	movwf	I2C_Master_Write@d
 10585  1270  0879               	movf	??_com_master+1,w
 10586  1271  00F3               	movwf	I2C_Master_Write@d+1
 10587  1272  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10588                           
 10589                           ;main_proyectoMaster.c: 177:     I2C_Master_Stop();
 10590  1277  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10591  127C                     l3670:
 10592                           
 10593                           ;main_proyectoMaster.c: 178:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10594  127C  3002               	movlw	2
 10595  127D  00FA               	movwf	??_com_master+2
 10596  127E  3004               	movlw	4
 10597  127F  00F9               	movwf	??_com_master+1
 10598  1280  30BA               	movlw	186
 10599  1281  00F8               	movwf	??_com_master
 10600  1282                     u6317:
 10601  1282  0BF8               	decfsz	??_com_master,f
 10602  1283  2A82               	goto	u6317
 10603  1284  0BF9               	decfsz	??_com_master+1,f
 10604  1285  2A82               	goto	u6317
 10605  1286  0BFA               	decfsz	??_com_master+2,f
 10606  1287  2A82               	goto	u6317
 10607  1288  0000               	nop
 10608  1289                     l3672:
 10609                           
 10610                           ;main_proyectoMaster.c: 180:     I2C_Master_Start();
 10611  1289  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10612  128E                     l3674:
 10613                           
 10614                           ;main_proyectoMaster.c: 181:     I2C_Master_Write(0x51);
 10615  128E  3051               	movlw	81
 10616  128F  00F2               	movwf	I2C_Master_Write@d
 10617  1290  3000               	movlw	0
 10618  1291  00F3               	movwf	I2C_Master_Write@d+1
 10619  1292  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10620  1297                     l3676:
 10621                           
 10622                           ;main_proyectoMaster.c: 182:     datPeso = I2C_Master_Read(0);
 10623  1297  3000               	movlw	0
 10624  1298  00F2               	movwf	I2C_Master_Read@a
 10625  1299  00F3               	movwf	I2C_Master_Read@a+1
 10626  129A  120A  118A  27D0  160A  118A  	fcall	_I2C_Master_Read
 10627  129F  0873               	movf	?_I2C_Master_Read+1,w
 10628  12A0  1683               	bsf	3,5	;RP0=1, select bank1
 10629  12A1  1303               	bcf	3,6	;RP1=0, select bank1
 10630  12A2  00D5               	movwf	(_datPeso+1)^(0+128)
 10631  12A3  0872               	movf	?_I2C_Master_Read,w
 10632  12A4  00D4               	movwf	_datPeso^(0+128)
 10633  12A5                     l3678:
 10634                           
 10635                           ;main_proyectoMaster.c: 183:     I2C_Master_Stop();
 10636  12A5  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10637  12AA                     l3680:
 10638                           
 10639                           ;main_proyectoMaster.c: 184:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10640  12AA  3002               	movlw	2
 10641  12AB  00FA               	movwf	??_com_master+2
 10642  12AC  3004               	movlw	4
 10643  12AD  00F9               	movwf	??_com_master+1
 10644  12AE  30BA               	movlw	186
 10645  12AF  00F8               	movwf	??_com_master
 10646  12B0                     u6327:
 10647  12B0  0BF8               	decfsz	??_com_master,f
 10648  12B1  2AB0               	goto	u6327
 10649  12B2  0BF9               	decfsz	??_com_master+1,f
 10650  12B3  2AB0               	goto	u6327
 10651  12B4  0BFA               	decfsz	??_com_master+2,f
 10652  12B5  2AB0               	goto	u6327
 10653  12B6  0000               	nop
 10654                           
 10655                           ;main_proyectoMaster.c: 186:     I2C_Master_Start();
 10656  12B7  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10657                           
 10658                           ;main_proyectoMaster.c: 187:     I2C_Master_Write(0x20);
 10659  12BC  3020               	movlw	32
 10660  12BD  00F2               	movwf	I2C_Master_Write@d
 10661  12BE  3000               	movlw	0
 10662  12BF  00F3               	movwf	I2C_Master_Write@d+1
 10663  12C0  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10664                           
 10665                           ;main_proyectoMaster.c: 188:     I2C_Master_Write(datPeso);
 10666  12C5  1683               	bsf	3,5	;RP0=1, select bank1
 10667  12C6  1303               	bcf	3,6	;RP1=0, select bank1
 10668  12C7  0855               	movf	(_datPeso+1)^(0+128),w
 10669  12C8  00F3               	movwf	I2C_Master_Write@d+1
 10670  12C9  0854               	movf	_datPeso^(0+128),w
 10671  12CA  00F2               	movwf	I2C_Master_Write@d
 10672  12CB  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10673                           
 10674                           ;main_proyectoMaster.c: 189:     I2C_Master_Stop();
 10675  12D0  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10676  12D5                     l3682:
 10677                           
 10678                           ;main_proyectoMaster.c: 190:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10679  12D5  3002               	movlw	2
 10680  12D6  00FA               	movwf	??_com_master+2
 10681  12D7  3004               	movlw	4
 10682  12D8  00F9               	movwf	??_com_master+1
 10683  12D9  30BA               	movlw	186
 10684  12DA  00F8               	movwf	??_com_master
 10685  12DB                     u6337:
 10686  12DB  0BF8               	decfsz	??_com_master,f
 10687  12DC  2ADB               	goto	u6337
 10688  12DD  0BF9               	decfsz	??_com_master+1,f
 10689  12DE  2ADB               	goto	u6337
 10690  12DF  0BFA               	decfsz	??_com_master+2,f
 10691  12E0  2ADB               	goto	u6337
 10692  12E1  0000               	nop
 10693  12E2                     l3684:
 10694                           
 10695                           ;main_proyectoMaster.c: 192:     I2C_Master_Start();
 10696  12E2  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10697  12E7                     l3686:
 10698                           
 10699                           ;main_proyectoMaster.c: 193:     I2C_Master_Write(0x21);
 10700  12E7  3021               	movlw	33
 10701  12E8  00F2               	movwf	I2C_Master_Write@d
 10702  12E9  3000               	movlw	0
 10703  12EA  00F3               	movwf	I2C_Master_Write@d+1
 10704  12EB  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10705  12F0                     l3688:
 10706                           
 10707                           ;main_proyectoMaster.c: 194:     contRecipiente = I2C_Master_Read(0);
 10708  12F0  3000               	movlw	0
 10709  12F1  00F2               	movwf	I2C_Master_Read@a
 10710  12F2  00F3               	movwf	I2C_Master_Read@a+1
 10711  12F3  120A  118A  27D0  160A  118A  	fcall	_I2C_Master_Read
 10712  12F8  0873               	movf	?_I2C_Master_Read+1,w
 10713  12F9  1683               	bsf	3,5	;RP0=1, select bank1
 10714  12FA  1303               	bcf	3,6	;RP1=0, select bank1
 10715  12FB  00D9               	movwf	(_contRecipiente+1)^(0+128)
 10716  12FC  0872               	movf	?_I2C_Master_Read,w
 10717  12FD  00D8               	movwf	_contRecipiente^(0+128)
 10718  12FE                     l3690:
 10719                           
 10720                           ;main_proyectoMaster.c: 195:     I2C_Master_Stop();
 10721  12FE  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10722  1303                     l3692:
 10723                           
 10724                           ;main_proyectoMaster.c: 196:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10725  1303  3002               	movlw	2
 10726  1304  00FA               	movwf	??_com_master+2
 10727  1305  3004               	movlw	4
 10728  1306  00F9               	movwf	??_com_master+1
 10729  1307  30BA               	movlw	186
 10730  1308  00F8               	movwf	??_com_master
 10731  1309                     u6347:
 10732  1309  0BF8               	decfsz	??_com_master,f
 10733  130A  2B09               	goto	u6347
 10734  130B  0BF9               	decfsz	??_com_master+1,f
 10735  130C  2B09               	goto	u6347
 10736  130D  0BFA               	decfsz	??_com_master+2,f
 10737  130E  2B09               	goto	u6347
 10738  130F  0000               	nop
 10739                           
 10740                           ;main_proyectoMaster.c: 198:     I2C_Master_Start();
 10741  1310  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10742                           
 10743                           ;main_proyectoMaster.c: 199:     I2C_Master_Write(0x40);
 10744  1315  3040               	movlw	64
 10745  1316  00F2               	movwf	I2C_Master_Write@d
 10746  1317  3000               	movlw	0
 10747  1318  00F3               	movwf	I2C_Master_Write@d+1
 10748  1319  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10749                           
 10750                           ;main_proyectoMaster.c: 200:     I2C_Master_Write(BanStart);
 10751  131E  087B               	movf	_BanStart,w
 10752  131F  00F8               	movwf	??_com_master
 10753  1320  01F9               	clrf	??_com_master+1
 10754  1321  0878               	movf	??_com_master,w
 10755  1322  00F2               	movwf	I2C_Master_Write@d
 10756  1323  0879               	movf	??_com_master+1,w
 10757  1324  00F3               	movwf	I2C_Master_Write@d+1
 10758  1325  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10759                           
 10760                           ;main_proyectoMaster.c: 201:     I2C_Master_Stop();
 10761  132A  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10762  132F                     l3694:
 10763                           
 10764                           ;main_proyectoMaster.c: 202:      _delay((unsigned long)((200)*(4000000/4000.0)));
 10765  132F  3002               	movlw	2
 10766  1330  00FA               	movwf	??_com_master+2
 10767  1331  3004               	movlw	4
 10768  1332  00F9               	movwf	??_com_master+1
 10769  1333  30BA               	movlw	186
 10770  1334  00F8               	movwf	??_com_master
 10771  1335                     u6357:
 10772  1335  0BF8               	decfsz	??_com_master,f
 10773  1336  2B35               	goto	u6357
 10774  1337  0BF9               	decfsz	??_com_master+1,f
 10775  1338  2B35               	goto	u6357
 10776  1339  0BFA               	decfsz	??_com_master+2,f
 10777  133A  2B35               	goto	u6357
 10778  133B  0000               	nop
 10779  133C                     l3696:
 10780                           
 10781                           ;main_proyectoMaster.c: 204:     I2C_Master_Start();
 10782  133C  160A  158A  211F  160A  118A  	fcall	_I2C_Master_Start
 10783  1341                     l3698:
 10784                           
 10785                           ;main_proyectoMaster.c: 205:     I2C_Master_Write(0x41);
 10786  1341  3041               	movlw	65
 10787  1342  00F2               	movwf	I2C_Master_Write@d
 10788  1343  3000               	movlw	0
 10789  1344  00F3               	movwf	I2C_Master_Write@d+1
 10790  1345  160A  158A  2128  160A  118A  	fcall	_I2C_Master_Write
 10791  134A                     l3700:
 10792                           
 10793                           ;main_proyectoMaster.c: 206:     datUltrasonico = I2C_Master_Read(0);
 10794  134A  3000               	movlw	0
 10795  134B  00F2               	movwf	I2C_Master_Read@a
 10796  134C  00F3               	movwf	I2C_Master_Read@a+1
 10797  134D  120A  118A  27D0  160A  118A  	fcall	_I2C_Master_Read
 10798  1352  0873               	movf	?_I2C_Master_Read+1,w
 10799  1353  1683               	bsf	3,5	;RP0=1, select bank1
 10800  1354  1303               	bcf	3,6	;RP1=0, select bank1
 10801  1355  00D7               	movwf	(_datUltrasonico+1)^(0+128)
 10802  1356  0872               	movf	?_I2C_Master_Read,w
 10803  1357  00D6               	movwf	_datUltrasonico^(0+128)
 10804  1358                     l3702:
 10805                           
 10806                           ;main_proyectoMaster.c: 207:     I2C_Master_Stop();
 10807  1358  160A  118A  20F2  160A  118A  	fcall	_I2C_Master_Stop
 10808  135D                     l3704:
 10809                           
 10810                           ;main_proyectoMaster.c: 208:     _delay((unsigned long)((200)*(4000000/4000.0)));
 10811  135D  3002               	movlw	2
 10812  135E  00FA               	movwf	??_com_master+2
 10813  135F  3004               	movlw	4
 10814  1360  00F9               	movwf	??_com_master+1
 10815  1361  30BA               	movlw	186
 10816  1362  00F8               	movwf	??_com_master
 10817  1363                     u6367:
 10818  1363  0BF8               	decfsz	??_com_master,f
 10819  1364  2B63               	goto	u6367
 10820  1365  0BF9               	decfsz	??_com_master+1,f
 10821  1366  2B63               	goto	u6367
 10822  1367  0BFA               	decfsz	??_com_master+2,f
 10823  1368  2B63               	goto	u6367
 10824  1369  0000               	nop
 10825  136A                     l198:
 10826  136A  0008               	return
 10827  136B                     __end_of_com_master:
 10828                           
 10829                           	psect	text30
 10830  1928                     __ptext30:	
 10831 ;; *************** function _I2C_Master_Write *****************
 10832 ;; Defined at:
 10833 ;;		line 58 in file "I2CP_Master.c"
 10834 ;; Parameters:    Size  Location     Type
 10835 ;;  d               2    2[COMMON] unsigned int 
 10836 ;; Auto vars:     Size  Location     Type
 10837 ;;		None
 10838 ;; Return value:  Size  Location     Type
 10839 ;;                  1    wreg      void 
 10840 ;; Registers used:
 10841 ;;		wreg, status,2, status,0, pclath, cstack
 10842 ;; Tracked objects:
 10843 ;;		On entry : 0/0
 10844 ;;		On exit  : 0/0
 10845 ;;		Unchanged: 0/0
 10846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10847 ;;      Params:         2       0       0       0       0
 10848 ;;      Locals:         0       0       0       0       0
 10849 ;;      Temps:          0       0       0       0       0
 10850 ;;      Totals:         2       0       0       0       0
 10851 ;;Total ram usage:        2 bytes
 10852 ;; Hardware stack levels used:    1
 10853 ;; Hardware stack levels required when called:    2
 10854 ;; This function calls:
 10855 ;;		_I2C_Master_Wait
 10856 ;; This function is called by:
 10857 ;;		_com_master
 10858 ;; This function uses a non-reentrant model
 10859 ;;
 10860                           
 10861                           
 10862                           ;psect for function _I2C_Master_Write
 10863  1928                     _I2C_Master_Write:
 10864  1928                     l3562:	
 10865                           ;incstack = 0
 10866                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10867                           
 10868                           
 10869                           ;I2CP_Master.c: 58: void I2C_Master_Write(unsigned d);I2CP_Master.c: 59: {;I2CP_Master.c
      +                          : 60:     I2C_Master_Wait();
 10870  1928  160A  158A  2147  160A  158A  	fcall	_I2C_Master_Wait
 10871  192D                     l3564:
 10872                           
 10873                           ;I2CP_Master.c: 61:     SSPBUF = d;
 10874  192D  0872               	movf	I2C_Master_Write@d,w
 10875  192E  1283               	bcf	3,5	;RP0=0, select bank0
 10876  192F  1303               	bcf	3,6	;RP1=0, select bank0
 10877  1930  0093               	movwf	19	;volatile
 10878  1931                     l245:
 10879  1931  0008               	return
 10880  1932                     __end_of_I2C_Master_Write:
 10881                           
 10882                           	psect	text31
 10883  10F2                     __ptext31:	
 10884 ;; *************** function _I2C_Master_Stop *****************
 10885 ;; Defined at:
 10886 ;;		line 48 in file "I2CP_Master.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;		None
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, status,2, status,0, pclath, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10900 ;;      Params:         0       0       0       0       0
 10901 ;;      Locals:         0       0       0       0       0
 10902 ;;      Temps:          0       0       0       0       0
 10903 ;;      Totals:         0       0       0       0       0
 10904 ;;Total ram usage:        0 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:    2
 10907 ;; This function calls:
 10908 ;;		_I2C_Master_Wait
 10909 ;; This function is called by:
 10910 ;;		_com_master
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           
 10915                           ;psect for function _I2C_Master_Stop
 10916  10F2                     _I2C_Master_Stop:
 10917  10F2                     l3566:	
 10918                           ;incstack = 0
 10919                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10920                           
 10921                           
 10922                           ;I2CP_Master.c: 50:     I2C_Master_Wait();
 10923  10F2  160A  158A  2147  160A  118A  	fcall	_I2C_Master_Wait
 10924  10F7                     l3568:
 10925                           
 10926                           ;I2CP_Master.c: 51:     SSPCON2bits.PEN = 1;
 10927  10F7  1683               	bsf	3,5	;RP0=1, select bank1
 10928  10F8  1303               	bcf	3,6	;RP1=0, select bank1
 10929  10F9  1511               	bsf	17,2	;volatile
 10930  10FA                     l242:
 10931  10FA  0008               	return
 10932  10FB                     __end_of_I2C_Master_Stop:
 10933                           
 10934                           	psect	text32
 10935  191F                     __ptext32:	
 10936 ;; *************** function _I2C_Master_Start *****************
 10937 ;; Defined at:
 10938 ;;		line 32 in file "I2CP_Master.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0, pclath, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10952 ;;      Params:         0       0       0       0       0
 10953 ;;      Locals:         0       0       0       0       0
 10954 ;;      Temps:          0       0       0       0       0
 10955 ;;      Totals:         0       0       0       0       0
 10956 ;;Total ram usage:        0 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    2
 10959 ;; This function calls:
 10960 ;;		_I2C_Master_Wait
 10961 ;; This function is called by:
 10962 ;;		_com_master
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           
 10967                           ;psect for function _I2C_Master_Start
 10968  191F                     _I2C_Master_Start:
 10969  191F                     l3558:	
 10970                           ;incstack = 0
 10971                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10972                           
 10973                           
 10974                           ;I2CP_Master.c: 34:     I2C_Master_Wait();
 10975  191F  160A  158A  2147  160A  158A  	fcall	_I2C_Master_Wait
 10976  1924                     l3560:
 10977                           
 10978                           ;I2CP_Master.c: 35:     SSPCON2bits.SEN = 1;
 10979  1924  1683               	bsf	3,5	;RP0=1, select bank1
 10980  1925  1303               	bcf	3,6	;RP1=0, select bank1
 10981  1926  1411               	bsf	17,0	;volatile
 10982  1927                     l236:
 10983  1927  0008               	return
 10984  1928                     __end_of_I2C_Master_Start:
 10985                           
 10986                           	psect	text33
 10987  07D0                     __ptext33:	
 10988 ;; *************** function _I2C_Master_Read *****************
 10989 ;; Defined at:
 10990 ;;		line 67 in file "I2CP_Master.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  a               2    2[COMMON] unsigned short 
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;  temp            2    6[COMMON] unsigned short 
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  2    2[COMMON] unsigned short 
 10997 ;; Registers used:
 10998 ;;		wreg, status,2, status,0, pclath, cstack
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11004 ;;      Params:         2       0       0       0       0
 11005 ;;      Locals:         2       0       0       0       0
 11006 ;;      Temps:          2       0       0       0       0
 11007 ;;      Totals:         6       0       0       0       0
 11008 ;;Total ram usage:        6 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; Hardware stack levels required when called:    2
 11011 ;; This function calls:
 11012 ;;		_I2C_Master_Wait
 11013 ;; This function is called by:
 11014 ;;		_com_master
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _I2C_Master_Read
 11020  07D0                     _I2C_Master_Read:
 11021  07D0                     l3570:	
 11022                           ;incstack = 0
 11023                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11024                           
 11025                           
 11026                           ;I2CP_Master.c: 67: unsigned short I2C_Master_Read(unsigned short a);I2CP_Master.c: 68: 
      +                          {;I2CP_Master.c: 69:     unsigned short temp;;I2CP_Master.c: 70:     I2C_Master_Wait();
 11027  07D0  160A  158A  2147  120A  118A  	fcall	_I2C_Master_Wait
 11028  07D5                     l3572:
 11029                           
 11030                           ;I2CP_Master.c: 71:     SSPCON2bits.RCEN = 1;
 11031  07D5  1683               	bsf	3,5	;RP0=1, select bank1
 11032  07D6  1303               	bcf	3,6	;RP1=0, select bank1
 11033  07D7  1591               	bsf	17,3	;volatile
 11034                           
 11035                           ;I2CP_Master.c: 72:     I2C_Master_Wait();
 11036  07D8  160A  158A  2147  120A  118A  	fcall	_I2C_Master_Wait
 11037  07DD                     l3574:
 11038                           
 11039                           ;I2CP_Master.c: 73:     temp = SSPBUF;
 11040  07DD  1283               	bcf	3,5	;RP0=0, select bank0
 11041  07DE  1303               	bcf	3,6	;RP1=0, select bank0
 11042  07DF  0813               	movf	19,w	;volatile
 11043  07E0  00F4               	movwf	??_I2C_Master_Read
 11044  07E1  01F5               	clrf	??_I2C_Master_Read+1
 11045  07E2  0874               	movf	??_I2C_Master_Read,w
 11046  07E3  00F6               	movwf	I2C_Master_Read@temp
 11047  07E4  0875               	movf	??_I2C_Master_Read+1,w
 11048  07E5  00F7               	movwf	I2C_Master_Read@temp+1
 11049  07E6                     l3576:
 11050                           
 11051                           ;I2CP_Master.c: 74:     I2C_Master_Wait();
 11052  07E6  160A  158A  2147  120A  118A  	fcall	_I2C_Master_Wait
 11053  07EB                     l3578:
 11054                           
 11055                           ;I2CP_Master.c: 75:     if(a == 1){
 11056  07EB  0372               	decf	I2C_Master_Read@a,w
 11057  07EC  0473               	iorwf	I2C_Master_Read@a+1,w
 11058  07ED  1D03               	btfss	3,2
 11059  07EE  2FF0               	goto	u5521
 11060  07EF  2FF1               	goto	u5520
 11061  07F0                     u5521:
 11062  07F0  2FF5               	goto	l248
 11063  07F1                     u5520:
 11064  07F1                     l3580:
 11065                           
 11066                           ;I2CP_Master.c: 76:         SSPCON2bits.ACKDT = 0;
 11067  07F1  1683               	bsf	3,5	;RP0=1, select bank1
 11068  07F2  1303               	bcf	3,6	;RP1=0, select bank1
 11069  07F3  1291               	bcf	17,5	;volatile
 11070                           
 11071                           ;I2CP_Master.c: 77:     }
 11072  07F4  2FF8               	goto	l249
 11073  07F5                     l248:	
 11074                           ;I2CP_Master.c: 78:     else
 11075                           
 11076                           
 11077                           ;I2CP_Master.c: 79:     {;I2CP_Master.c: 80:         SSPCON2bits.ACKDT = 1;
 11078  07F5  1683               	bsf	3,5	;RP0=1, select bank1
 11079  07F6  1303               	bcf	3,6	;RP1=0, select bank1
 11080  07F7  1691               	bsf	17,5	;volatile
 11081  07F8                     l249:	
 11082                           ;I2CP_Master.c: 81:     }
 11083                           
 11084                           
 11085                           ;I2CP_Master.c: 82:     SSPCON2bits.ACKEN = 1;
 11086  07F8  1611               	bsf	17,4	;volatile
 11087  07F9                     l3582:
 11088                           
 11089                           ;I2CP_Master.c: 83:     return temp;
 11090  07F9  0877               	movf	I2C_Master_Read@temp+1,w
 11091  07FA  00F3               	movwf	?_I2C_Master_Read+1
 11092  07FB  0876               	movf	I2C_Master_Read@temp,w
 11093  07FC  00F2               	movwf	?_I2C_Master_Read
 11094  07FD                     l250:
 11095  07FD  0008               	return
 11096  07FE                     __end_of_I2C_Master_Read:
 11097                           
 11098                           	psect	text34
 11099  1947                     __ptext34:	
 11100 ;; *************** function _I2C_Master_Wait *****************
 11101 ;; Defined at:
 11102 ;;		line 25 in file "I2CP_Master.c"
 11103 ;; Parameters:    Size  Location     Type
 11104 ;;		None
 11105 ;; Auto vars:     Size  Location     Type
 11106 ;;		None
 11107 ;; Return value:  Size  Location     Type
 11108 ;;                  1    wreg      void 
 11109 ;; Registers used:
 11110 ;;		wreg, status,2
 11111 ;; Tracked objects:
 11112 ;;		On entry : 0/0
 11113 ;;		On exit  : 0/0
 11114 ;;		Unchanged: 0/0
 11115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11116 ;;      Params:         0       0       0       0       0
 11117 ;;      Locals:         0       0       0       0       0
 11118 ;;      Temps:          0       0       0       0       0
 11119 ;;      Totals:         0       0       0       0       0
 11120 ;;Total ram usage:        0 bytes
 11121 ;; Hardware stack levels used:    1
 11122 ;; Hardware stack levels required when called:    1
 11123 ;; This function calls:
 11124 ;;		Nothing
 11125 ;; This function is called by:
 11126 ;;		_I2C_Master_Start
 11127 ;;		_I2C_Master_Stop
 11128 ;;		_I2C_Master_Write
 11129 ;;		_I2C_Master_Read
 11130 ;;		_I2C_Master_RepeatedStart
 11131 ;; This function uses a non-reentrant model
 11132 ;;
 11133                           
 11134                           
 11135                           ;psect for function _I2C_Master_Wait
 11136  1947                     _I2C_Master_Wait:
 11137  1947                     l2908:	
 11138                           ;incstack = 0
 11139                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11140                           
 11141  1947                     l230:	
 11142                           ;I2CP_Master.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11143                           
 11144  1947  1683               	bsf	3,5	;RP0=1, select bank1
 11145  1948  1303               	bcf	3,6	;RP1=0, select bank1
 11146  1949  1914               	btfsc	20,2	;volatile
 11147  194A  294C               	goto	u4021
 11148  194B  294D               	goto	u4020
 11149  194C                     u4021:
 11150  194C  2947               	goto	l230
 11151  194D                     u4020:
 11152  194D                     l2910:
 11153  194D  0811               	movf	17,w	;volatile
 11154  194E  391F               	andlw	31
 11155  194F  1D03               	btfss	3,2
 11156  1950  2952               	goto	u4031
 11157  1951  2953               	goto	u4030
 11158  1952                     u4031:
 11159  1952  2947               	goto	l230
 11160  1953                     u4030:
 11161  1953                     l233:
 11162  1953  0008               	return
 11163  1954                     __end_of_I2C_Master_Wait:
 11164                           
 11165                           	psect	text35
 11166  1B19                     __ptext35:	
 11167 ;; *************** function _Lcd_Write_String *****************
 11168 ;; Defined at:
 11169 ;;		line 76 in file "LCDP_Master.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  a               2    4[COMMON] PTR unsigned char 
 11172 ;;		 -> STR_7(5), STR_6(5), STR_5(5), s(20), 
 11173 ;; Auto vars:     Size  Location     Type
 11174 ;;  i               2    9[COMMON] int 
 11175 ;; Return value:  Size  Location     Type
 11176 ;;                  1    wreg      void 
 11177 ;; Registers used:
 11178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11179 ;; Tracked objects:
 11180 ;;		On entry : 0/0
 11181 ;;		On exit  : 0/0
 11182 ;;		Unchanged: 0/0
 11183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11184 ;;      Params:         2       0       0       0       0
 11185 ;;      Locals:         2       0       0       0       0
 11186 ;;      Temps:          3       0       0       0       0
 11187 ;;      Totals:         7       0       0       0       0
 11188 ;;Total ram usage:        7 bytes
 11189 ;; Hardware stack levels used:    1
 11190 ;; Hardware stack levels required when called:    2
 11191 ;; This function calls:
 11192 ;;		_Lcd_Write_Char
 11193 ;; This function is called by:
 11194 ;;		_main
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           
 11199                           ;psect for function _Lcd_Write_String
 11200  1B19                     _Lcd_Write_String:
 11201  1B19                     l3598:	
 11202                           ;incstack = 0
 11203                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11204                           
 11205                           
 11206                           ;LCDP_Master.c: 76: void Lcd_Write_String(char *a);LCDP_Master.c: 77: {;LCDP_Master.c: 7
      +                          8:  int i;;LCDP_Master.c: 79:  for(i=0;a[i]!='\0';i++)
 11207  1B19  01F9               	clrf	Lcd_Write_String@i
 11208  1B1A  01FA               	clrf	Lcd_Write_String@i+1
 11209  1B1B  2B3E               	goto	l3604
 11210  1B1C                     l3600:
 11211                           
 11212                           ;LCDP_Master.c: 80:      Lcd_Write_Char(a[i]);
 11213  1B1C  0879               	movf	Lcd_Write_String@i,w
 11214  1B1D  0774               	addwf	Lcd_Write_String@a,w
 11215  1B1E  00F7               	movwf	??_Lcd_Write_String+1
 11216  1B1F  0875               	movf	Lcd_Write_String@a+1,w
 11217  1B20  00F6               	movwf	??_Lcd_Write_String
 11218  1B21  1803               	skipnc
 11219  1B22  0AF6               	incf	??_Lcd_Write_String,f
 11220  1B23  1FF9               	btfss	Lcd_Write_String@i,7
 11221  1B24  2B26               	goto	u5550
 11222  1B25  03F6               	decf	??_Lcd_Write_String,f
 11223  1B26                     u5550:
 11224  1B26  0876               	movf	??_Lcd_Write_String,w
 11225  1B27  00F8               	movwf	??_Lcd_Write_String+2
 11226  1B28  0878               	movf	??_Lcd_Write_String+2,w
 11227  1B29  1283               	bcf	3,5	;RP0=0, select bank0
 11228  1B2A  1303               	bcf	3,6	;RP1=0, select bank0
 11229  1B2B  00FF               	movwf	btemp+1
 11230  1B2C  0877               	movf	??_Lcd_Write_String+1,w
 11231  1B2D  0084               	movwf	4
 11232  1B2E  160A  118A  2000  160A  158A  	fcall	stringtab
 11233  1B33  160A  158A  2154  160A  158A  	fcall	_Lcd_Write_Char
 11234  1B38                     l3602:
 11235  1B38  3001               	movlw	1
 11236  1B39  07F9               	addwf	Lcd_Write_String@i,f
 11237  1B3A  1803               	skipnc
 11238  1B3B  0AFA               	incf	Lcd_Write_String@i+1,f
 11239  1B3C  3000               	movlw	0
 11240  1B3D  07FA               	addwf	Lcd_Write_String@i+1,f
 11241  1B3E                     l3604:
 11242  1B3E  0879               	movf	Lcd_Write_String@i,w
 11243  1B3F  0774               	addwf	Lcd_Write_String@a,w
 11244  1B40  00F7               	movwf	??_Lcd_Write_String+1
 11245  1B41  0875               	movf	Lcd_Write_String@a+1,w
 11246  1B42  00F6               	movwf	??_Lcd_Write_String
 11247  1B43  1803               	skipnc
 11248  1B44  0AF6               	incf	??_Lcd_Write_String,f
 11249  1B45  1FF9               	btfss	Lcd_Write_String@i,7
 11250  1B46  2B48               	goto	u5560
 11251  1B47  03F6               	decf	??_Lcd_Write_String,f
 11252  1B48                     u5560:
 11253  1B48  0876               	movf	??_Lcd_Write_String,w
 11254  1B49  00F8               	movwf	??_Lcd_Write_String+2
 11255  1B4A  0878               	movf	??_Lcd_Write_String+2,w
 11256  1B4B  1283               	bcf	3,5	;RP0=0, select bank0
 11257  1B4C  1303               	bcf	3,6	;RP1=0, select bank0
 11258  1B4D  00FF               	movwf	btemp+1
 11259  1B4E  0877               	movf	??_Lcd_Write_String+1,w
 11260  1B4F  0084               	movwf	4
 11261  1B50  160A  118A  2000  160A  158A  	fcall	stringtab
 11262  1B55  3A00               	xorlw	0
 11263  1B56  1D03               	skipz
 11264  1B57  2B59               	goto	u5571
 11265  1B58  2B5A               	goto	u5570
 11266  1B59                     u5571:
 11267  1B59  2B1C               	goto	l3600
 11268  1B5A                     u5570:
 11269  1B5A                     l27:
 11270  1B5A  0008               	return
 11271  1B5B                     __end_of_Lcd_Write_String:
 11272                           
 11273                           	psect	text36
 11274  1954                     __ptext36:	
 11275 ;; *************** function _Lcd_Write_Char *****************
 11276 ;; Defined at:
 11277 ;;		line 68 in file "LCDP_Master.c"
 11278 ;; Parameters:    Size  Location     Type
 11279 ;;  a               1    wreg     unsigned char 
 11280 ;; Auto vars:     Size  Location     Type
 11281 ;;  a               1    3[COMMON] unsigned char 
 11282 ;; Return value:  Size  Location     Type
 11283 ;;                  1    wreg      void 
 11284 ;; Registers used:
 11285 ;;		wreg
 11286 ;; Tracked objects:
 11287 ;;		On entry : 0/0
 11288 ;;		On exit  : 0/0
 11289 ;;		Unchanged: 0/0
 11290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11291 ;;      Params:         0       0       0       0       0
 11292 ;;      Locals:         1       0       0       0       0
 11293 ;;      Temps:          1       0       0       0       0
 11294 ;;      Totals:         2       0       0       0       0
 11295 ;;Total ram usage:        2 bytes
 11296 ;; Hardware stack levels used:    1
 11297 ;; Hardware stack levels required when called:    1
 11298 ;; This function calls:
 11299 ;;		Nothing
 11300 ;; This function is called by:
 11301 ;;		_Lcd_Write_String
 11302 ;; This function uses a non-reentrant model
 11303 ;;
 11304                           
 11305                           
 11306                           ;psect for function _Lcd_Write_Char
 11307  1954                     _Lcd_Write_Char:
 11308                           
 11309                           ;incstack = 0
 11310                           ; Regs used in _Lcd_Write_Char: [wreg]
 11311                           ;Lcd_Write_Char@a stored from wreg
 11312  1954  00F3               	movwf	Lcd_Write_Char@a
 11313  1955                     l3278:
 11314                           
 11315                           ;LCDP_Master.c: 69:     PORTBbits.RB7 = 1;
 11316  1955  1283               	bcf	3,5	;RP0=0, select bank0
 11317  1956  1303               	bcf	3,6	;RP1=0, select bank0
 11318  1957  1786               	bsf	6,7	;volatile
 11319  1958                     l3280:
 11320                           
 11321                           ;LCDP_Master.c: 70:     PORTD = a;
 11322  1958  0873               	movf	Lcd_Write_Char@a,w
 11323  1959  0088               	movwf	8	;volatile
 11324  195A                     l3282:
 11325                           
 11326                           ;LCDP_Master.c: 71:     PORTBbits.RB6 = 1;
 11327  195A  1706               	bsf	6,6	;volatile
 11328                           
 11329                           ;LCDP_Master.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 11330  195B  300D               	movlw	13
 11331  195C  00F2               	movwf	??_Lcd_Write_Char
 11332  195D                     u6377:
 11333  195D  0BF2               	decfsz	??_Lcd_Write_Char,f
 11334  195E  295D               	goto	u6377
 11335  195F                     l3284:
 11336                           
 11337                           ;LCDP_Master.c: 73:     PORTBbits.RB6 = 0;
 11338  195F  1283               	bcf	3,5	;RP0=0, select bank0
 11339  1960  1303               	bcf	3,6	;RP1=0, select bank0
 11340  1961  1306               	bcf	6,6	;volatile
 11341  1962                     l21:
 11342  1962  0008               	return
 11343  1963                     __end_of_Lcd_Write_Char:
 11344                           
 11345                           	psect	text37
 11346  19AA                     __ptext37:	
 11347 ;; *************** function _Lcd_Set_Cursor *****************
 11348 ;; Defined at:
 11349 ;;		line 47 in file "LCDP_Master.c"
 11350 ;; Parameters:    Size  Location     Type
 11351 ;;  a               1    wreg     unsigned char 
 11352 ;;  b               1    5[COMMON] unsigned char 
 11353 ;; Auto vars:     Size  Location     Type
 11354 ;;  a               1    7[COMMON] unsigned char 
 11355 ;;  temp            1    8[COMMON] unsigned char 
 11356 ;;  y               1    0        unsigned char 
 11357 ;;  z               1    0        unsigned char 
 11358 ;; Return value:  Size  Location     Type
 11359 ;;                  1    wreg      void 
 11360 ;; Registers used:
 11361 ;;		wreg, status,2, status,0, pclath, cstack
 11362 ;; Tracked objects:
 11363 ;;		On entry : 0/0
 11364 ;;		On exit  : 0/0
 11365 ;;		Unchanged: 0/0
 11366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11367 ;;      Params:         1       0       0       0       0
 11368 ;;      Locals:         2       0       0       0       0
 11369 ;;      Temps:          1       0       0       0       0
 11370 ;;      Totals:         4       0       0       0       0
 11371 ;;Total ram usage:        4 bytes
 11372 ;; Hardware stack levels used:    1
 11373 ;; Hardware stack levels required when called:    2
 11374 ;; This function calls:
 11375 ;;		_Lcd_Cmd
 11376 ;; This function is called by:
 11377 ;;		_main
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           
 11382                           ;psect for function _Lcd_Set_Cursor
 11383  19AA                     _Lcd_Set_Cursor:
 11384                           
 11385                           ;incstack = 0
 11386                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11387                           ;Lcd_Set_Cursor@a stored from wreg
 11388  19AA  00F7               	movwf	Lcd_Set_Cursor@a
 11389  19AB                     l3586:
 11390                           
 11391                           ;LCDP_Master.c: 47: void Lcd_Set_Cursor(char a, char b);LCDP_Master.c: 48: {;LCDP_Master
      +                          .c: 49:  char temp,z,y;;LCDP_Master.c: 50:  if(a == 1)
 11392  19AB  0377               	decf	Lcd_Set_Cursor@a,w
 11393  19AC  1D03               	btfss	3,2
 11394  19AD  29AF               	goto	u5531
 11395  19AE  29B0               	goto	u5530
 11396  19AF                     u5531:
 11397  19AF  29BC               	goto	l3592
 11398  19B0                     u5530:
 11399  19B0                     l3588:
 11400                           
 11401                           ;LCDP_Master.c: 51:  {;LCDP_Master.c: 52:    temp = 0x80 + b - 1;
 11402  19B0  0875               	movf	Lcd_Set_Cursor@b,w
 11403  19B1  3E7F               	addlw	127
 11404  19B2  00F6               	movwf	??_Lcd_Set_Cursor
 11405  19B3  0876               	movf	??_Lcd_Set_Cursor,w
 11406  19B4  00F8               	movwf	Lcd_Set_Cursor@temp
 11407  19B5                     l3590:
 11408                           
 11409                           ;LCDP_Master.c: 55:   Lcd_Cmd(temp);
 11410  19B5  0878               	movf	Lcd_Set_Cursor@temp,w
 11411  19B6  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11412                           
 11413                           ;LCDP_Master.c: 57:  }
 11414  19BB  29CD               	goto	l18
 11415  19BC                     l3592:
 11416  19BC  3002               	movlw	2
 11417  19BD  0677               	xorwf	Lcd_Set_Cursor@a,w
 11418  19BE  1D03               	btfss	3,2
 11419  19BF  29C1               	goto	u5541
 11420  19C0  29C2               	goto	u5540
 11421  19C1                     u5541:
 11422  19C1  29CD               	goto	l18
 11423  19C2                     u5540:
 11424  19C2                     l3594:
 11425                           
 11426                           ;LCDP_Master.c: 59:  {;LCDP_Master.c: 60:   temp = 0xC0 + b - 1;
 11427  19C2  0875               	movf	Lcd_Set_Cursor@b,w
 11428  19C3  3EBF               	addlw	191
 11429  19C4  00F6               	movwf	??_Lcd_Set_Cursor
 11430  19C5  0876               	movf	??_Lcd_Set_Cursor,w
 11431  19C6  00F8               	movwf	Lcd_Set_Cursor@temp
 11432  19C7                     l3596:
 11433                           
 11434                           ;LCDP_Master.c: 63:   Lcd_Cmd(temp);
 11435  19C7  0878               	movf	Lcd_Set_Cursor@temp,w
 11436  19C8  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11437  19CD                     l18:
 11438  19CD  0008               	return
 11439  19CE                     __end_of_Lcd_Set_Cursor:
 11440                           
 11441                           	psect	text38
 11442  1A72                     __ptext38:	
 11443 ;; *************** function _Lcd_Init *****************
 11444 ;; Defined at:
 11445 ;;		line 83 in file "LCDP_Master.c"
 11446 ;; Parameters:    Size  Location     Type
 11447 ;;		None
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;		None
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  1    wreg      void 
 11452 ;; Registers used:
 11453 ;;		wreg, status,2, status,0, pclath, cstack
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11459 ;;      Params:         0       0       0       0       0
 11460 ;;      Locals:         0       0       0       0       0
 11461 ;;      Temps:          2       0       0       0       0
 11462 ;;      Totals:         2       0       0       0       0
 11463 ;;Total ram usage:        2 bytes
 11464 ;; Hardware stack levels used:    1
 11465 ;; Hardware stack levels required when called:    2
 11466 ;; This function calls:
 11467 ;;		_Lcd_Cmd
 11468 ;; This function is called by:
 11469 ;;		_main
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           
 11474                           ;psect for function _Lcd_Init
 11475  1A72                     _Lcd_Init:
 11476  1A72                     l3606:	
 11477                           ;incstack = 0
 11478                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 11479                           
 11480                           
 11481                           ;LCDP_Master.c: 85:     PORTBbits.RB7 = 0;
 11482  1A72  1283               	bcf	3,5	;RP0=0, select bank0
 11483  1A73  1303               	bcf	3,6	;RP1=0, select bank0
 11484  1A74  1386               	bcf	6,7	;volatile
 11485  1A75                     l3608:
 11486                           
 11487                           ;LCDP_Master.c: 87:     Lcd_Cmd(0x00);
 11488  1A75  3000               	movlw	0
 11489  1A76  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11490  1A7B                     l3610:
 11491                           
 11492                           ;LCDP_Master.c: 88:     _delay((unsigned long)((15)*(4000000/4000.0)));
 11493  1A7B  3014               	movlw	20
 11494  1A7C  00F6               	movwf	??_Lcd_Init+1
 11495  1A7D  3079               	movlw	121
 11496  1A7E  00F5               	movwf	??_Lcd_Init
 11497  1A7F                     u6387:
 11498  1A7F  0BF5               	decfsz	??_Lcd_Init,f
 11499  1A80  2A7F               	goto	u6387
 11500  1A81  0BF6               	decfsz	??_Lcd_Init+1,f
 11501  1A82  2A7F               	goto	u6387
 11502  1A83  2A84               	nop2
 11503  1A84                     l3612:
 11504                           
 11505                           ;LCDP_Master.c: 91:     Lcd_Cmd(0x30);
 11506  1A84  3030               	movlw	48
 11507  1A85  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11508                           
 11509                           ;LCDP_Master.c: 92:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 11510  1A8A  3035               	movlw	53
 11511  1A8B  00F5               	movwf	??_Lcd_Init
 11512  1A8C                     u6397:
 11513  1A8C  0BF5               	decfsz	??_Lcd_Init,f
 11514  1A8D  2A8C               	goto	u6397
 11515  1A8E                     l3614:
 11516                           
 11517                           ;LCDP_Master.c: 94:     Lcd_Cmd(0x38);
 11518  1A8E  3038               	movlw	56
 11519  1A8F  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11520  1A94                     l3616:
 11521                           
 11522                           ;LCDP_Master.c: 95:     Lcd_Cmd(0x01);
 11523  1A94  3001               	movlw	1
 11524  1A95  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11525  1A9A                     l3618:
 11526                           
 11527                           ;LCDP_Master.c: 96:     Lcd_Cmd(0x06);
 11528  1A9A  3006               	movlw	6
 11529  1A9B  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11530  1AA0                     l3620:
 11531                           
 11532                           ;LCDP_Master.c: 97:     Lcd_Cmd(0x0F);
 11533  1AA0  300F               	movlw	15
 11534  1AA1  160A  158A  2175  160A  158A  	fcall	_Lcd_Cmd
 11535  1AA6                     l30:
 11536  1AA6  0008               	return
 11537  1AA7                     __end_of_Lcd_Init:
 11538                           
 11539                           	psect	text39
 11540  1975                     __ptext39:	
 11541 ;; *************** function _Lcd_Cmd *****************
 11542 ;; Defined at:
 11543 ;;		line 33 in file "LCDP_Master.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;  a               1    wreg     unsigned char 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  a               1    4[COMMON] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11557 ;;      Params:         0       0       0       0       0
 11558 ;;      Locals:         1       0       0       0       0
 11559 ;;      Temps:          2       0       0       0       0
 11560 ;;      Totals:         3       0       0       0       0
 11561 ;;Total ram usage:        3 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:    1
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_Lcd_Set_Cursor
 11568 ;;		_Lcd_Init
 11569 ;;		_Lcd_Clear
 11570 ;;		_Lcd_Shift_Right
 11571 ;;		_Lcd_Shift_Left
 11572 ;; This function uses a non-reentrant model
 11573 ;;
 11574                           
 11575                           
 11576                           ;psect for function _Lcd_Cmd
 11577  1975                     _Lcd_Cmd:
 11578                           
 11579                           ;incstack = 0
 11580                           ; Regs used in _Lcd_Cmd: [wreg]
 11581                           ;Lcd_Cmd@a stored from wreg
 11582  1975  00F4               	movwf	Lcd_Cmd@a
 11583  1976                     l3270:
 11584                           
 11585                           ;LCDP_Master.c: 34:  PORTBbits.RB7 =0;
 11586  1976  1283               	bcf	3,5	;RP0=0, select bank0
 11587  1977  1303               	bcf	3,6	;RP1=0, select bank0
 11588  1978  1386               	bcf	6,7	;volatile
 11589  1979                     l3272:
 11590                           
 11591                           ;LCDP_Master.c: 35:  PORTD = a;
 11592  1979  0874               	movf	Lcd_Cmd@a,w
 11593  197A  0088               	movwf	8	;volatile
 11594  197B                     l3274:
 11595                           
 11596                           ;LCDP_Master.c: 36:     PORTBbits.RB6 = 1;
 11597  197B  1706               	bsf	6,6	;volatile
 11598                           
 11599                           ;LCDP_Master.c: 37:     _delay((unsigned long)((4)*(4000000/4000.0)));
 11600  197C  3006               	movlw	6
 11601  197D  00F3               	movwf	??_Lcd_Cmd+1
 11602  197E  3030               	movlw	48
 11603  197F  00F2               	movwf	??_Lcd_Cmd
 11604  1980                     u6407:
 11605  1980  0BF2               	decfsz	??_Lcd_Cmd,f
 11606  1981  2980               	goto	u6407
 11607  1982  0BF3               	decfsz	??_Lcd_Cmd+1,f
 11608  1983  2980               	goto	u6407
 11609  1984  0000               	nop
 11610  1985                     l3276:
 11611                           
 11612                           ;LCDP_Master.c: 38:     PORTBbits.RB6 = 0;
 11613  1985  1283               	bcf	3,5	;RP0=0, select bank0
 11614  1986  1303               	bcf	3,6	;RP1=0, select bank0
 11615  1987  1306               	bcf	6,6	;volatile
 11616  1988                     l9:
 11617  1988  0008               	return
 11618  1989                     __end_of_Lcd_Cmd:
 11619                           
 11620                           	psect	text40
 11621  19F3                     __ptext40:	
 11622 ;; *************** function _isr *****************
 11623 ;; Defined at:
 11624 ;;		line 52 in file "main_proyectoMaster.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;		None
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;		None
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, status,2, status,0
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11638 ;;      Params:         0       0       0       0       0
 11639 ;;      Locals:         0       0       0       0       0
 11640 ;;      Temps:          2       0       0       0       0
 11641 ;;      Totals:         2       0       0       0       0
 11642 ;;Total ram usage:        2 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; This function calls:
 11645 ;;		Nothing
 11646 ;; This function is called by:
 11647 ;;		Interrupt level 1
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           
 11652                           ;psect for function _isr
 11653  19F3                     _isr:
 11654  19F3                     i1l3712:
 11655                           
 11656                           ;main_proyectoMaster.c: 54:     if(RBIF == 1)
 11657  19F3  1C0B               	btfss	11,0	;volatile
 11658  19F4  29F6               	goto	u558_21
 11659  19F5  29F7               	goto	u558_20
 11660  19F6                     u558_21:
 11661  19F6  2A11               	goto	i1l172
 11662  19F7                     u558_20:
 11663  19F7                     i1l3714:
 11664                           
 11665                           ;main_proyectoMaster.c: 55:     {;main_proyectoMaster.c: 56:         if(RB0 == 0)
 11666  19F7  1283               	bcf	3,5	;RP0=0, select bank0
 11667  19F8  1303               	bcf	3,6	;RP1=0, select bank0
 11668  19F9  1806               	btfsc	6,0	;volatile
 11669  19FA  29FC               	goto	u559_21
 11670  19FB  29FD               	goto	u559_20
 11671  19FC                     u559_21:
 11672  19FC  2A11               	goto	i1l172
 11673  19FD                     u559_20:
 11674  19FD                     i1l3716:
 11675                           
 11676                           ;main_proyectoMaster.c: 57:         {;main_proyectoMaster.c: 58:             start = 1;
 11677  19FD  3001               	movlw	1
 11678  19FE  1683               	bsf	3,5	;RP0=1, select bank1
 11679  19FF  1303               	bcf	3,6	;RP1=0, select bank1
 11680  1A00  00DA               	movwf	_start^(0+128)
 11681  1A01  3000               	movlw	0
 11682  1A02  00DB               	movwf	(_start^(0+128)+1)
 11683  1A03                     i1l3718:
 11684                           
 11685                           ;main_proyectoMaster.c: 59:             if (datUltrasonico == 0 & start == 1)
 11686  1A03  0856               	movf	_datUltrasonico^(0+128),w
 11687  1A04  0457               	iorwf	(_datUltrasonico+1)^(0+128),w
 11688  1A05  1D03               	btfss	3,2
 11689  1A06  2A08               	goto	u560_21
 11690  1A07  2A09               	goto	u560_20
 11691  1A08                     u560_21:
 11692  1A08  2A11               	goto	i1l172
 11693  1A09                     u560_20:
 11694  1A09                     i1l3720:
 11695  1A09  035A               	decf	_start^(0+128),w
 11696  1A0A  045B               	iorwf	(_start+1)^(0+128),w
 11697  1A0B  1D03               	btfss	3,2
 11698  1A0C  2A0E               	goto	u561_21
 11699  1A0D  2A0F               	goto	u561_20
 11700  1A0E                     u561_21:
 11701  1A0E  2A11               	goto	i1l172
 11702  1A0F                     u561_20:
 11703  1A0F                     i1l3722:
 11704                           
 11705                           ;main_proyectoMaster.c: 60:             {;main_proyectoMaster.c: 61:                 Ban
      +                          Start = 1;
 11706  1A0F  01FB               	clrf	_BanStart
 11707  1A10  0AFB               	incf	_BanStart,f
 11708  1A11                     i1l172:	
 11709                           ;main_proyectoMaster.c: 64:     }
 11710                           
 11711                           
 11712                           ;main_proyectoMaster.c: 65:     INTCONbits.RBIF = 0;
 11713  1A11  100B               	bcf	11,0	;volatile
 11714  1A12                     i1l175:
 11715  1A12  0871               	movf	??_isr+1,w
 11716  1A13  008A               	movwf	10
 11717  1A14  0E70               	swapf	??_isr,w
 11718  1A15  0083               	movwf	3
 11719  1A16  0EFE               	swapf	btemp,f
 11720  1A17  0E7E               	swapf	btemp,w
 11721  1A18  0009               	retfie
 11722  1A19                     __end_of_isr:
 11723  007E                     btemp	set	126	;btemp
 11724  007E                     wtemp0	set	126
 11725                           
 11726                           	psect	intentry
 11727  0004                     __pintentry:	
 11728                           ;incstack = 0
 11729                           ; Regs used in _isr: [wreg+status,2+status,0]
 11730                           
 11731  0004                     interrupt_function:
 11732  007E                     saved_w	set	btemp
 11733  0004  00FE               	movwf	btemp
 11734  0005  0E03               	swapf	3,w
 11735  0006  00F0               	movwf	??_isr
 11736  0007  080A               	movf	10,w
 11737  0008  00F1               	movwf	??_isr+1
 11738  0009  160A  158A  29F3   	ljmp	_isr
 11739                           
 11740                           	psect	config
 11741                           
 11742                           ;Config register CONFIG1 @ 0x2007
 11743                           ;	Oscillator Selection bits
 11744                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11745                           ;	Watchdog Timer Enable bit
 11746                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11747                           ;	Power-up Timer Enable bit
 11748                           ;	PWRTE = OFF, PWRT disabled
 11749                           ;	RE3/MCLR pin function select bit
 11750                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11751                           ;	Code Protection bit
 11752                           ;	CP = OFF, Program memory code protection is disabled
 11753                           ;	Data Code Protection bit
 11754                           ;	CPD = OFF, Data memory code protection is disabled
 11755                           ;	Brown Out Reset Selection bits
 11756                           ;	BOREN = OFF, BOR disabled
 11757                           ;	Internal External Switchover bit
 11758                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11759                           ;	Fail-Safe Clock Monitor Enabled bit
 11760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11761                           ;	Low Voltage Programming Enable bit
 11762                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11763                           ;	In-Circuit Debugger Mode bit
 11764                           ;	DEBUG = 0x1, unprogrammed default
 11765  2007                     	org	8199
 11766  2007  20D4               	dw	8404
 11767                           
 11768                           ;Config register CONFIG2 @ 0x2008
 11769                           ;	Brown-out Reset Selection bit
 11770                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11771                           ;	Flash Program Memory Self Write Enable bits
 11772                           ;	WRT = OFF, Write protection off
 11773  2008                     	org	8200
 11774  2008  3FFF               	dw	16383

Data Sizes:
    Strings     82
    Constant    144
    Data        0
    BSS         48
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     80      80
    BANK1            80     40      67
    BANK3            96      0      20
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_9(CODE[7]), STR_8(CODE[8]), STR_4(CODE[5]), STR_3(CODE[14]), 
		 -> STR_2(CODE[16]), STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena_caracteres@st	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK3[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), s(BANK3[20]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _main->_com_master
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___llmod->___lldiv
    _cadena_caracteres->_Envio_caracter
    _I2C_Master_Init->___lldiv
    _com_master->_I2C_Master_Read
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_valorsensores
    _valorsensores->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _valorsensores->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69754
                                             38 BANK1      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                         _com_master
                              _setup
                            _sprintf
                      _valorsensores
 ---------------------------------------------------------------------------------
 (1) _valorsensores                                        1     1      0   33458
                                             79 BANK0      1     1      0
                  _cadena_caracteres
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   33247
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7408
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     398
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     952
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _cadena_caracteres                                    4     4      0     211
                                              3 COMMON     4     4      0
                     _Envio_caracter
 ---------------------------------------------------------------------------------
 (3) _Envio_caracter                                       1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     868
                    _I2C_Master_Init
                  _configuracionUART
 ---------------------------------------------------------------------------------
 (2) _configuracionUART                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                              5 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     770
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _com_master                                           3     3      0     979
                                              8 COMMON     3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              2 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     273
                                              2 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     568
                                              4 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      22
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     612
                                              5 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              5 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _com_master
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _setup
     _I2C_Master_Init
       ___lldiv
     _configuracionUART
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _valorsensores
     _cadena_caracteres
       _Envio_caracter
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      B3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     28      43       7       83.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      14       9       20.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      B3      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Sep 03 16:50:02 2021

                         l9 1988                           _s 0190                           pc 0002  
                        l21 1962                          l30 1AA6                          l18 19CD  
                        l27 1B5A                          l55 1933                          l64 19A9  
                        l58 193B                          l67 1BEA                ___awdiv@sign 0025  
                        _v1 00D0                          _v2 00CC                          _v3 00C8  
                        fsr 0004         ___wmul@multiplicand 0074         __Umul8_16@word_mpld 0078  
                       l230 1947                         l233 1953                         l250 07FD  
                       l242 10FA                         l227 1ADE                         l236 1927  
                       l245 1931                         l181 084B                         l183 0842  
                       l248 07F5                         l192 1A71                         l416 04FA  
                       l249 07F8                         l441 19DA                         l409 04B6  
                       l185 085B                         l362 0FFF                         l195 0817  
                       l443 19F2                         l611 125C                         l355 1577  
                       l612 11C1                         l437 07CF                         l381 00A8  
                       l198 136A                         l622 124F                         l615 121F  
                       l607 1D39                         l632 1119                         l640 1946  
                       l810 17F3                         l802 17D1                         l627 1C09  
                       l635 1185                         l811 17FF                         l651 1E71  
                       l628 1C25                         l636 119E                         l644 1E86  
                       l477 1DA1                         l629 1C3A                         l814 1C8A  
                       l654 1E86                         l910 1F42                         l662 1FC2  
                       l921 1F0C                         l922 1F18                         l914 1EF0  
                       l658 1FFF                         l594 1E0A                         l659 1F71  
                       l747 1BA0                         l772 1682                         l908 1EAB  
                       l781 17FF                         l669 1FF2                         l757 1B18  
                       l774 1659                         l870 0C08                         l768 15DB  
                       l864 0C9C                         l928 1974                         l793 1771  
                       l697 1CE0                         l883 1A2D                         l876 0C90  
                       l789 174D                         l885 1A3F                         l799 1793  
                       _GIE 005F                         _RB0 0030                         _POT 00DC  
                       _isr 19F3                         fsr0 0004                         indf 0000  
              ___awmod@sign 0078                ___flmul@aexp 003A                ___flmul@bexp 003B  
              ___flmul@sign 0035                ___flmul@temp 0040                ___flmul@prod 003C  
              ___fltol@exp1 005F                        l3000 1F89                        l3010 1FB4  
                      l3002 1F92                        l3100 1D3A                        l3020 1FCE  
                      l3012 1FBC                        l3004 1F9B                        l3110 1D69  
                      l3102 1D4C                        l3030 1FF7                        l3014 1FC6  
                      l3022 1FE0                        l3006 1FA9                        l3112 1D7B  
                      l3104 1D4F                        l3120 1D99                        l3040 11B5  
                      l3008 1FB3                        l4000 0424                        l3114 1D89  
                      l3106 1D5C                        l3130 1C37                        l3050 11DB  
                      l3034 119F                        l4010 04BE                        l4002 042B  
                      l3116 1D8A                        l3108 1D60                        l3132 1C39  
                      l3124 1BEB                        l3140 112D                        l3220 1C3B  
                      l3060 120F                        l3052 11DD                        l3036 11AC  
                      l3028 1FE7                        l2500 1D06                        l4100 07A7  
                      l4020 04ED                        l4012 04C7                        l4004 0430  
                      l3118 1D93                        l3126 1C01                        l3150 119B  
                      l3142 1135                        l3222 1C3F                        l3230 1E93  
                      l3062 1210                        l3054 11E6                        l3046 11C2  
                      l2430 1A27                        l2510 1D25                        l2502 1D0A  
                      l4030 0513                        l4022 04F4                        l4014 04CB  
                      l4006 046B                        l4102 07B5                        l3128 1C1D  
                      l3152 119D                        l3144 1139                        l3136 10FB  
                      l3160 1946                        l2600 15BE                        l3240 1EC1  
                      l3232 1EA3                        l3080 1244                        l3072 122B  
                      l3064 1219                        l3056 11EF                        l3048 11CA  
                      l2432 1A36                        l2424 1A1A                        l2440 1DA5  
                      l2504 1D0E                        l2512 1D2B                        l4040 0612  
                      l4032 0531                        l4024 0503                        l4016 04D1  
                      l4008 04AA                        l4104 07CB                        l4120 1BD5  
                      l3146 115D                        l3138 1111                        l2602 15C3  
                      l2610 15D3                        l3170 1E21                        l3090 19D4  
                      l3250 1EF7                        l3242 1ECE                        l3234 1EB3  
                      l3226 1E8A                        l3082 1254                        l3066 1223  
                      l3074 123D                        l3058 1201                        l2434 1A3B  
                      l2426 1A1C                        l2450 1DB9                        l2442 1DA9  
                      l2514 1D30                        l2506 1D18                        l4050 0686  
                      l4034 058C                        l4042 066D                        l4026 0508  
                      l4018 04DE                        l4122 1BE4                        l4114 1BA1  
                      l4130 0825                        l3148 1161                        l3156 193C  
                      l2700 173F                        l2620 15F1                        l2612 15E1  
                      l2604 15C8                        l3180 1E45                        l3172 1E36  
                      l3164 1E0B                        l3092 19E1                        l3260 1F30  
                      l3252 1F02                        l3244 1ED5                        l3228 1E8F  
                      l2428 1A23                        l2460 1DCF                        l2452 1DBD  
                      l2444 1DAE                        l2516 1D35                        l2508 1D1E  
                      l4060 06AA                        l4044 0675                        l4036 05C7  
                      l4028 050F                        l4052 068D                        l4116 1BB5  
                      l4140 084E                        l4132 082A                        l4124 0818  
                      l3270 1976                        l3158 1944                        l2710 176C  
                      l2702 1755                        l2630 1605                        l2622 15F5  
                      l2614 15E5                        l2606 15D0                        l3174 1E37  
                      l3166 1E18                        l3094 19E8                        l3086 19CE  
                      l3262 1F35                        l3254 1F06                        l3246 1ED9  
                      l3238 1EBC                        l2550 1AE8                        l2470 1DEF  
                      l2462 1DD3                        l2454 1DBF                        l2446 1DB0  
                      l2438 1DA2                        l4062 06B5                        l4054 069E  
                      l4046 067C                        l4038 0606                        l4118 1BBB  
                      l4150 0886                        l4142 0857                        l4134 0833  
                      l4126 081D                        l3272 1979                        l3280 1958  
                      l3600 1B1C                        l2720 177F                        l2712 1770  
                      l2704 175A                        l2640 1619                        l2632 1609  
                      l2624 15F9                        l2616 15E9                        l2608 15D1  
                      l3176 1E3F                        l3096 19EE                        l3088 19D0  
                      l3264 1F39                        l3256 1F10                        l3248 1EE7  
                      l2800 099B                        l2560 1B07                        l2552 1AEF  
                      l2472 1DF6                        l2464 1DD7                        l2456 1DC5  
                      l2448 1DB4                        l4080 070C                        l4064 06BB  
                      l4056 06A2                        l4048 0680                        l4208 00C0  
                      l4160 08B5                        l4152 088F                        l4144 085E  
                      l4136 083B                        l4128 0820                        l3274 197B  
                      l3610 1A7B                        l3282 195A                        l3602 1B38  
                      l3290 1998                        l2730 1790                        l2714 1775  
                      l2722 1781                        l2650 163D                        l2642 161D  
                      l2634 160D                        l2626 15FD                        l2618 15ED  
                      l2570 157F                        l3194 1E66                        l3186 1E4D  
                      l3178 1E41                        l3266 1F3A                        l3258 1F1A  
                      l2810 09C6                        l2802 09A0                        l2562 1B0E  
                      l2554 1AF3                        l2546 1ADF                        l2466 1DE8  
                      l2458 1DC8                        l2474 1DFC                        l2490 1CED  
                      l2482 1CE1                        l4090 073E                        l4082 0717  
                      l4074 06CB                        l4066 06C3                        l4058 06A6  
                      l4170 08F9                        l4162 08C1                        l4154 0897  
                      l4146 0864                        l4138 0845                        l3276 1985  
                      l3620 1AA0                        l3612 1A84                        l3284 195F  
                      l3604 1B3E                        l3700 134A                        l3540 1ADC  
                      l3532 1AA7                        l3292 199E                        l2740 17AF  
                      l2716 1778                        l2708 1763                        l2724 1785  
                      l2660 166D                        l2652 165D                        l2644 1621  
                      l2636 1611                        l2628 1601                        l2580 1594  
                      l2572 1585                        l3196 1E76                        l3188 1E5F  
                      l2820 0A63                        l2812 09E3                        l2556 1AF7  
                      l2548 1AE5                        l2564 1B14                        l2476 1E01  
                      l2468 1DEE                        l2492 1CF1                        l2484 1CE2  
                      l4092 0745                        l4084 0718                        l4068 06C9  
                      l4172 0913                        l4164 08CA                        l4156 08A0  
                      l4148 087E                        l3614 1A8E                        l3606 1A72  
                      l3278 1955                        l2910 194D                        l3702 1358  
                      l3542 1ADD                        l3534 1AAB                        l3550 080F  
                      l2902 1933                        l3286 198A                        l2750 17E8  
                      l2742 17CD                        l2734 1798                        l2726 1786  
                      l2718 177A                        l2662 1676                        l2654 1666  
                      l2638 1615                        l2646 1625                        l2590 15AC  
                      l2582 159C                        l2574 1589                        l3198 1E7B  
                      l2830 0AC6                        l2822 0A6C                        l2814 09FF  
                      l2806 09A9                        l2558 1B01                        l2478 1E06  
                      l2494 1CF6                        l2486 1CE6                        l4094 074A  
                      l4086 0727                        l4078 0702                        l4174 091F  
                      l4166 08E4                        l4158 08AC                        l3616 1A94  
                      l3608 1A75                        l3560 1924                        l3704 135D  
                      l3536 1AAE                        l3552 0812                        l3544 0803  
                      l3640 1A4B                        l3632 1A40                        l2904 1939  
                      l3288 198D                        l2760 17FE                        l2752 17E9  
                      l2744 17D6                        l2736 179D                        l2728 178A  
                      l2680 16BC                        l2672 1694                        l2656 1668  
                      l2664 167A                        l2648 1626                        l2592 15B2  
                      l2584 159D                        l2576 158A                        l2568 1578  
                      l2840 0B66                        l2832 0ADF                        l2824 0A7C  
                      l2816 0A2B                        l2808 09B9                        l2496 1CFC  
                      l2488 1CEB                        l4096 079F                        l4088 0730  
                      l4176 0928                        l4168 08F0                        l3618 1A9A  
                      l3570 07D0                        l3562 1928                        l3538 1ADB  
                      l3554 0813                        l3546 080A                        l3650 1A62  
                      l3642 1A4E                        l3634 1A47                        l2754 17ED  
                      l2746 17DB                        l2738 17AB                        l2682 16BE  
                      l2674 16AB                        l2666 1686                        l2690 16D1  
                      l2658 166C                        l2594 15B3                        l2578 158F  
                      l2586 159F                        l2850 0BD4                        l2842 0B8C  
                      l2834 0AFC                        l2826 0A99                        l2818 0A47  
                      l2770 094E                        l2762 093C                        l2498 1CFF  
                      l2930 0CA0                        l2908 1947                        l3580 07F1  
                      l3572 07D5                        l3564 192D                        l3556 0814  
                      l3548 080E                        l3660 1A6D                        l3652 1A63  
                      l3644 1A51                        l3636 1A49                        l2756 17EF  
                      l2748 17E3                        l2692 16E7                        l2684 16C2  
                      l2676 16AF                        l2668 168B                        l2596 15B9  
                      l2588 15A7                        l2860 0BEC                        l2852 0BD8  
                      l2844 0BB4                        l2836 0B29                        l2828 0AA9  
                      l2780 096A                        l2772 0953                        l2764 0943  
                      l3820 1B6F                        l3812 1B5B                        l2932 0CA4  
                      l3900 0090                        l3590 19B5                        l3582 07F9  
                      l3574 07DD                        l3558 191F                        l3566 10F2  
                      l3670 127C                        l3662 1A6E                        l3654 1A64  
                      l3646 1A52                        l3638 1A4A                        l2758 17FA  
                      l2694 1725                        l2686 16C3                        l2678 16B3  
                      l2598 15BD                        l2870 0C0D                        l2862 0BED  
                      l2854 0BD9                        l2846 0BBD                        l2838 0B39  
                      l2790 097F                        l2782 096F                        l2774 0958  
                      l2766 0949                        l3830 1B8F                        l3822 1B73  
                      l3814 1B5F                        l2942 0D97                        l2934 0CA6  
                      l3910 00CE                        l3902 00A2                        l3592 19BC  
                      l3576 07E6                        l3568 10F7                        l3680 12AA  
                      l3672 1289                        l3664 1A6F                        l3656 1A65  
                      l3648 1A5F                        l2696 172B                        l2688 16CC  
                      l2872 0C12                        l2880 0C43                        l2864 0BF1  
                      l2856 0BE2                        l2848 0BCB                        l2792 0984  
                      l2784 0975                        l2776 0960                        l2768 094D  
                      l3832 1B96                        l3824 1B77                        l3816 1B65  
                      l3840 1374                        l2960 0F44                        l2944 0D9E  
                      l2936 0CAD                        l2952 0E53                        l3920 00F4  
                      l3912 00DA                        l3904 00A6                        l3594 19C2  
                      l3586 19AB                        l3578 07EB                        l3690 12FE  
                      l3682 12D5                        l3674 128E                        l3666 1A70  
                      l3658 1A6A                        l2698 1730                        l2890 0C76  
                      l2882 0C50                        l2874 0C20                        l2866 0C05  
                      l2858 0BE8                        l2794 098C                        l2786 0979  
                      l2778 0962                        l3826 1B88                        l3818 1B68  
                      l3834 1B9C                        l2970 1964                        l2962 0F4B  
                      l2954 0E5A                        l3930 0147                        l3922 010D  
                      l3914 00DE                        l3596 19C7                        l3588 19B0  
                      l3692 1303                        l3684 12E2                        l3676 1297  
                      l3668 125D                        l3860 1C98                        l2892 0C84  
                      l2884 0C5B                        l2876 0C24                        l2796 098E  
                      l2788 097A                        l3828 1B8E                        l3852 1534  
                      l2972 1965                        l2948 0E26                        l3940 0192  
                      l3932 0152                        l3924 0126                        l3916 00E2  
                      l3908 00AA                        l3598 1B19                        l3694 132F  
                      l3686 12E7                        l3678 12A5                        l3870 1CD2  
                      l3862 1CA5                        l2982 1F43                        l2894 0C88  
                      l2886 0C6A                        l2878 0C3D                        l2798 0996  
                      l3846 1483                        l3838 136E                        l2974 196B  
                      l2966 0FD3                        l3950 0224                        l3942 0198  
                      l3934 0158                        l3926 012A                        l3918 00F0  
                      l3696 133C                        l3688 12F0                        l3864 1CA9  
                      l3872 1CD8                        l3856 1C8B                        l2984 1F56  
                      l2896 0C89                        l2888 0C74                        l3848 1489  
                      l2976 1971                        l3960 02AC                        l3952 023F  
                      l3944 01B7                        l3936 016B                        l3928 012E  
                      l3880 0034                        l3698 1341                        l3866 1CBB  
                      l3858 1C95                        l2994 1F72                        l2898 0C94  
                      l2978 1973                        l3970 0321                        l3962 02C7  
                      l3946 0202                        l3938 018E                        l3954 0247  
                      l3890 0053                        l3882 003B                        l3868 1CC9  
                      l2996 1F78                        l2988 1F5F                        l3972 0329  
                      l3964 02EE                        l3980 036F                        l3956 0256  
                      l3948 021B                        l3892 0059                        l3884 0040  
                      l3876 0029                        l2998 1F87                        l3982 03A4  
                      l3974 0347                        l3966 02FD                        l3958 029D  
                      l3894 005E                        l3886 0042                        l3878 002E  
                      l3992 03D7                        l3984 03D3                        l3968 0318  
                      l3896 0073                        l3888 0050                        l3986 03D5  
                      l3978 0366                        l3898 008A                        l3996 040E  
                      ?_isr 0070                        l3998 0418                        STR_1 10A0  
                      STR_2 10B1                        STR_3 10C1                        STR_4 10E3  
                      STR_5 10ED                        STR_6 10DE                        STR_7 10E8  
                      STR_8 10CF                        STR_9 10D7                        u3000 1D0E  
                      u3001 1D0D                        u3010 1D18                        u3011 1D17  
                      u3030 1D2B                        u3031 1D2A                        u3015 1D14  
                      u3200 1594                        u4000 0C88                        u3120 1AE5  
                      u3040 1D30                        u3201 1593                        u4001 0C87  
                      u3121 1AE4                        u3041 1D2F                        u3025 1D1F  
                      u4010 1939                        u3210 15B2                        u4011 1938  
                      u3211 15B1                        u4020 194D                        u3300 165D  
                      u3220 15BD                        u3140 1AF7                        u4021 194C  
                      u3301 165C                        u3221 15BC                        u3141 1AF6  
                      u4030 1953                        u3310 166C                        u3230 15C3  
                      u3150 1B01                        u4031 1952                        u3311 166B  
                      u3231 15C2                        u3151 1B00                        u3135 1AE9  
                      u3240 15C8                        u4120 0CA4                        u3241 15C7  
                      u4121 0CA3                        u3410 16E7                        u3330 1682  
                      u3250 15E1                        u5010 1EF6                        u3170 1B14  
                      u4210 0E5A                        u4130 0CAD                        u3411 16E6  
                      u3331 1681                        u3251 15E0                        u5011 1EF5  
                      u3171 1B13                        u3155 1AFD                        u4211 0E59  
                      u4131 0CAC                        u3500 177F                        u3340 1686  
                      u3260 15E5                        u3180 1589                        u4300 1971  
                      u3501 177E                        u3421 16FE                        u3413 16E3  
                      u3405 16C5                        u3341 1685                        u3325 166F  
                      u3261 15E4                        u3181 1588                        u5005 1EE8  
                      u3165 1B08                        u4301 1970                        u4205 0E29  
                      u3510 1785                        u3430 1712                        u3422 16FF  
                      u3350 168B                        u3270 163D                        u3190 158F  
                      u5030 1F06                        u4310 1F56                        u3511 1784  
                      u3431 1713                        u3423 1704                        u3351 168A  
                      u3271 163C                        u3191 158E                        u5031 1F05  
                      u4311 1F55                        u3600 17DB                        u3520 178A  
                      u3440 1730                        u3432 1718                        u3424 1705  
                      u3280 1648                        u5040 1F0C                        u4400 1FDF  
                      u4320 1F70                        u6000 02FD                        u3601 17DA  
                      u3521 1789                        u3441 172F                        u3433 1719  
                      u3425 170A                        u3361 169D                        u3281 1646  
                      u5041 1F0B                        u5025 1EFB                        u4401 1FDE  
                      u4321 1F6F                        u4225 0E7C                        u4145 0CCF  
                      u6001 02FC                        u3610 17E8                        u3530 1790  
                      u3450 1755                        u3426 170B                        u3370 16AF  
                      u3362 16A4                        u3290 1649                        u5050 1F10  
                      u4410 1FE6                        u4250 0F4B                        u4170 0D9E  
                      u6010 0318                        u3611 17E7                        u3531 178F  
                      u3451 1754                        u3371 16AE                        u3363 16AB  
                      u3275 1639                        u5051 1F0F                        u4411 1FE5  
                      u4251 0F4A                        u4235 0EB8                        u4171 0D9D  
                      u4155 0D0B                        u6011 0317                        u3620 17ED  
                      u3540 1797                        u3460 175A                        u3380 16B3  
                      u5060 1F25                        u4500 1223                        u4340 1FA9  
                      u3700 099B                        u2900 1DD7                        u6100 0508  
                      u3621 17EC                        u3541 1796                        u3461 1759  
                      u3381 16B2                        u4501 1222                        u4341 1FA8  
                      u3701 099A                        u2901 1DD6                        u4245 0F03  
                      u4165 0D56                        u6101 0507                        u6005 02F9  
                      u3630 17FE                        u3550 179D                        u3390 16C2  
                      u5070 1F35                        u4510 122A                        u4430 1FF7  
                      u2830 1A27                        u3710 09A0                        u6030 040D  
                      u3631 17FD                        u3551 179C                        u3391 16C1  
                      u5071 1F34                        u4511 1229                        u4431 1FF6  
                      u4335 1F94                        u2831 1A26                        u3711 099F  
                      u6031 040C                        u3560 17AF                        u3480 1770  
                      u4600 19EE                        u5080 1F39                        u4440 11AC  
                      u4360 1FC2                        u3640 094D                        u2920 1DE8  
                      u6200 070C                        u6040 0418                        u3561 17AE  
                      u3481 176F                        u4601 19ED                        u5081 1F38  
                      u5065 1F20                        u4441 11AB                        u4425 1FE9  
                      u4361 1FC1                        u4345 1FA5                        u3801 0AEE  
                      u3721 09F1                        u3641 094C                        u2921 1DE7  
                      u4265 0F5E                        u4185 0DB1                        u6201 070B  
                      u6041 0417                        u6025 03DA                        u4610 1D4C  
                      u5090 19A9                        u3570 17BE                        u3490 1775  
                      u4530 123C                        u4450 11C0                        u4370 1FC6  
                      u2850 1A3B                        u3802 0AF5                        u3722 09F8  
                      u3650 0953                        u4290 196B                        u6210 0717  
                      u6130 0674                        u6050 0424                        u4611 1D4B  
                      u5091 19A8                        u3491 1774                        u3475 1765  
                      u4531 123B                        u4451 11BF                        u4371 1FC5  
                      u4355 1FB5                        u2851 1A3A                        u3811 0B1B  
                      u3803 0AFC                        u3731 0A0D                        u3723 09FF  
                      u3651 0952                        u4291 196A                        u2915 1DD8  
                      u4275 0F9A                        u4195 0DED                        u6211 0716  
                      u6131 0673                        u6115 058F                        u6051 0423  
                      u6035 0409                        _PEIE 005E                        u4700 1C37  
                      u3580 17CD                        u4540 1243                        u4380 1FCD  
                      u3812 0B22                        u3732 0A14                        u3660 0958  
                      u2940 1DFC                        u2860 1DA9                        u6220 0727  
                      u6140 068C                        u4701 1C36                        u3581 17CC  
                      u4541 1242                        u4525 122C                        u4381 1FCC  
                      u2845 1A2E                        u3821 0B48                        u3813 0B29  
                      u3741 0A39                        u3733 0A1B                        u3661 0957  
                      u2941 1DFB                        u2925 1DE4                        u2861 1DA8  
                      u4285 0FD6                        u6221 0726                        u6141 068B  
                      u6125 0615                        u4630 1D60                        u5510 1ABE  
                      u4710 1111                        u3590 17D6                        u4470 1201  
                      u3910 0BEC                        u3830 0B72                        u3822 0B4F  
                      u3742 0A40                        u3670 0979                        u2950 1E01  
                      u2870 1DB4                        u6230 073E                        u6150 06A6  
                      u6070 04BD                        u4631 1D5F                        u4711 1110  
                      u3591 17D5                        u3575 17B9                        u4471 1200  
                      u3911 0BEB                        u3823 0B56                        u3751 0A55  
                      u3743 0A47                        u3671 0978                        u2951 1E00  
                      u2935 1DF0                        u2871 1DB3                        u6231 073D  
                      u6215 0713                        u6151 06A5                        u6071 04BC  
                      u5520 07F1                        u4720 112D                        u4800 1E2F  
                      u4560 1254                        u3920 0BF1                        u3752 0A5C  
                      u3680 097F                        u2880 1DC5                        u2960 1CE6  
                      u6160 06BB                        u6080 04DE                        _RBIF 0058  
                      u5521 07F0                        u4625 1D51                        u4705 1C33  
                      u4721 112C                        u4561 1253                        u4465 11E8  
                      u3921 0BF0                        u3905 0BDB                        u3841 0B7E  
                      u3753 0A63                        u3681 097E                        u2881 1DC4  
                      u2961 1CE5                        u6225 0723                        u6161 06BA  
                      u6081 04DD                        u6065 0433                        u5530 19B0  
                      u4650 1D7B                        u4730 1139                        u4810 1E45  
                      u4570 19D4                        u4490 121F                        u3930 0C05  
                      u3850 0B9A                        u3842 0B85                        u3690 0984  
                      u2970 1CF1                        u6250 07B5                        u6170 06C3  
                      u6090 04ED                        u5531 19AF                        u4651 1D7A  
                      u5515 1AB9                        u4731 1138                        u4811 1E44  
                      u4571 19D3                        u4555 1246                        u4491 121E  
                      u4475 11FD                        u4395 1FCF                        u3931 0C04  
                      u3843 0B8C                        u3835 0B6D                        u3771 0A8B  
                      u3691 0983                        u2971 1CF0                        u6251 07B4  
                      u6171 06C2                        u6091 04EC                        u6307 092E  
                      u5540 19C2                        u4820 1E4C                        u3940 0C0C  
                      u3772 0A92                        u2980 1CFC                        u6260 07CB  
                      u5541 19C1                        u6317 1282                        u4645 1D62  
                      u4741 1148                        u4821 1E4B                        u4805 1E2A  
                      u4485 1212                        u3941 0C0B                        u3861 0BA6  
                      u3781 0AB8                        u3773 0A99                        u3765 0A65  
                      u2981 1CFB                        u6261 07CA                        u6245 0759  
                      u6085 04DA                        u5550 1B26                        u4670 1D99  
                      u4750 1161                        u4742 1149                        u3950 0C12  
                      u3862 0BAD                        u3782 0ABF                        u5710 1B9C  
                      u6190 0701                        u6270 083B                        u6407 1980  
                      u6327 12B0                        u4671 1D98                        u4655 1D77  
                      u4751 1160                        u4743 114E                        u3951 0C11  
                      u3863 0BB4                        u3855 0B95                        u3783 0AC6  
                      u5711 1B9B                        u2895 1DC9                        u6191 0700  
                      u6095 04E9                        u6271 083A                        u5560 1B48  
                      u4680 1C01                        u4744 114F                        u4840 1E5E  
                      u5800 1C95                        u3960 0C24                        u5720 1374  
                      u6280 0842                        u6337 12DB                        u4665 1D8B  
                      u4681 1C00                        u4761 1170                        u4745 1154  
                      u4841 1E5D                        u5801 1C94                        u4585 19DB  
                      u3961 0C23                        u5705 1B90                        u5721 1373  
                      u6185 06CE                        u6281 0841                        u5570 1B5A  
                      u4690 1C1D                        u4770 119B                        u4762 1171  
                      u4746 1155                        u4850 1E65                        u3970 0C33  
                      u3890 0BD8                        u5650 1B65                        u6290 0857  
           ??_valorsensores 006F                        u5571 1B59                        u6347 1309  
                      u4691 1C1C                        u4771 119A                        u4763 1176  
                      u4851 1E64                        u4835 1E4E                        u4595 19E2  
                      u3891 0BD7                        u3875 0BB6                        u3795 0AC8  
                      u5651 1B64                        u2995 1D00                        u6195 06FD  
                      u6291 0856                        u4764 1177                        u4780 1944  
                      u5820 1CA9                        u3980 0C50                        u5900 00DE  
                      u6357 1335                        u4765 117C                        u4781 1943  
                      u5821 1CA8                        u3981 0C4F                        u3885 0BCD  
                      u5901 00DD                        u4766 117D                        u4870 1E76  
                      u4790 1E18                        u5830 1CBB                        u4950 1E8F  
                      u3990 0C6A                        u5670 1B77                        u5910 010D  
                      u6367 1363                        u4775 1197                        u4871 1E75  
                      u4791 1E17                        u5831 1CBA                        u5815 1C9A  
                      u4951 1E8E                        u3991 0C69                        u3975 0C2E  
                      u5671 1B76                        u5735 1391                        u5911 010C  
                      u4880 1E7B                        u4960 1E93                        u5760 1489  
                      u5920 0147                        u6377 195D                        u4881 1E7A  
                      u4865 1E68                        u4961 1E92                        u3985 0C4C  
                      u5665 1B69                        u5761 1488                        u5745 13ED  
                      u5921 0146                        u5850 1CD8                        u4970 1EB3  
                      u5690 1B88                        u5930 0192                        u6387 1A7F  
                      u5851 1CD7                        u5835 1CB7                        u4971 1EB2  
                      u3995 0C66                        u5691 1B87                        u5755 1442  
                      u5931 0191                        u5940 021B                        u5860 0034  
                      u6397 1A8C                        u5845 1CCA                        u5685 1B78  
                      u5941 021A                        u5861 0033                        u4990 1ED4  
                      u5950 023F                        u5870 0050                        u4991 1ED3  
                      u5695 1B84                        u5775 14A6                        u5951 023E  
                      u5871 004F                        u5960 0256                        u5880 00A1  
                      u4985 1EC6                        u5785 14F3                        u5961 0255  
                      u5881 00A0                        u5970 02AC                        u5890 00DA  
                      u5795 153F                        u5971 02AB                        u5891 00D9  
                      u5980 02C7                        u5981 02C6                        u5965 0252  
                      u5990 02EE                        u5991 02ED                        u5975 02A8  
                      _TXIF 0064                        _WPUB 0095           ?_Lcd_Write_String 0074  
                      _main 0818                        _var1 00E0                        _var2 00DE  
                      btemp 007E                        start 000C          ??_Lcd_Write_String 0076  
            _Envio_caracter 1932                _sprintf$1283 00AD             __end_of_Lcd_Cmd 1989  
            _datUltrasonico 00D6                       ??_isr 0070            ?_I2C_Master_Init 0025  
          ?_I2C_Master_Read 0072            ?_I2C_Master_Wait 0070            ?_I2C_Master_Stop 0070  
             ___fltol@sign1 005E             __end_of___fladd 1800                       ?_main 0070  
           __end_of___awdiv 1E0B             __end_of___flneg 1947             __end_of___awmod 1D3A  
           __end_of___flmul 0C9D             __end_of___flsub 1C8B             __end_of___fltol 1E87  
                     _ANSEL 0188             __end_of___lldiv 1DA2             ___awdiv@divisor 0020  
           __end_of___llmod 1CE1             __end_of___lwdiv 1BA1                       i1l172 1A11  
                     i1l175 1A12             __end_of___lwmod 1B19             ___awdiv@counter 0024  
                     _SPBRG 0099                       _PORTA 0005                       _PORTD 0008  
                     _PORTE 0009     __size_of_Lcd_Set_Cursor 0024                       _TRISA 0085  
                     _TRISB 0086                       _TRISD 0088                       _SSPIE 0463  
                     _TRISE 0089                       _SSPIF 0063                       _TXREG 0019  
           __end_of_dpowers 10A0                       _scale 0C9D             __end_of_isdigit 1975  
                     _setup 1A40                       _start 00DA                       pclath 000A  
                     status 0003      __end_of_Envio_caracter 193C                       wtemp0 007E  
           __end_of_sprintf 07D0            __end_of_Lcd_Init 1AA7             __initialization 000F  
              __end_of_main 093C                      ??_main 00C6        __size_of__tdiv_to_l_ 00BD  
         ?_I2C_Master_Start 0070           ?_I2C_Master_Write 0072          ??_I2C_Master_Start 0072  
        ??_I2C_Master_Write 0074            ___llmod@dividend 0029                      ?_scale 0042  
          ___awdiv@dividend 0022                      ?_setup 0070                      _ANSELH 0189  
                    i1l3720 1A09                      i1l3712 19F3                      i1l3722 1A0F  
                    i1l3714 19F7                      i1l3716 19FD                      i1l3718 1A03  
                    u560_20 1A09                      u560_21 1A08                      u561_20 1A0F  
                    u561_21 1A0E                      u558_20 19F7                      u558_21 19F6  
                    u559_20 19FD                      u559_21 19FC                   ??_Lcd_Cmd 0072  
                    _SPBRGH 009A     __size_of_Lcd_Write_Char 000F                      _SSPADD 0093  
                    _TRISC3 043B                      _TRISC4 043C                      _SSPCON 0014  
                    _SSPBUF 0013             ?_Envio_caracter 0070            __end_of___xxtofl 1F43  
          __end_of__powers_ 1044                      ___flge 10FB                      ___fleq 1BEB  
                 ??___fladd 005E                      ___wmul 19CE                   ??___awdiv 0079  
                 ??___flneg 0076           _configuracionUART 0803                   ??___awmod 0076  
                 ??___flmul 0030                   ??___flsub 007B                   ??___fltol 0059  
                 ??___lldiv 007A                   ??___llmod 002D                   ??___lwdiv 0078  
                 ??___lwmod 0076                      _fround 136B          ?_configuracionUART 0070  
          ___awdiv@quotient 0026             ___awmod@divisor 0072             ___awmod@counter 0077  
                 ??_isdigit 0072          __size_of__Umul8_16 0027         ??_configuracionUART 0072  
                    saved_w 007E                   ??_sprintf 00A8             Lcd_Set_Cursor@a 0077  
           Lcd_Set_Cursor@b 0075                  ___flge@ff1 0072                  ___flge@ff2 0076  
              ___xxtofl@arg 0022                ___xxtofl@exp 0021                ___xxtofl@val 0072  
                ___fleq@ff1 0072                  ___fleq@ff2 0076     __end_of__initialization 0022  
                ___flneg@f1 0072                  ___fltol@f1 0055   __end_of_configuracionUART 0818  
            __pcstackCOMMON 0070               __end_of_scale 1000               __end_of_setup 1A72  
            _Lcd_Set_Cursor 19AA                  __div_to_l_ 119F              _OPTION_REGbits 0081  
                 ?_Lcd_Init 0070             __div_to_l_@exp1 0025             __div_to_l_@cntr 0024  
                   ??_scale 0046             __div_to_l_@quot 0020                     ??_setup 007B  
                __pbssBANK1 00C8                  __pbssBANK3 0190               __div_to_l_@f1 0072  
             __div_to_l_@f2 0076           __end_of__Umul8_16 1A40                  __pmaintext 0818  
                   ?___flge 0072                     ?___fleq 0072                     ?___wmul 0072  
                __pintentry 0004                     ?_fround 0042   __size_of_Lcd_Write_String 0042  
    __end_of_Lcd_Set_Cursor 19CE                  _com_master 125D                   ?___xxtofl 0072  
                ??_Lcd_Init 0075                     _SSPCON2 0091                     _SSPSTAT 0094  
                __stringtab 1000              _Lcd_Write_Char 1954                     _Lcd_Cmd 1975  
     __end_of_valorsensores 1BEB           __end_of__npowers_ 1078                  _scale$1282 0050  
__size_of_configuracionUART 0015          cadena_caracteres@i 0074             __size_of___flge 00A4  
           __size_of___fleq 0050                     ___fladd 1578                     ___awdiv 1DA2  
                   ___flneg 193C                     ___awmod 1CE1                     ___flmul 093C  
                   ___flsub 1C3B                     ___fltol 1E0B                     ___lldiv 1D3A  
           __size_of___wmul 0025                     ___llmod 1C8B                     ___lwdiv 1B5B  
                   ___lwmod 1ADF                     _datPeso 00D4             __size_of_fround 020D  
           ?_Lcd_Set_Cursor 0075                     __ptext1 1BA1                     __ptext2 0026  
                   __ptext3 0C9D                     __ptext4 1CE1                     __ptext5 1DA2  
                   __ptext6 1963                     __ptext7 136B                     __ptext8 1ADF  
                   __ptext9 1B5B                 ?__div_to_l_ 0072                     _dpowers 1078  
                   _isdigit 1963                __size_of_isr 0026                  ??___xxtofl 0076  
          ___awmod@dividend 0074    __size_of_I2C_Master_Init 0038    __size_of_I2C_Master_Read 002E  
  __size_of_I2C_Master_Wait 000D    __size_of_I2C_Master_Stop 0009            ??_Envio_caracter 0072  
                   _sprintf 0026           _cadena_caracteres 1989                     clrloop0 1918  
    __end_of_Lcd_Write_Char 1963        end_of_initialization 0022          ?_cadena_caracteres 0070  
 __size_of_I2C_Master_Start 0009   __size_of_I2C_Master_Write 000A             ___lldiv@divisor 0072  
           ___lldiv@counter 0024         ??_cadena_caracteres 0073                   _RCSTAbits 0018  
          I2C_Master_Init@c 0025            I2C_Master_Read@a 0072              __tdiv_to_l_@f1 0072  
            __tdiv_to_l_@f2 0076               ??__tdiv_to_l_ 0020                   _PORTBbits 0006  
                 _PORTEbits 0009                 ?_com_master 0070                 ___fladd@grs 0069  
             ___xxtofl@sign 0020                   _TRISBbits 0086   __end_of_cadena_caracteres 19AA  
                 _TRISCbits 0087             ?_Lcd_Write_Char 0070           Lcd_Write_String@a 0074  
         Lcd_Write_String@i 0079                 ___flmul@grs 0036                   _TXSTAbits 0098  
       __size_of__div_to_l_ 00BE              __end_of___flge 119F              __end_of___fleq 1C3B  
            __end_of___wmul 19F3            _Lcd_Write_String 1B19                 _BAUDCTLbits 0187  
            __end_of_fround 1578         start_initialization 000F         __end_of__tdiv_to_l_ 2000  
               __end_of_isr 1A19           __size_of_Lcd_Init 0035           ??_I2C_Master_Init 0029  
         ??_I2C_Master_Read 0074           ??_I2C_Master_Wait 0072           ??_I2C_Master_Stop 0072  
           ___llmod@divisor 0025             ___llmod@counter 002E         __size_of_com_master 010E  
                  ??___flge 0020                    ??___fleq 0020                    ??___wmul 0076  
                 __Umul8_16 1A19             Lcd_Write_Char@a 0073                    ??_fround 0046  
             sprintf@tmpval 00B6                   ___fladd@a 005A                   ___fladd@b 0056  
                fround@prec 0055                   ___flmul@a 002C                   ___flmul@b 0028  
               __pbssCOMMON 007B                   ___flsub@a 00A0                   ___flsub@b 00A4  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00A0  
__size_of_cadena_caracteres 0021           __size_of___xxtofl 00BC                _isdigit$1078 0072  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00B2                 sprintf@eexp 00B4  
               sprintf@fval 00BE                 sprintf@prec 00C2            _I2C_Master_Start 191F  
          _I2C_Master_Write 1928            ___lwdiv@dividend 0022      Envio_caracter@caracter 0072  
          ??_Lcd_Set_Cursor 0076                    ?___fladd 0056                    ?___awdiv 0020  
                  ?___flneg 0072                    ?___awmod 0072                    ?___flmul 0028  
                  ?___flsub 00A0                    ?___fltol 0055                    ?___lldiv 0072  
                  ?___llmod 0025                   __npowers_ 1044                  ?__Umul8_16 0072  
                  ?___lwdiv 0020                    ?___lwmod 0072                   __pstrings 1000  
               __tdiv_to_l_ 1F43                ??__div_to_l_ 007A                    ?_isdigit 0070  
          ___lwdiv@quotient 0025                    ?_sprintf 006A              __size_of_scale 0363  
            __size_of_setup 0032           interrupt_function 0004              ___wmul@product 0076  
                  _IOCBbits 0096                   clear_ram0 1917                    Lcd_Cmd@a 0074  
        __end_of__div_to_l_ 125D                 __stringbase 100F                    _BanStart 007B  
         ___wmul@multiplier 0072      __size_of_valorsensores 004A                ??_com_master 0078  
          ??_Lcd_Write_Char 0072                    _Lcd_Init 1A72         I2C_Master_Read@temp 0076  
  __end_of_Lcd_Write_String 1B5B            __size_of_Lcd_Cmd 0014          __end_of_com_master 136B  
       cadena_caracteres@st 0076                 ??__Umul8_16 0074            __size_of___fladd 0288  
          __size_of___awdiv 0069            __size_of___flneg 000B            __size_of___awmod 0059  
          __size_of___flmul 0361            __size_of___flsub 0050            __size_of___fltol 007C  
          __size_of___lldiv 0068            __size_of___llmod 0056            __size_of___lwdiv 0046  
          __size_of___lwmod 003A                 _fround$1280 0051                 _fround$1281 004D  
        __end_of__stringtab 1010                  sprintf@val 00BA             _I2C_Master_Init 1AA7  
           _I2C_Master_Read 07D0                    ___xxtofl 1E87             _I2C_Master_Wait 1947  
           _I2C_Master_Stop 10F2            __size_of_isdigit 0012             ___lwdiv@divisor 0020  
           ___lwdiv@counter 0024                    __ptext10 093C                    __ptext11 1A19  
                  __ptext20 193C                    __ptext12 1F43                    __ptext21 10FB  
                  __ptext13 119F                    __ptext30 1928                    __ptext22 1BEB  
                  __ptext14 1E87                    __ptext31 10F2                    __ptext23 1989  
                  __ptext15 19CE                    __ptext40 19F3                    __ptext32 191F  
                  __ptext24 1932                    __ptext16 1C8B                    __ptext33 07D0  
                  __ptext25 1A40                    __ptext17 1E0B                    __ptext34 1947  
                  __ptext26 0803                    __ptext18 1C3B                    __ptext35 1B19  
                  __ptext27 1AA7                    __ptext19 1578                    __ptext36 1954  
                  __ptext28 1D3A                    __ptext37 19AA                    __ptext29 125D  
                  __ptext38 1A72                    __ptext39 1975                    __powers_ 1010  
                  _contador 00E2            __size_of_sprintf 07AA               __size_of_main 0124  
             _valorsensores 1BA1     __size_of_Envio_caracter 000A    __end_of_I2C_Master_Start 1928  
  __end_of_I2C_Master_Write 1932                  _INTCONbits 000B              _contRecipiente 00D8  
                  isdigit@c 0073                    scale@scl 0054                    intlevel1 0000  
                 sprintf@ap 00B1            __tdiv_to_l_@exp1 0029            __tdiv_to_l_@cntr 0028  
                 sprintf@sp 00C4            __tdiv_to_l_@quot 0024            ___lwmod@dividend 0074  
            ?_valorsensores 0070            ___lldiv@dividend 0076                   stringcode 100A  
                _OSCCONbits 008F     __end_of_I2C_Master_Init 1ADF     __end_of_I2C_Master_Read 07FE  
   __end_of_I2C_Master_Wait 1954     __end_of_I2C_Master_Stop 10FB          Lcd_Set_Cursor@temp 0078  
              ?__tdiv_to_l_ 0072      __Umul8_16@multiplicand 0072                    sprintf@c 00C5  
                  sprintf@f 006A            ___lldiv@quotient 0020           I2C_Master_Write@d 0072  
           ___lwmod@divisor 0072             ___lwmod@counter 0077                    stringdir 100A  
                  stringtab 1000                 _SSPCON2bits 0091               ___fladd@signs 0066  
              ___fladd@aexp 0067                ___fladd@bexp 0068        __Umul8_16@multiplier 007A  
         __Umul8_16@product 0076  
